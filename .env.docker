# ==============================================
# Robot Console Docker Environment Configuration
# ==============================================

# ==============================================
# Environment Setting
# ==============================================
ENVIRONMENT=production
# Options: development, production

# ==============================================
# Database Configuration (MySQL)
# ==============================================
MYSQL_ROOT_PASSWORD=strong_root_password_change_me
MYSQL_HOST=mysql
MYSQL_PORT=3306
MYSQL_USER=robot_console
MYSQL_PASSWORD=secure_password_change_me
MYSQL_DATABASE=robot_console
DATABASE_TYPE=mysql

# ==============================================
# Application Security
# ==============================================
# Generate a strong secret key for JWT tokens
# You can use: openssl rand -hex 32
SECRET_KEY=change_me_to_a_very_long_random_string_for_jwt_security

# ==============================================
# CORS Configuration
# ==============================================
# Development CORS origins
CORS_ORIGINS=http://localhost:3000,http://localhost:5173,http://localhost

# Production CORS origins - UPDATE with your actual domain/IP
PRODUCTION_CORS_ORIGINS=https://your-domain.com,http://your-vps-ip

# ==============================================
# Server Configuration
# ==============================================
HOST=0.0.0.0
PORT=8000

# VPS Configuration - UPDATE with your VPS IP/domain
VPS_URL=http://your-vps-ip
DOMAIN_NAME=your-domain.com

# ==============================================
# Video Configuration
# ==============================================
VIDEO_STORAGE_PATH=/app/videos
MAX_VIDEO_SIZE_MB=100

# ==============================================
# WebRTC/Video Streaming
# ==============================================
VIDEO_SERVER_HOST=video-server
VIDEO_SERVER_PORT=8888
WEBRTC_STUN_SERVERS=stun:stun.l.google.com:19302,stun:stun1.l.google.com:19302

# ==============================================
# Admin Configuration
# ==============================================
ADMIN_EMAIL=admin@your-domain.com
ADMIN_PASSWORD=change_me_strong_password

# ==============================================
# Demo User Credentials (for testing)
# ==============================================
DEMO_USER_EMAIL=demo@user.com
DEMO_USER_PASSWORD=demo_password
DEMO_ADMIN_EMAIL=admin@demo.com
DEMO_ADMIN_PASSWORD=admin_password

# ==============================================
# Redis Configuration (Optional)
# ==============================================
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# ==============================================
# SSL/TLS Configuration (for production)
# ==============================================
SSL_CERT_PATH=/etc/nginx/ssl/cert.pem
SSL_KEY_PATH=/etc/nginx/ssl/key.pem
SSL_ENABLED=false

# ==============================================
# Logging Configuration
# ==============================================
LOG_LEVEL=INFO
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL

# ==============================================
# Docker Compose Profiles
# ==============================================
# Available profiles:
# - default: basic services (mysql, backend, frontend, theia-base, video-server)
# - production: includes nginx-proxy and redis
# - development: minimal setup for development

# To use specific profiles:
# docker-compose --profile production up -d
# docker-compose --profile development up -d