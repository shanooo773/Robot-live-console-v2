services:
  # WebRTC Signaling Service - Real-time robot telemetry and video streaming
  webrtc-signaling:
    build:
      context: ./webrtc
      dockerfile: Dockerfile
    image: robot-webrtc-signaling:latest
    container_name: webrtc-signaling
    ports:
      - "8080:8080"   # WebRTC signaling server
      - "3478:3478"   # STUN server port
      - "5349:5349"   # TURN server port
    environment:
      - NODE_ENV=${ENVIRONMENT:-development}
      - SIGNALING_PORT=${WEBRTC_SIGNALING_PORT:-8080}
      - STUN_PORT=${WEBRTC_STUN_PORT:-3478}
      - TURN_PORT=${WEBRTC_TURN_PORT:-5349}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000,http://localhost:5173}
    networks:
      - robot-console-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Eclipse Theia IDE Base Service (for image building only)
  # Individual user containers are managed dynamically by the backend
  theia-base:
    build:
      context: ./theia
      dockerfile: Dockerfile
    image: robot-console-theia:latest
    container_name: theia-base
    # This service is only used for building the base image
    # It doesn't run continuously - user containers are managed by backend API
    profiles:
      - build-only
    environment:
      - THEIA_BASE_PORT=${THEIA_BASE_PORT:-3001}
      - THEIA_PROJECT_PATH=${THEIA_PROJECT_PATH:-./projects}
    networks:
      - robot-console-network
    volumes:
      - type: bind
        source: ./projects
        target: /home/project
        bind:
          create_host_path: true

networks:
  robot-console-network:
    driver: bridge
    name: robot-console-network
    external: true

volumes:
  # Persistent storage for user project directories
  # Projects are stored as bind mounts from ./projects to enable
  # direct file access and persistence across container restarts
  # Each user gets their own isolated directory mounted at /home/project
  projects_data:
    driver: local
    driver_opts:
      type: bind
      o: bind
      device: ./projects