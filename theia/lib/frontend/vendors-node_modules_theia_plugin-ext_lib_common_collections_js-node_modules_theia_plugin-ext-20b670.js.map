{"version":3,"file":"vendors-node_modules_theia_plugin-ext_lib_common_collections_js-node_modules_theia_plugin-ext-20b670.js","mappings":"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","sources":["webpack:///./node_modules/@theia/plugin-ext/src/common/collections.ts?","webpack:///./node_modules/@theia/plugin-ext/src/common/connection.ts?","webpack:///./node_modules/@theia/plugin-ext/src/common/editor-options.ts?","webpack:///./node_modules/@theia/plugin-ext/src/common/lm-protocol.ts?","webpack:///./node_modules/@theia/plugin-ext/src/common/test-types.ts?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2022 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// some code copied and modified from https://github.com/microsoft/vscode/blob/1.71.2/src/vs/base/common/collections.ts\n\nexport function diffSets<T>(before: Set<T>, after: Set<T>): { removed: T[]; added: T[] } {\n    const removed: T[] = [];\n    const added: T[] = [];\n    for (const element of before) {\n        if (!after.has(element)) {\n            removed.push(element);\n        }\n    }\n    for (const element of after) {\n        if (!before.has(element)) {\n            added.push(element);\n        }\n    }\n    return { removed, added };\n}\n\nexport function diffMaps<K, V>(before: Map<K, V>, after: Map<K, V>): { removed: V[]; added: V[] } {\n    const removed: V[] = [];\n    const added: V[] = [];\n    for (const [index, value] of before) {\n        if (!after.has(index)) {\n            removed.push(value);\n        }\n    }\n    for (const [index, value] of after) {\n        if (!before.has(index)) {\n            added.push(value);\n        }\n    }\n    return { removed, added };\n}\n\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { DebugChannel } from '@theia/debug/lib/common/debug-service';\nimport { ConnectionExt, ConnectionMain } from './plugin-api-rpc';\nimport { Emitter } from '@theia/core/lib/common/event';\n\n/**\n * A channel communicating with a counterpart in a plugin host.\n */\nexport class PluginChannel implements DebugChannel {\n    private messageEmitter: Emitter<string> = new Emitter();\n    private errorEmitter: Emitter<unknown> = new Emitter();\n    private closedEmitter: Emitter<void> = new Emitter();\n\n    constructor(\n        protected readonly id: string,\n        protected readonly connection: ConnectionExt | ConnectionMain) { }\n\n    send(content: string): void {\n        this.connection.$sendMessage(this.id, content);\n    }\n\n    fireMessageReceived(msg: string): void {\n        this.messageEmitter.fire(msg);\n    }\n\n    fireError(error: unknown): void {\n        this.errorEmitter.fire(error);\n    }\n\n    fireClosed(): void {\n        this.closedEmitter.fire();\n    }\n\n    onMessage(cb: (message: string) => void): void {\n        this.messageEmitter.event(cb);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onError(cb: (reason: any) => void): void {\n        this.errorEmitter.event(cb);\n    }\n\n    onClose(cb: (code: number, reason: string) => void): void {\n        this.closedEmitter.event(() => cb(-1, 'closed'));\n    }\n\n    close(): void {\n        this.connection.$deleteConnection(this.id);\n    }\n}\n\nexport class ConnectionImpl implements ConnectionMain, ConnectionExt {\n    private readonly proxy: ConnectionExt | ConnectionExt;\n    private readonly connections = new Map<string, PluginChannel>();\n\n    constructor(proxy: ConnectionMain | ConnectionExt) {\n        this.proxy = proxy;\n    }\n\n    /**\n     * Gets the connection between plugin by id and sends string message to it.\n     *\n     * @param id connection's id\n     * @param message incoming message\n     */\n    async $sendMessage(id: string, message: string): Promise<void> {\n        if (this.connections.has(id)) {\n            this.connections.get(id)!.fireMessageReceived(message);\n        } else {\n            console.warn(`Received message for unknown connection: ${id}`);\n        }\n    }\n\n    /**\n     * Instantiates a new connection by the given id.\n     * @param id the connection id\n     */\n    async $createConnection(id: string): Promise<void> {\n        console.debug(`Creating plugin connection: ${id}`);\n\n        await this.doEnsureConnection(id);\n    }\n\n    /**\n     * Deletes a connection.\n     * @param id the connection id\n     */\n    async $deleteConnection(id: string): Promise<void> {\n        console.debug(`Deleting plugin connection: ${id}`);\n        const connection = this.connections.get(id);\n        if (connection) {\n            this.connections.delete(id);\n            connection.fireClosed();\n        }\n    }\n\n    /**\n     * Returns existed connection or creates a new one.\n     * @param id the connection id\n     */\n    async ensureConnection(id: string): Promise<PluginChannel> {\n        console.debug(`Creating local connection: ${id}`);\n        const connection = await this.doEnsureConnection(id);\n        await this.proxy.$createConnection(id);\n        return connection;\n    }\n\n    /**\n     * Returns existed connection or creates a new one.\n     * @param id the connection id\n     */\n    async doEnsureConnection(id: string): Promise<PluginChannel> {\n        const connection = this.connections.get(id) || await this.doCreateConnection(id);\n        this.connections.set(id, connection);\n        return connection;\n    }\n\n    protected async doCreateConnection(id: string): Promise<PluginChannel> {\n        const channel = new PluginChannel(id, this.proxy);\n        channel.onClose(() => this.connections.delete(id));\n        return channel;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// enum copied from monaco.d.ts\n/**\n * The style in which the editor's cursor should be rendered.\n */\nexport enum TextEditorCursorStyle {\n    /**\n     * As a vertical line\n     */\n    Line = 1,\n\n    /**\n     * As a block\n     */\n    Block = 2,\n\n    /**\n     * As a horizontal line, under character\n     */\n    Underline = 3,\n\n    /**\n     * As a thin vertical line\n     */\n    LineThin = 4,\n\n    /**\n     * As an outlined block, on top of a character\n     */\n    BlockOutline = 5,\n\n    /**\n     * As a thin horizontal line, under a character\n     */\n    UnderlineThin = 6\n}\n\nexport function cursorStyleToString(cursorStyle: TextEditorCursorStyle): 'line' | 'block' | 'underline' | 'line-thin' | 'block-outline' | 'underline-thin' {\n    switch (cursorStyle) {\n        case TextEditorCursorStyle.Line:\n            return 'line';\n        case TextEditorCursorStyle.Block:\n            return 'block';\n        case TextEditorCursorStyle.Underline:\n            return 'underline';\n        case TextEditorCursorStyle.LineThin:\n            return 'line-thin';\n        case TextEditorCursorStyle.BlockOutline:\n            return 'block-outline';\n        case TextEditorCursorStyle.UnderlineThin:\n            return 'underline-thin';\n        default:\n            throw new Error('cursorStyleToString: Unknown cursorStyle');\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2025 EclipseSource.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { UriComponents } from './uri-components';\n\n/**\n * Protocol interfaces for MCP server definition providers.\n */\n\nexport interface McpStdioServerDefinitionDto {\n    /**\n     * The human-readable name of the server.\n     */\n    readonly label: string;\n\n    /**\n     * The working directory used to start the server.\n     */\n    cwd?: UriComponents;\n\n    /**\n     * The command used to start the server. Node.js-based servers may use\n     * `process.execPath` to use the editor's version of Node.js to run the script.\n     */\n    command: string;\n\n    /**\n     * Additional command-line arguments passed to the server.\n     */\n    args?: string[];\n\n    /**\n     * Optional additional environment information for the server. Variables\n     * in this environment will overwrite or remove (if null) the default\n     * environment variables of the editor's extension host.\n     */\n    env?: Record<string, string | number | null>;\n\n    /**\n     * Optional version identification for the server. If this changes, the\n     * editor will indicate that tools have changed and prompt to refresh them.\n     */\n    version?: string;\n\n}\n\n/**\n * McpHttpServerDefinition represents an MCP server available using the\n * Streamable HTTP transport.\n */\nexport interface McpHttpServerDefinitionDto {\n    /**\n     * The human-readable name of the server.\n     */\n    readonly label: string;\n\n    /**\n     * The URI of the server. The editor will make a POST request to this URI\n     * to begin each session.\n     */\n    uri: UriComponents;\n\n    /**\n     * Optional additional heads included with each request to the server.\n     */\n    headers?: Record<string, string>;\n\n    /**\n     * Optional version identification for the server. If this changes, the\n     * editor will indicate that tools have changed and prompt to refresh them.\n     */\n    version?: string;\n}\n\n/**\n * Definitions that describe different types of Model Context Protocol servers,\n * which can be returned from the {@link McpServerDefinitionProvider}.\n */\nexport type McpServerDefinitionDto = McpStdioServerDefinitionDto | McpHttpServerDefinitionDto;\nexport const isMcpHttpServerDefinitionDto = (definition: McpServerDefinitionDto): definition is McpHttpServerDefinitionDto => 'uri' in definition;\n/**\n * Main side of the MCP server definition registry.\n */\nexport interface McpServerDefinitionRegistryMain {\n    /**\n     * Register an MCP server definition provider.\n     */\n    $registerMcpServerDefinitionProvider(handle: number, name: string): void;\n\n    /**\n     * Unregister an MCP server definition provider.\n     */\n    $unregisterMcpServerDefinitionProvider(handle: number): void;\n\n    /**\n     * Notify that server definitions have changed.\n     */\n    $onDidChangeMcpServerDefinitions(handle: number): void;\n\n    /**\n     * Get server definitions from a provider.\n     */\n    $getServerDefinitions(handle: number): Promise<McpServerDefinitionDto[]>;\n\n    /**\n     * Resolve a server definition.\n     */\n    $resolveServerDefinition(handle: number, server: McpServerDefinitionDto): Promise<McpServerDefinitionDto | undefined>;\n}\n\n/**\n * Extension side of the MCP server definition registry.\n */\nexport interface McpServerDefinitionRegistryExt {\n    /**\n     * Request server definitions from a provider.\n     */\n    $provideServerDefinitions(handle: number): Promise<McpServerDefinitionDto[]>;\n\n    /**\n     * Resolve a server definition from a provider.\n     */\n    $resolveServerDefinition(handle: number, server: McpServerDefinitionDto): Promise<McpServerDefinitionDto | undefined>;\n}\n","// *****************************************************************************\n// Copyright (C) 2023 Mathieu Bussieres and others.\n\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation and others. All rights reserved.\n *  Licensed under the MIT License. See https://github.com/Microsoft/vscode/blob/master/LICENSE.txt for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// Based on https://github.com/microsoft/vscode/blob/1.72.2/src/vs/workbench/contrib/testing/common/testTypes.ts\n\n/* eslint-disable import/no-extraneous-dependencies */\n\nimport { MarkdownString } from '@theia/core/lib/common/markdown-rendering';\nimport { UriComponents } from './uri-components';\nimport { Location, Range } from './plugin-api-rpc-model';\nimport { isObject } from '@theia/core';\nimport * as languageProtocol from '@theia/core/shared/vscode-languageserver-protocol';\n\nexport enum TestRunProfileKind {\n    Run = 1,\n    Debug = 2,\n    Coverage = 3\n}\n\nexport interface TestRunProfileDTO {\n    readonly id: string;\n    readonly label: string;\n    readonly kind: TestRunProfileKind;\n    readonly isDefault: boolean;\n    readonly tag: string;\n    readonly canConfigure: boolean;\n}\nexport interface TestRunDTO {\n    readonly id: string;\n    readonly name: string;\n    readonly isRunning: boolean;\n}\n\nexport interface TestOutputDTO {\n    readonly output: string;\n    readonly location?: Location;\n    readonly itemPath?: string[];\n}\n\nexport enum TestExecutionState {\n    Queued = 1,\n    Running = 2,\n    Passed = 3,\n    Failed = 4,\n    Skipped = 5,\n    Errored = 6\n}\n\nexport interface TestStateChangeDTO {\n    readonly state: TestExecutionState;\n    readonly itemPath: string[];\n}\n\nexport interface TestFailureDTO extends TestStateChangeDTO {\n    readonly state: TestExecutionState.Failed | TestExecutionState.Errored;\n    readonly messages: TestMessageDTO[];\n    readonly duration?: number;\n}\n\nexport namespace TestFailureDTO {\n    export function is(ref: unknown): ref is TestFailureDTO {\n        return isObject<TestFailureDTO>(ref)\n            && (ref.state === TestExecutionState.Failed || ref.state === TestExecutionState.Errored);\n    }\n}\nexport interface TestSuccessDTO extends TestStateChangeDTO {\n    readonly state: TestExecutionState.Passed;\n    readonly duration?: number;\n}\n\nexport interface TestMessageStackFrameDTO {\n    uri?: languageProtocol.DocumentUri;\n    position?: languageProtocol.Position;\n    label: string;\n}\n\nexport interface TestMessageDTO {\n    readonly expected?: string;\n    readonly actual?: string;\n    readonly location?: languageProtocol.Location;\n    readonly message: string | MarkdownString;\n    readonly contextValue?: string;\n    readonly stackTrace?: TestMessageStackFrameDTO[];\n}\n\nexport interface TestItemDTO {\n    readonly id: string;\n    readonly label: string;\n    readonly range?: Range;\n    readonly sortKey?: string;\n    readonly tags: string[];\n    readonly uri?: UriComponents;\n    readonly busy: boolean;\n    readonly canResolveChildren: boolean;\n    readonly description?: string;\n    readonly error?: string | MarkdownString\n    readonly children?: TestItemDTO[];\n}\n\nexport interface TestRunRequestDTO {\n    controllerId: string;\n    profileId: string;\n    name: string;\n    includedTests: string[][]; // array of paths\n    excludedTests: string[][]; // array of paths\n    preserveFocus: boolean;\n}\n\nexport interface TestItemReference {\n    typeTag: '$type_test_item_reference',\n    controllerId: string;\n    testPath: string[];\n}\n\nexport namespace TestItemReference {\n    export function is(ref: unknown): ref is TestItemReference {\n        return isObject<TestItemReference>(ref)\n            && ref.typeTag === '$type_test_item_reference'\n            && typeof ref.controllerId === 'string'\n            && Array.isArray(ref.testPath);\n    }\n\n    export function create(controllerId: string, testPath: string[]): TestItemReference {\n        return {\n            typeTag: '$type_test_item_reference',\n            controllerId,\n            testPath\n        };\n    }\n}\n\nexport interface TestMessageArg {\n    testItemReference: TestItemReference | undefined,\n    testMessage: TestMessageDTO\n}\n\nexport namespace TestMessageArg {\n    export function is(arg: unknown): arg is TestMessageArg {\n        return isObject<TestMessageArg>(arg)\n            && isObject<TestMessageDTO>(arg.testMessage)\n            && (MarkdownString.is(arg.testMessage.message) || typeof arg.testMessage.message === 'string');\n    }\n\n    export function create(testItemReference: TestItemReference | undefined, testMessageDTO: TestMessageDTO): TestMessageArg {\n        return {\n            testItemReference: testItemReference,\n            testMessage: testMessageDTO\n        };\n    }\n}\n"],"names":[],"sourceRoot":""}