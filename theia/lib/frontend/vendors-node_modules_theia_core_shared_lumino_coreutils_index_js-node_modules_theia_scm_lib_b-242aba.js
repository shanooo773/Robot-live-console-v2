(self["webpackChunk"] = self["webpackChunk"] || []).push([["vendors-node_modules_theia_core_shared_lumino_coreutils_index_js-node_modules_theia_scm_lib_b-242aba"],{

/***/ "./node_modules/@theia/core/shared/@lumino/coreutils/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/@theia/core/shared/@lumino/coreutils/index.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(/*! @lumino/coreutils */ "./node_modules/@lumino/coreutils/dist/index.js");


/***/ }),

/***/ "./node_modules/@theia/scm/lib/browser/decorations/scm-tab-bar-decorator.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@theia/scm/lib/browser/decorations/scm-tab-bar-decorator.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

// *****************************************************************************
// Copyright (C) 2020 Ericsson and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ScmTabBarDecorator = void 0;
const tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
const inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify/index.js");
const event_1 = __webpack_require__(/*! @theia/core/lib/common/event */ "./node_modules/@theia/core/lib/common/event.js");
const scm_service_1 = __webpack_require__(/*! ../scm-service */ "./node_modules/@theia/scm/lib/browser/scm-service.js");
const browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "./node_modules/@theia/core/lib/browser/index.js");
const disposable_1 = __webpack_require__(/*! @theia/core/lib/common/disposable */ "./node_modules/@theia/core/lib/common/disposable.js");
const scm_widget_1 = __webpack_require__(/*! ../scm-widget */ "./node_modules/@theia/scm/lib/browser/scm-widget.js");
let ScmTabBarDecorator = class ScmTabBarDecorator {
    constructor() {
        this.id = 'theia-scm-tabbar-decorator';
        this.emitter = new event_1.Emitter();
        this.toDispose = new disposable_1.DisposableCollection();
        this.toDisposeOnDidChange = new disposable_1.DisposableCollection();
    }
    init() {
        this.toDispose.push(this.scmService.onDidChangeSelectedRepository(repository => {
            this.toDisposeOnDidChange.dispose();
            if (repository) {
                this.toDisposeOnDidChange.push(repository.provider.onDidChange(() => this.fireDidChangeDecorations()));
            }
            this.fireDidChangeDecorations();
        }));
    }
    decorate(title) {
        const { owner } = title;
        if (owner instanceof browser_1.ViewContainer && owner.getParts().find(part => part.wrapped instanceof scm_widget_1.ScmWidget)) {
            const changes = this.collectChangesCount();
            return changes > 0 ? [{ badge: changes }] : [];
        }
        else {
            return [];
        }
    }
    collectChangesCount() {
        const repository = this.scmService.selectedRepository;
        let changes = 0;
        if (!repository) {
            return 0;
        }
        repository.provider.groups.map(group => {
            if (group.id === 'index' || group.id === 'workingTree') {
                changes += group.resources.length;
            }
        });
        return changes;
    }
    get onDidChangeDecorations() {
        return this.emitter.event;
    }
    fireDidChangeDecorations() {
        this.emitter.fire(undefined);
    }
};
exports.ScmTabBarDecorator = ScmTabBarDecorator;
tslib_1.__decorate([
    (0, inversify_1.inject)(scm_service_1.ScmService),
    tslib_1.__metadata("design:type", scm_service_1.ScmService)
], ScmTabBarDecorator.prototype, "scmService", void 0);
tslib_1.__decorate([
    (0, inversify_1.postConstruct)(),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", []),
    tslib_1.__metadata("design:returntype", void 0)
], ScmTabBarDecorator.prototype, "init", null);
exports.ScmTabBarDecorator = ScmTabBarDecorator = tslib_1.__decorate([
    (0, inversify_1.injectable)()
], ScmTabBarDecorator);


/***/ }),

/***/ "./node_modules/@theia/scm/lib/browser/dirty-diff/dirty-diff-module.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@theia/scm/lib/browser/dirty-diff/dirty-diff-module.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

// *****************************************************************************
// Copyright (C) 2018 TypeFox and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.bindDirtyDiff = void 0;
const dirty_diff_decorator_1 = __webpack_require__(/*! ./dirty-diff-decorator */ "./node_modules/@theia/scm/lib/browser/dirty-diff/dirty-diff-decorator.js");
const dirty_diff_navigator_1 = __webpack_require__(/*! ./dirty-diff-navigator */ "./node_modules/@theia/scm/lib/browser/dirty-diff/dirty-diff-navigator.js");
const dirty_diff_widget_1 = __webpack_require__(/*! ./dirty-diff-widget */ "./node_modules/@theia/scm/lib/browser/dirty-diff/dirty-diff-widget.js");
__webpack_require__(/*! ../../../src/browser/style/dirty-diff.css */ "./node_modules/@theia/scm/src/browser/style/dirty-diff.css");
function bindDirtyDiff(bind) {
    bind(dirty_diff_decorator_1.DirtyDiffDecorator).toSelf().inSingletonScope();
    bind(dirty_diff_navigator_1.DirtyDiffNavigator).toSelf().inSingletonScope();
    bind(dirty_diff_widget_1.DirtyDiffWidgetFactory).toFactory(({ container }) => props => {
        const child = container.createChild();
        child.bind(dirty_diff_widget_1.DirtyDiffWidgetProps).toConstantValue(props);
        child.bind(dirty_diff_widget_1.DirtyDiffWidget).toSelf();
        return child.get(dirty_diff_widget_1.DirtyDiffWidget);
    });
}
exports.bindDirtyDiff = bindDirtyDiff;


/***/ }),

/***/ "./node_modules/@theia/scm/lib/browser/merge-editor/merge-editor-contribution.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@theia/scm/lib/browser/merge-editor/merge-editor-contribution.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

// *****************************************************************************
// Copyright (C) 2025 1C-Soft LLC and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MergeEditorContribution = exports.MergeEditorCommands = void 0;
const tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
const inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify/index.js");
const core_1 = __webpack_require__(/*! @theia/core */ "./node_modules/@theia/core/lib/common/index.js");
const browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "./node_modules/@theia/core/lib/browser/index.js");
const color_1 = __webpack_require__(/*! @theia/core/lib/common/color */ "./node_modules/@theia/core/lib/common/color.js");
const scm_colors_1 = __webpack_require__(/*! ../scm-colors */ "./node_modules/@theia/scm/lib/browser/scm-colors.js");
const merge_editor_1 = __webpack_require__(/*! ./merge-editor */ "./node_modules/@theia/scm/lib/browser/merge-editor/merge-editor.js");
var MergeEditorCommands;
(function (MergeEditorCommands) {
    MergeEditorCommands.MERGE_EDITOR_CATEGORY = 'Merge Editor';
    MergeEditorCommands.ACCEPT_MERGE = core_1.Command.toDefaultLocalizedCommand({
        id: 'mergeEditor.acceptMerge', // don't change: this is an API command
        label: 'Complete Merge',
        category: MergeEditorCommands.MERGE_EDITOR_CATEGORY
    });
    MergeEditorCommands.GO_TO_NEXT_UNHANDLED_CONFLICT = core_1.Command.toDefaultLocalizedCommand({
        id: 'mergeEditor.goToNextUnhandledConflict',
        label: 'Go to Next Unhandled Conflict',
        category: MergeEditorCommands.MERGE_EDITOR_CATEGORY
    });
    MergeEditorCommands.GO_TO_PREVIOUS_UNHANDLED_CONFLICT = core_1.Command.toDefaultLocalizedCommand({
        id: 'mergeEditor.goToPreviousUnhandledConflict',
        label: 'Go to Previous Unhandled Conflict',
        category: MergeEditorCommands.MERGE_EDITOR_CATEGORY
    });
    MergeEditorCommands.SET_MIXED_LAYOUT = core_1.Command.toDefaultLocalizedCommand({
        id: 'mergeEditor.setMixedLayout',
        label: 'Mixed Layout',
        category: MergeEditorCommands.MERGE_EDITOR_CATEGORY
    });
    MergeEditorCommands.SET_COLUMN_LAYOUT = core_1.Command.toDefaultLocalizedCommand({
        id: 'mergeEditor.setColumnLayout',
        label: 'Column Layout',
        category: MergeEditorCommands.MERGE_EDITOR_CATEGORY
    });
    MergeEditorCommands.SHOW_BASE = core_1.Command.toDefaultLocalizedCommand({
        id: 'mergeEditor.showBase',
        label: 'Show Base',
        category: MergeEditorCommands.MERGE_EDITOR_CATEGORY
    });
    MergeEditorCommands.SHOW_BASE_TOP = core_1.Command.toDefaultLocalizedCommand({
        id: 'mergeEditor.showBaseTop',
        label: 'Show Base Top',
        category: MergeEditorCommands.MERGE_EDITOR_CATEGORY
    });
    MergeEditorCommands.SHOW_BASE_CENTER = core_1.Command.toDefaultLocalizedCommand({
        id: 'mergeEditor.showBaseCenter',
        label: 'Show Base Center',
        category: MergeEditorCommands.MERGE_EDITOR_CATEGORY
    });
})(MergeEditorCommands || (exports.MergeEditorCommands = MergeEditorCommands = {}));
let MergeEditorContribution = class MergeEditorContribution {
    onStart() {
        this.settings.load();
    }
    onStop() {
        this.settings.save();
    }
    getMergeEditor(widget = this.shell.currentWidget) {
        return widget instanceof merge_editor_1.MergeEditor ? widget : ((widget === null || widget === void 0 ? void 0 : widget.parent) ? this.getMergeEditor(widget.parent) : undefined);
    }
    registerCommands(commands) {
        commands.registerCommand(MergeEditorCommands.ACCEPT_MERGE, {
            execute: async (widget) => {
                const editor = this.getMergeEditor(widget);
                if (editor) {
                    let canceled = false;
                    if (editor.model.unhandledMergeRangesCount > 0) {
                        canceled = !(await new browser_1.ConfirmDialog({
                            title: core_1.nls.localizeByDefault('Do you want to complete the merge of {0}?', this.labelProvider.getName(editor.resultUri)),
                            msg: core_1.nls.localizeByDefault('The file contains unhandled conflicts.'),
                            ok: core_1.nls.localizeByDefault('Complete with Conflicts')
                        }).open());
                    }
                    if (!canceled) {
                        await editor.model.resultDocument.save();
                        editor.close();
                        return {
                            successful: true
                        };
                    }
                }
                return {
                    successful: false
                };
            },
            isEnabled: widget => !!this.getMergeEditor(widget),
            isVisible: widget => !!this.getMergeEditor(widget)
        });
        commands.registerCommand(MergeEditorCommands.GO_TO_NEXT_UNHANDLED_CONFLICT, {
            execute: widget => {
                const editor = this.getMergeEditor(widget);
                if (editor) {
                    editor.goToNextMergeRange(mergeRange => !editor.model.isMergeRangeHandled(mergeRange));
                    editor.activate();
                }
            },
            isEnabled: widget => !!this.getMergeEditor(widget),
            isVisible: widget => !!this.getMergeEditor(widget)
        });
        commands.registerCommand(MergeEditorCommands.GO_TO_PREVIOUS_UNHANDLED_CONFLICT, {
            execute: widget => {
                const editor = this.getMergeEditor(widget);
                if (editor) {
                    editor.goToPreviousMergeRange(mergeRange => !editor.model.isMergeRangeHandled(mergeRange));
                    editor.activate();
                }
            },
            isEnabled: widget => !!this.getMergeEditor(widget),
            isVisible: widget => !!this.getMergeEditor(widget)
        });
        commands.registerCommand(MergeEditorCommands.SET_MIXED_LAYOUT, {
            execute: widget => {
                const editor = this.getMergeEditor(widget);
                if (editor) {
                    editor.layoutKind = 'mixed';
                    editor.activate();
                }
            },
            isEnabled: widget => !!this.getMergeEditor(widget),
            isVisible: widget => !!this.getMergeEditor(widget),
            isToggled: widget => { var _a; return ((_a = this.getMergeEditor(widget)) === null || _a === void 0 ? void 0 : _a.layoutKind) === 'mixed'; },
        });
        commands.registerCommand(MergeEditorCommands.SET_COLUMN_LAYOUT, {
            execute: widget => {
                const editor = this.getMergeEditor(widget);
                if (editor) {
                    editor.layoutKind = 'columns';
                    editor.activate();
                }
            },
            isEnabled: widget => !!this.getMergeEditor(widget),
            isVisible: widget => !!this.getMergeEditor(widget),
            isToggled: widget => { var _a; return ((_a = this.getMergeEditor(widget)) === null || _a === void 0 ? void 0 : _a.layoutKind) === 'columns'; }
        });
        commands.registerCommand(MergeEditorCommands.SHOW_BASE, {
            execute: widget => {
                const editor = this.getMergeEditor(widget);
                if (editor) {
                    editor.toggleShowBase();
                    editor.activate();
                }
            },
            isEnabled: widget => { var _a; return ((_a = this.getMergeEditor(widget)) === null || _a === void 0 ? void 0 : _a.layoutKind) === 'columns'; },
            isVisible: widget => { var _a; return ((_a = this.getMergeEditor(widget)) === null || _a === void 0 ? void 0 : _a.layoutKind) === 'columns'; },
            isToggled: widget => { var _a; return !!((_a = this.getMergeEditor(widget)) === null || _a === void 0 ? void 0 : _a.isShowingBase); }
        });
        commands.registerCommand(MergeEditorCommands.SHOW_BASE_TOP, {
            execute: widget => {
                const editor = this.getMergeEditor(widget);
                if (editor) {
                    editor.toggleShowBaseTop();
                    editor.activate();
                }
            },
            isEnabled: widget => { var _a; return ((_a = this.getMergeEditor(widget)) === null || _a === void 0 ? void 0 : _a.layoutKind) === 'mixed'; },
            isVisible: widget => { var _a; return ((_a = this.getMergeEditor(widget)) === null || _a === void 0 ? void 0 : _a.layoutKind) === 'mixed'; },
            isToggled: widget => { var _a; return !!((_a = this.getMergeEditor(widget)) === null || _a === void 0 ? void 0 : _a.isShowingBaseAtTop); }
        });
        commands.registerCommand(MergeEditorCommands.SHOW_BASE_CENTER, {
            execute: widget => {
                const editor = this.getMergeEditor(widget);
                if (editor) {
                    editor.toggleShowBaseCenter();
                    editor.activate();
                }
            },
            isEnabled: widget => { var _a; return ((_a = this.getMergeEditor(widget)) === null || _a === void 0 ? void 0 : _a.layoutKind) === 'mixed'; },
            isVisible: widget => { var _a; return ((_a = this.getMergeEditor(widget)) === null || _a === void 0 ? void 0 : _a.layoutKind) === 'mixed'; },
            isToggled: widget => {
                const editor = this.getMergeEditor(widget);
                return !!((editor === null || editor === void 0 ? void 0 : editor.isShowingBase) && !editor.isShowingBaseAtTop);
            }
        });
    }
    registerMenus(menus) {
    }
    registerToolbarItems(registry) {
        registry.registerItem({
            id: MergeEditorCommands.GO_TO_NEXT_UNHANDLED_CONFLICT.id,
            command: MergeEditorCommands.GO_TO_NEXT_UNHANDLED_CONFLICT.id,
            icon: (0, browser_1.codicon)('arrow-down', true),
            group: 'navigation',
            order: 'a'
        });
        registry.registerItem({
            id: MergeEditorCommands.GO_TO_PREVIOUS_UNHANDLED_CONFLICT.id,
            command: MergeEditorCommands.GO_TO_PREVIOUS_UNHANDLED_CONFLICT.id,
            icon: (0, browser_1.codicon)('arrow-up', true),
            group: 'navigation',
            order: 'b'
        });
        registry.registerItem({
            id: MergeEditorCommands.SET_MIXED_LAYOUT.id,
            command: MergeEditorCommands.SET_MIXED_LAYOUT.id,
            group: '1_merge',
            order: 'a'
        });
        registry.registerItem({
            id: MergeEditorCommands.SET_COLUMN_LAYOUT.id,
            command: MergeEditorCommands.SET_COLUMN_LAYOUT.id,
            group: '1_merge',
            order: 'b'
        });
        registry.registerItem({
            id: MergeEditorCommands.SHOW_BASE.id,
            command: MergeEditorCommands.SHOW_BASE.id,
            group: '2_merge',
            order: 'a'
        });
        registry.registerItem({
            id: MergeEditorCommands.SHOW_BASE_TOP.id,
            command: MergeEditorCommands.SHOW_BASE_TOP.id,
            group: '2_merge',
            order: 'b'
        });
        registry.registerItem({
            id: MergeEditorCommands.SHOW_BASE_CENTER.id,
            command: MergeEditorCommands.SHOW_BASE_CENTER.id,
            group: '2_merge',
            order: 'c'
        });
    }
    registerKeybindings(keybindings) {
    }
    /**
     * It should be aligned with https://code.visualstudio.com/api/references/theme-color#merge-conflicts-colors
     */
    registerColors(colors) {
        colors.register({
            id: 'mergeEditor.change.background',
            description: 'The background color for changes.',
            defaults: { dark: '#9bb95533', light: '#9bb95533', hcDark: '#9bb95533', hcLight: '#9bb95533' }
        }, {
            id: 'mergeEditor.change.word.background',
            description: 'The background color for word changes.',
            defaults: { dark: '#9ccc2c33', light: '#9ccc2c66', hcDark: '#9ccc2c33', hcLight: '#9ccc2c66' }
        }, {
            id: 'mergeEditor.changeBase.background',
            description: 'The background color for changes in base.',
            defaults: { dark: '#4B1818FF', light: '#FFCCCCFF', hcDark: '#4B1818FF', hcLight: '#FFCCCCFF' }
        }, {
            id: 'mergeEditor.changeBase.word.background',
            description: 'The background color for word changes in base.',
            defaults: { dark: '#6F1313FF', light: '#FFA3A3FF', hcDark: '#6F1313FF', hcLight: '#FFA3A3FF' }
        }, {
            id: 'mergeEditor.conflict.unhandledUnfocused.border',
            description: 'The border color of unhandled unfocused conflicts.',
            defaults: { dark: '#ffa6007a', light: '#ffa600FF', hcDark: '#ffa6007a', hcLight: '#ffa6007a' }
        }, {
            id: 'mergeEditor.conflict.unhandledUnfocused.background',
            description: 'The background color of unhandled unfocused conflicts.',
            defaults: {
                dark: color_1.Color.transparent('mergeEditor.conflict.unhandledUnfocused.border', 0.05),
                light: color_1.Color.transparent('mergeEditor.conflict.unhandledUnfocused.border', 0.05)
            }
        }, {
            id: 'mergeEditor.conflict.unhandledFocused.border',
            description: 'The border color of unhandled focused conflicts.',
            defaults: { dark: '#ffa600', light: '#ffa600', hcDark: '#ffa600', hcLight: '#ffa600' }
        }, {
            id: 'mergeEditor.conflict.unhandledFocused.background',
            description: 'The background color of unhandled focused conflicts.',
            defaults: {
                dark: color_1.Color.transparent('mergeEditor.conflict.unhandledFocused.border', 0.05),
                light: color_1.Color.transparent('mergeEditor.conflict.unhandledFocused.border', 0.05)
            }
        }, {
            id: 'mergeEditor.conflict.handledUnfocused.border',
            description: 'The border color of handled unfocused conflicts.',
            defaults: { dark: '#86868649', light: '#86868649', hcDark: '#86868649', hcLight: '#86868649' }
        }, {
            id: 'mergeEditor.conflict.handledUnfocused.background',
            description: 'The background color of handled unfocused conflicts.',
            defaults: {
                dark: color_1.Color.transparent('mergeEditor.conflict.handledUnfocused.border', 0.1),
                light: color_1.Color.transparent('mergeEditor.conflict.handledUnfocused.border', 0.1)
            }
        }, {
            id: 'mergeEditor.conflict.handledFocused.border',
            description: 'The border color of handled focused conflicts.',
            defaults: { dark: '#c1c1c1cc', light: '#c1c1c1cc', hcDark: '#c1c1c1cc', hcLight: '#c1c1c1cc' }
        }, {
            id: 'mergeEditor.conflict.handledFocused.background',
            description: 'The background color of handled focused conflicts.',
            defaults: {
                dark: color_1.Color.transparent('mergeEditor.conflict.handledFocused.border', 0.1),
                light: color_1.Color.transparent('mergeEditor.conflict.handledFocused.border', 0.1)
            }
        }, {
            id: scm_colors_1.ScmColors.handledConflictMinimapOverviewRulerColor,
            description: 'Minimap gutter and overview ruler marker color for handled conflicts.',
            defaults: { dark: '#adaca8ee', light: '#adaca8ee', hcDark: '#adaca8ee', hcLight: '#adaca8ee' }
        }, {
            id: scm_colors_1.ScmColors.unhandledConflictMinimapOverviewRulerColor,
            description: 'Minimap gutter and overview ruler marker color for unhandled conflicts.',
            defaults: { dark: '#fcba03FF', light: '#fcba03FF', hcDark: '#fcba03FF', hcLight: '#fcba03FF' }
        });
    }
};
exports.MergeEditorContribution = MergeEditorContribution;
tslib_1.__decorate([
    (0, inversify_1.inject)(merge_editor_1.MergeEditorSettings),
    tslib_1.__metadata("design:type", merge_editor_1.MergeEditorSettings)
], MergeEditorContribution.prototype, "settings", void 0);
tslib_1.__decorate([
    (0, inversify_1.inject)(browser_1.ApplicationShell),
    tslib_1.__metadata("design:type", browser_1.ApplicationShell)
], MergeEditorContribution.prototype, "shell", void 0);
tslib_1.__decorate([
    (0, inversify_1.inject)(browser_1.LabelProvider),
    tslib_1.__metadata("design:type", browser_1.LabelProvider)
], MergeEditorContribution.prototype, "labelProvider", void 0);
exports.MergeEditorContribution = MergeEditorContribution = tslib_1.__decorate([
    (0, inversify_1.injectable)()
], MergeEditorContribution);


/***/ }),

/***/ "./node_modules/@theia/scm/lib/browser/merge-editor/merge-editor-dev-contribution.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@theia/scm/lib/browser/merge-editor/merge-editor-dev-contribution.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

// *****************************************************************************
// Copyright (C) 2025 1C-Soft LLC and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MergeEditorDevContribution = exports.MergeEditorDevCommands = void 0;
const tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
const inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify/index.js");
const core_1 = __webpack_require__(/*! @theia/core */ "./node_modules/@theia/core/lib/common/index.js");
const browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "./node_modules/@theia/core/lib/browser/index.js");
const clipboard_service_1 = __webpack_require__(/*! @theia/core/lib/browser/clipboard-service */ "./node_modules/@theia/core/lib/browser/clipboard-service.js");
const language_service_1 = __webpack_require__(/*! @theia/core/lib/browser/language-service */ "./node_modules/@theia/core/lib/browser/language-service.js");
const merge_editor_1 = __webpack_require__(/*! ./merge-editor */ "./node_modules/@theia/scm/lib/browser/merge-editor/merge-editor.js");
var MergeEditorDevCommands;
(function (MergeEditorDevCommands) {
    MergeEditorDevCommands.MERGE_EDITOR_DEV_CATEGORY = 'Merge Editor (Dev)';
    MergeEditorDevCommands.COPY_CONTENTS_TO_JSON = core_1.Command.toDefaultLocalizedCommand({
        id: 'mergeEditor.dev.copyContentsToJSON',
        label: 'Copy Merge Editor State as JSON',
        category: MergeEditorDevCommands.MERGE_EDITOR_DEV_CATEGORY
    });
    MergeEditorDevCommands.OPEN_CONTENTS_FROM_JSON = core_1.Command.toDefaultLocalizedCommand({
        id: 'mergeEditor.dev.openContentsFromJSON',
        label: 'Open Merge Editor State from JSON',
        category: MergeEditorDevCommands.MERGE_EDITOR_DEV_CATEGORY
    });
})(MergeEditorDevCommands || (exports.MergeEditorDevCommands = MergeEditorDevCommands = {}));
let MergeEditorDevContribution = class MergeEditorDevContribution {
    getMergeEditor(widget = this.shell.currentWidget) {
        return widget instanceof merge_editor_1.MergeEditor ? widget : ((widget === null || widget === void 0 ? void 0 : widget.parent) ? this.getMergeEditor(widget.parent) : undefined);
    }
    registerCommands(commands) {
        commands.registerCommand(MergeEditorDevCommands.COPY_CONTENTS_TO_JSON, {
            execute: widget => {
                const editor = this.getMergeEditor(widget);
                if (editor) {
                    this.copyContentsToJSON(editor);
                }
            },
            isEnabled: widget => !!this.getMergeEditor(widget),
            isVisible: widget => !!this.getMergeEditor(widget)
        });
        commands.registerCommand(MergeEditorDevCommands.OPEN_CONTENTS_FROM_JSON, {
            execute: () => this.openContentsFromJSON().catch(error => this.messageService.error(error.message))
        });
    }
    copyContentsToJSON(editor) {
        const { model } = editor;
        const editorContents = {
            base: model.baseDocument.getText(),
            input1: model.side1Document.getText(),
            input2: model.side2Document.getText(),
            result: model.resultDocument.getText(),
            languageId: model.resultDocument.getLanguageId()
        };
        this.clipboardService.writeText(JSON.stringify(editorContents, undefined, 2));
        this.messageService.info(core_1.nls.localizeByDefault('Successfully copied merge editor state'));
    }
    async openContentsFromJSON() {
        var _a, _b;
        const inputText = await this.quickInputService.input({
            prompt: core_1.nls.localizeByDefault('Enter JSON'),
            value: await this.clipboardService.readText()
        });
        if (!inputText) {
            return;
        }
        const { base, input1, input2, result, languageId } = Object.assign({
            base: '',
            input1: '',
            input2: '',
            result: '',
            languageId: 'plaintext'
        }, JSON.parse(inputText));
        const extension = Array.from((_b = (_a = this.languageService.getLanguage(languageId)) === null || _a === void 0 ? void 0 : _a.extensions) !== null && _b !== void 0 ? _b : [''])[0];
        const parentUri = new core_1.URI('merge-editor-dev://' + (0, core_1.generateUuid)());
        const baseUri = parentUri.resolve('base' + extension);
        const side1Uri = parentUri.resolve('side1' + extension);
        const side2Uri = parentUri.resolve('side2' + extension);
        const resultUri = parentUri.resolve('result' + extension);
        const toDispose = new core_1.DisposableCollection();
        try {
            toDispose.push(this.inMemoryResources.add(baseUri, base));
            toDispose.push(this.inMemoryResources.add(side1Uri, input1));
            toDispose.push(this.inMemoryResources.add(side2Uri, input2));
            toDispose.push(this.inMemoryResources.add(resultUri, result));
            const uri = merge_editor_1.MergeEditorUri.encode({ baseUri, side1Uri, side2Uri, resultUri });
            const options = {
                widgetState: {
                    side1State: {
                        title: 'Left',
                        description: '(from JSON)'
                    },
                    side2State: {
                        title: 'Right',
                        description: '(from JSON)'
                    }
                }
            };
            await (0, browser_1.open)(this.openerService, uri, options);
        }
        finally {
            toDispose.dispose();
        }
    }
};
exports.MergeEditorDevContribution = MergeEditorDevContribution;
tslib_1.__decorate([
    (0, inversify_1.inject)(browser_1.ApplicationShell),
    tslib_1.__metadata("design:type", browser_1.ApplicationShell)
], MergeEditorDevContribution.prototype, "shell", void 0);
tslib_1.__decorate([
    (0, inversify_1.inject)(clipboard_service_1.ClipboardService),
    tslib_1.__metadata("design:type", Object)
], MergeEditorDevContribution.prototype, "clipboardService", void 0);
tslib_1.__decorate([
    (0, inversify_1.inject)(core_1.MessageService),
    tslib_1.__metadata("design:type", core_1.MessageService)
], MergeEditorDevContribution.prototype, "messageService", void 0);
tslib_1.__decorate([
    (0, inversify_1.inject)(core_1.QuickInputService),
    tslib_1.__metadata("design:type", Object)
], MergeEditorDevContribution.prototype, "quickInputService", void 0);
tslib_1.__decorate([
    (0, inversify_1.inject)(language_service_1.LanguageService),
    tslib_1.__metadata("design:type", language_service_1.LanguageService)
], MergeEditorDevContribution.prototype, "languageService", void 0);
tslib_1.__decorate([
    (0, inversify_1.inject)(core_1.InMemoryResources),
    tslib_1.__metadata("design:type", core_1.InMemoryResources)
], MergeEditorDevContribution.prototype, "inMemoryResources", void 0);
tslib_1.__decorate([
    (0, inversify_1.inject)(browser_1.OpenerService),
    tslib_1.__metadata("design:type", Object)
], MergeEditorDevContribution.prototype, "openerService", void 0);
exports.MergeEditorDevContribution = MergeEditorDevContribution = tslib_1.__decorate([
    (0, inversify_1.injectable)()
], MergeEditorDevContribution);


/***/ }),

/***/ "./node_modules/@theia/scm/lib/browser/merge-editor/merge-editor-module.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@theia/scm/lib/browser/merge-editor/merge-editor-module.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

// *****************************************************************************
// Copyright (C) 2025 1C-Soft LLC and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MergeEditorFactory = exports.bindMergeEditor = void 0;
__webpack_require__(/*! ../../../src/browser/style/merge-editor.css */ "./node_modules/@theia/scm/src/browser/style/merge-editor.css");
const inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify/index.js");
const core_1 = __webpack_require__(/*! @theia/core */ "./node_modules/@theia/core/lib/common/index.js");
const tab_bar_toolbar_1 = __webpack_require__(/*! @theia/core/lib/browser/shell/tab-bar-toolbar */ "./node_modules/@theia/core/lib/browser/shell/tab-bar-toolbar/index.js");
const browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "./node_modules/@theia/core/lib/browser/index.js");
const color_application_contribution_1 = __webpack_require__(/*! @theia/core/lib/browser/color-application-contribution */ "./node_modules/@theia/core/lib/browser/color-application-contribution.js");
const browser_2 = __webpack_require__(/*! @theia/editor/lib/browser */ "./node_modules/@theia/editor/lib/browser/index.js");
const monaco_editor_1 = __webpack_require__(/*! @theia/monaco/lib/browser/monaco-editor */ "./node_modules/@theia/monaco/lib/browser/monaco-editor.js");
const merge_editor_model_1 = __webpack_require__(/*! ./model/merge-editor-model */ "./node_modules/@theia/scm/lib/browser/merge-editor/model/merge-editor-model.js");
const merge_editor_panes_1 = __webpack_require__(/*! ./view/merge-editor-panes */ "./node_modules/@theia/scm/lib/browser/merge-editor/view/merge-editor-panes/index.js");
const diff_spacers_1 = __webpack_require__(/*! ./view/diff-spacers */ "./node_modules/@theia/scm/lib/browser/merge-editor/view/diff-spacers.js");
const merge_editor_view_zones_1 = __webpack_require__(/*! ./view/merge-editor-view-zones */ "./node_modules/@theia/scm/lib/browser/merge-editor/view/merge-editor-view-zones.js");
const merge_editor_1 = __webpack_require__(/*! ./merge-editor */ "./node_modules/@theia/scm/lib/browser/merge-editor/merge-editor.js");
const merge_editor_contribution_1 = __webpack_require__(/*! ./merge-editor-contribution */ "./node_modules/@theia/scm/lib/browser/merge-editor/merge-editor-contribution.js");
const merge_editor_dev_contribution_1 = __webpack_require__(/*! ./merge-editor-dev-contribution */ "./node_modules/@theia/scm/lib/browser/merge-editor/merge-editor-dev-contribution.js");
function bindMergeEditor(bind) {
    bind(merge_editor_1.MergeEditorSettings).toSelf().inSingletonScope();
    bind(diff_spacers_1.DiffSpacerService).toSelf().inSingletonScope();
    bind(merge_editor_view_zones_1.MergeEditorViewZoneComputer).toSelf().inSingletonScope();
    bind(MergeEditorFactory).toDynamicValue(ctx => new MergeEditorFactory(ctx.container)).inSingletonScope();
    bind(browser_1.WidgetFactory).toDynamicValue(ctx => ({
        id: merge_editor_1.MergeEditorOpenHandler.ID,
        createWidget: (options) => ctx.container.get(MergeEditorFactory).createMergeEditor(merge_editor_1.MergeEditorUri.decode(new core_1.URI(options.uri)))
    })).inSingletonScope();
    bind(merge_editor_1.MergeEditorOpenHandler).toSelf().inSingletonScope();
    bind(browser_1.OpenHandler).toService(merge_editor_1.MergeEditorOpenHandler);
    bind(merge_editor_contribution_1.MergeEditorContribution).toSelf().inSingletonScope();
    [browser_1.FrontendApplicationContribution, core_1.CommandContribution, core_1.MenuContribution, tab_bar_toolbar_1.TabBarToolbarContribution, browser_1.KeybindingContribution, color_application_contribution_1.ColorContribution].forEach(serviceIdentifier => bind(serviceIdentifier).toService(merge_editor_contribution_1.MergeEditorContribution));
    bind(merge_editor_dev_contribution_1.MergeEditorDevContribution).toSelf().inSingletonScope();
    bind(core_1.CommandContribution).toService(merge_editor_dev_contribution_1.MergeEditorDevContribution);
}
exports.bindMergeEditor = bindMergeEditor;
class MergeEditorFactory {
    constructor(container, editorManager = container.get(browser_2.EditorManager)) {
        this.container = container;
        this.editorManager = editorManager;
    }
    async createMergeEditor({ baseUri, side1Uri, side2Uri, resultUri }) {
        const toDisposeOnError = new core_1.DisposableCollection();
        const createEditorWidget = (uri) => this.createEditorWidget(uri, toDisposeOnError);
        try {
            const [baseEditorWidget, side1EditorWidget, side2EditorWidget, resultEditorWidget] = await Promise.all([createEditorWidget(baseUri), createEditorWidget(side1Uri), createEditorWidget(side2Uri), createEditorWidget(resultUri)]);
            const resultDocument = monaco_editor_1.MonacoEditor.get(resultEditorWidget).document;
            const hasConflictMarkers = resultDocument.textEditorModel.getLinesContent().some(lineContent => lineContent.startsWith('<<<<<<<'));
            return this.createMergeEditorContainer({
                baseEditorWidget,
                side1EditorWidget,
                side2EditorWidget,
                resultEditorWidget,
                options: {
                    resetResult: hasConflictMarkers
                }
            }).get(merge_editor_1.MergeEditor);
        }
        catch (error) {
            toDisposeOnError.dispose();
            throw error;
        }
    }
    async createEditorWidget(uri, disposables) {
        const editorWidget = await this.editorManager.createByUri(uri);
        disposables.push(editorWidget);
        const editor = monaco_editor_1.MonacoEditor.get(editorWidget);
        if (!editor) {
            throw new Error('The merge editor only supports Monaco editors as its parts');
        }
        editor.getControl().updateOptions({ folding: false, codeLens: false, minimap: { enabled: false } });
        editor.setShouldDisplayDirtyDiff(false);
        return editorWidget;
    }
    createMergeEditorContainer({ baseEditorWidget, side1EditorWidget, side2EditorWidget, resultEditorWidget, options }) {
        const child = new inversify_1.Container({ defaultScope: 'Singleton' });
        child.parent = this.container;
        const [baseEditor, side1Editor, side2Editor, resultEditor] = [baseEditorWidget, side1EditorWidget, side2EditorWidget, resultEditorWidget].map(editorWidget => monaco_editor_1.MonacoEditor.get(editorWidget));
        child.bind(merge_editor_model_1.MergeEditorModelProps).toConstantValue({ baseEditor, side1Editor, side2Editor, resultEditor, options });
        child.bind(merge_editor_model_1.MergeEditorModel).toSelf();
        child.bind(merge_editor_panes_1.MergeEditorPaneHeader).toSelf().inTransientScope();
        child.bind(merge_editor_panes_1.MergeEditorBasePane).toSelf();
        child.bind(merge_editor_panes_1.MergeEditorSide1Pane).toSelf();
        child.bind(merge_editor_panes_1.MergeEditorSide2Pane).toSelf();
        child.bind(merge_editor_panes_1.MergeEditorResultPane).toSelf();
        child.bind(browser_2.EditorWidget).toConstantValue(baseEditorWidget).whenInjectedInto(merge_editor_panes_1.MergeEditorBasePane);
        child.bind(browser_2.EditorWidget).toConstantValue(side1EditorWidget).whenInjectedInto(merge_editor_panes_1.MergeEditorSide1Pane);
        child.bind(browser_2.EditorWidget).toConstantValue(side2EditorWidget).whenInjectedInto(merge_editor_panes_1.MergeEditorSide2Pane);
        child.bind(browser_2.EditorWidget).toConstantValue(resultEditorWidget).whenInjectedInto(merge_editor_panes_1.MergeEditorResultPane);
        child.bind(merge_editor_1.MergeEditor).toSelf();
        return child;
    }
}
exports.MergeEditorFactory = MergeEditorFactory;


/***/ }),

/***/ "./node_modules/@theia/scm/lib/browser/scm-frontend-module.js":
/*!********************************************************************!*\
  !*** ./node_modules/@theia/scm/lib/browser/scm-frontend-module.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

// *****************************************************************************
// Copyright (C) 2019 Red Hat, Inc. and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createScmWidgetContainer = exports.createScmTreeContainer = void 0;
__webpack_require__(/*! ../../src/browser/style/index.css */ "./node_modules/@theia/scm/src/browser/style/index.css");
const inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify/index.js");
const browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "./node_modules/@theia/core/lib/browser/index.js");
const scm_service_1 = __webpack_require__(/*! ./scm-service */ "./node_modules/@theia/scm/lib/browser/scm-service.js");
const scm_contribution_1 = __webpack_require__(/*! ./scm-contribution */ "./node_modules/@theia/scm/lib/browser/scm-contribution.js");
const scm_widget_1 = __webpack_require__(/*! ./scm-widget */ "./node_modules/@theia/scm/lib/browser/scm-widget.js");
const scm_tree_widget_1 = __webpack_require__(/*! ./scm-tree-widget */ "./node_modules/@theia/scm/lib/browser/scm-tree-widget.js");
const scm_commit_widget_1 = __webpack_require__(/*! ./scm-commit-widget */ "./node_modules/@theia/scm/lib/browser/scm-commit-widget.js");
const scm_amend_widget_1 = __webpack_require__(/*! ./scm-amend-widget */ "./node_modules/@theia/scm/lib/browser/scm-amend-widget.js");
const scm_no_repository_widget_1 = __webpack_require__(/*! ./scm-no-repository-widget */ "./node_modules/@theia/scm/lib/browser/scm-no-repository-widget.js");
const scm_tree_model_1 = __webpack_require__(/*! ./scm-tree-model */ "./node_modules/@theia/scm/lib/browser/scm-tree-model.js");
const scm_groups_tree_model_1 = __webpack_require__(/*! ./scm-groups-tree-model */ "./node_modules/@theia/scm/lib/browser/scm-groups-tree-model.js");
const scm_quick_open_service_1 = __webpack_require__(/*! ./scm-quick-open-service */ "./node_modules/@theia/scm/lib/browser/scm-quick-open-service.js");
const dirty_diff_module_1 = __webpack_require__(/*! ./dirty-diff/dirty-diff-module */ "./node_modules/@theia/scm/lib/browser/dirty-diff/dirty-diff-module.js");
const scm_decorations_service_1 = __webpack_require__(/*! ./decorations/scm-decorations-service */ "./node_modules/@theia/scm/lib/browser/decorations/scm-decorations-service.js");
const scm_avatar_service_1 = __webpack_require__(/*! ./scm-avatar-service */ "./node_modules/@theia/scm/lib/browser/scm-avatar-service.js");
const scm_context_key_service_1 = __webpack_require__(/*! ./scm-context-key-service */ "./node_modules/@theia/scm/lib/browser/scm-context-key-service.js");
const scm_layout_migrations_1 = __webpack_require__(/*! ./scm-layout-migrations */ "./node_modules/@theia/scm/lib/browser/scm-layout-migrations.js");
const scm_tree_label_provider_1 = __webpack_require__(/*! ./scm-tree-label-provider */ "./node_modules/@theia/scm/lib/browser/scm-tree-label-provider.js");
const tab_bar_toolbar_1 = __webpack_require__(/*! @theia/core/lib/browser/shell/tab-bar-toolbar */ "./node_modules/@theia/core/lib/browser/shell/tab-bar-toolbar/index.js");
const color_application_contribution_1 = __webpack_require__(/*! @theia/core/lib/browser/color-application-contribution */ "./node_modules/@theia/core/lib/browser/color-application-contribution.js");
const label_provider_1 = __webpack_require__(/*! @theia/core/lib/browser/label-provider */ "./node_modules/@theia/core/lib/browser/label-provider.js");
const scm_preferences_1 = __webpack_require__(/*! ./scm-preferences */ "./node_modules/@theia/scm/lib/browser/scm-preferences.js");
const scm_tab_bar_decorator_1 = __webpack_require__(/*! ./decorations/scm-tab-bar-decorator */ "./node_modules/@theia/scm/lib/browser/decorations/scm-tab-bar-decorator.js");
const tab_bar_decorator_1 = __webpack_require__(/*! @theia/core/lib/browser/shell/tab-bar-decorator */ "./node_modules/@theia/core/lib/browser/shell/tab-bar-decorator.js");
const merge_editor_module_1 = __webpack_require__(/*! ./merge-editor/merge-editor-module */ "./node_modules/@theia/scm/lib/browser/merge-editor/merge-editor-module.js");
exports["default"] = new inversify_1.ContainerModule(bind => {
    bind(scm_context_key_service_1.ScmContextKeyService).toSelf().inSingletonScope();
    bind(scm_service_1.ScmService).toSelf().inSingletonScope();
    bind(scm_widget_1.ScmWidget).toSelf();
    bind(browser_1.WidgetFactory).toDynamicValue(({ container }) => ({
        id: scm_contribution_1.SCM_WIDGET_FACTORY_ID,
        createWidget: () => {
            const child = createScmWidgetContainer(container);
            return child.get(scm_widget_1.ScmWidget);
        }
    })).inSingletonScope();
    bind(scm_commit_widget_1.ScmCommitWidget).toSelf();
    bind(browser_1.WidgetFactory).toDynamicValue(({ container }) => ({
        id: scm_commit_widget_1.ScmCommitWidget.ID,
        createWidget: () => container.get(scm_commit_widget_1.ScmCommitWidget)
    })).inSingletonScope();
    bind(browser_1.WidgetFactory).toDynamicValue(({ container }) => ({
        id: scm_tree_widget_1.ScmTreeWidget.ID,
        createWidget: () => container.get(scm_tree_widget_1.ScmTreeWidget)
    })).inSingletonScope();
    bind(scm_amend_widget_1.ScmAmendWidget).toSelf();
    bind(browser_1.WidgetFactory).toDynamicValue(({ container }) => ({
        id: scm_amend_widget_1.ScmAmendWidget.ID,
        createWidget: () => container.get(scm_amend_widget_1.ScmAmendWidget)
    })).inSingletonScope();
    bind(scm_no_repository_widget_1.ScmNoRepositoryWidget).toSelf();
    bind(browser_1.WidgetFactory).toDynamicValue(({ container }) => ({
        id: scm_no_repository_widget_1.ScmNoRepositoryWidget.ID,
        createWidget: () => container.get(scm_no_repository_widget_1.ScmNoRepositoryWidget)
    })).inSingletonScope();
    bind(browser_1.WidgetFactory).toDynamicValue(({ container }) => ({
        id: scm_contribution_1.SCM_VIEW_CONTAINER_ID,
        createWidget: async () => {
            const viewContainer = container.get(browser_1.ViewContainer.Factory)({
                id: scm_contribution_1.SCM_VIEW_CONTAINER_ID,
                progressLocationId: 'scm'
            });
            viewContainer.setTitleOptions(scm_contribution_1.SCM_VIEW_CONTAINER_TITLE_OPTIONS);
            const widget = await container.get(browser_1.WidgetManager).getOrCreateWidget(scm_contribution_1.SCM_WIDGET_FACTORY_ID);
            viewContainer.addWidget(widget, {
                canHide: false,
                initiallyCollapsed: false
            });
            return viewContainer;
        }
    })).inSingletonScope();
    bind(browser_1.ApplicationShellLayoutMigration).to(scm_layout_migrations_1.ScmLayoutVersion3Migration).inSingletonScope();
    bind(browser_1.ApplicationShellLayoutMigration).to(scm_layout_migrations_1.ScmLayoutVersion5Migration).inSingletonScope();
    bind(scm_quick_open_service_1.ScmQuickOpenService).toSelf().inSingletonScope();
    (0, browser_1.bindViewContribution)(bind, scm_contribution_1.ScmContribution);
    bind(browser_1.FrontendApplicationContribution).toService(scm_contribution_1.ScmContribution);
    bind(tab_bar_toolbar_1.TabBarToolbarContribution).toService(scm_contribution_1.ScmContribution);
    bind(color_application_contribution_1.ColorContribution).toService(scm_contribution_1.ScmContribution);
    bind(browser_1.StylingParticipant).toService(scm_contribution_1.ScmContribution);
    bind(scm_decorations_service_1.ScmDecorationsService).toSelf().inSingletonScope();
    bind(scm_avatar_service_1.ScmAvatarService).toSelf().inSingletonScope();
    (0, dirty_diff_module_1.bindDirtyDiff)(bind);
    bind(scm_tree_label_provider_1.ScmTreeLabelProvider).toSelf().inSingletonScope();
    bind(label_provider_1.LabelProviderContribution).toService(scm_tree_label_provider_1.ScmTreeLabelProvider);
    (0, scm_preferences_1.bindScmPreferences)(bind);
    bind(scm_tab_bar_decorator_1.ScmTabBarDecorator).toSelf().inSingletonScope();
    bind(tab_bar_decorator_1.TabBarDecorator).toService(scm_tab_bar_decorator_1.ScmTabBarDecorator);
    (0, merge_editor_module_1.bindMergeEditor)(bind);
});
function createScmTreeContainer(parent) {
    const child = (0, browser_1.createTreeContainer)(parent, {
        props: {
            virtualized: true,
            search: true,
            multiSelect: true,
        },
        widget: scm_tree_widget_1.ScmTreeWidget,
    });
    child.unbind(browser_1.TreeModel);
    child.unbind(browser_1.TreeModelImpl);
    child.bind(scm_tree_model_1.ScmTreeModelProps).toConstantValue({
        defaultExpansion: 'expanded',
    });
    return child;
}
exports.createScmTreeContainer = createScmTreeContainer;
function createScmWidgetContainer(parent) {
    const child = createScmTreeContainer(parent);
    child.bind(scm_groups_tree_model_1.ScmGroupsTreeModel).toSelf();
    child.bind(browser_1.TreeModel).toService(scm_groups_tree_model_1.ScmGroupsTreeModel);
    return child;
}
exports.createScmWidgetContainer = createScmWidgetContainer;


/***/ }),

/***/ "./node_modules/@theia/scm/lib/browser/scm-groups-tree-model.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@theia/scm/lib/browser/scm-groups-tree-model.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

// *****************************************************************************
// Copyright (C) 2020 Arm and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ScmGroupsTreeModel = void 0;
const tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
const inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify/index.js");
const disposable_1 = __webpack_require__(/*! @theia/core/lib/common/disposable */ "./node_modules/@theia/core/lib/common/disposable.js");
const scm_service_1 = __webpack_require__(/*! ./scm-service */ "./node_modules/@theia/scm/lib/browser/scm-service.js");
const scm_tree_model_1 = __webpack_require__(/*! ./scm-tree-model */ "./node_modules/@theia/scm/lib/browser/scm-tree-model.js");
let ScmGroupsTreeModel = class ScmGroupsTreeModel extends scm_tree_model_1.ScmTreeModel {
    constructor() {
        super(...arguments);
        this.toDisposeOnRepositoryChange = new disposable_1.DisposableCollection();
    }
    init() {
        super.init();
        this.refreshOnRepositoryChange();
        this.toDispose.push(this.scmService.onDidChangeSelectedRepository(() => {
            this.refreshOnRepositoryChange();
        }));
    }
    refreshOnRepositoryChange() {
        const repository = this.scmService.selectedRepository;
        if (repository) {
            this.changeRepository(repository.provider);
        }
        else {
            this.changeRepository(undefined);
        }
    }
    changeRepository(provider) {
        this.toDisposeOnRepositoryChange.dispose();
        this.contextKeys.scmProvider.set(provider ? provider.id : undefined);
        this.provider = provider;
        if (provider) {
            this.toDisposeOnRepositoryChange.push(provider.onDidChange(() => this.root = this.createTree()));
            if (provider.onDidChangeResources) {
                this.toDisposeOnRepositoryChange.push(provider.onDidChangeResources(() => this.root = this.createTree()));
            }
            this.root = this.createTree();
        }
    }
    get rootUri() {
        if (this.provider) {
            return this.provider.rootUri;
        }
    }
    ;
    get groups() {
        if (this.provider) {
            return this.provider.groups;
        }
        else {
            return [];
        }
    }
    ;
    canTabToWidget() {
        return !!this.provider;
    }
};
exports.ScmGroupsTreeModel = ScmGroupsTreeModel;
tslib_1.__decorate([
    (0, inversify_1.inject)(scm_service_1.ScmService),
    tslib_1.__metadata("design:type", scm_service_1.ScmService)
], ScmGroupsTreeModel.prototype, "scmService", void 0);
tslib_1.__decorate([
    (0, inversify_1.postConstruct)(),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", []),
    tslib_1.__metadata("design:returntype", void 0)
], ScmGroupsTreeModel.prototype, "init", null);
exports.ScmGroupsTreeModel = ScmGroupsTreeModel = tslib_1.__decorate([
    (0, inversify_1.injectable)()
], ScmGroupsTreeModel);


/***/ }),

/***/ "./node_modules/@theia/scm/lib/browser/scm-layout-migrations.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@theia/scm/lib/browser/scm-layout-migrations.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

// *****************************************************************************
// Copyright (C) 2019 TypeFox and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ScmLayoutVersion5Migration = exports.ScmLayoutVersion3Migration = void 0;
const tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
const inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify/index.js");
const scm_contribution_1 = __webpack_require__(/*! ./scm-contribution */ "./node_modules/@theia/scm/lib/browser/scm-contribution.js");
let ScmLayoutVersion3Migration = class ScmLayoutVersion3Migration {
    constructor() {
        this.layoutVersion = 3.0;
    }
    onWillInflateWidget(desc, { parent }) {
        if (desc.constructionOptions.factoryId === 'scm' && !parent) {
            return {
                constructionOptions: {
                    factoryId: scm_contribution_1.SCM_VIEW_CONTAINER_ID
                },
                innerWidgetState: {
                    parts: [
                        {
                            widget: {
                                constructionOptions: {
                                    factoryId: scm_contribution_1.SCM_WIDGET_FACTORY_ID
                                },
                                innerWidgetState: desc.innerWidgetState
                            },
                            partId: {
                                factoryId: scm_contribution_1.SCM_WIDGET_FACTORY_ID
                            },
                            collapsed: false,
                            hidden: false
                        }
                    ],
                    title: scm_contribution_1.SCM_VIEW_CONTAINER_TITLE_OPTIONS
                }
            };
        }
        return undefined;
    }
};
exports.ScmLayoutVersion3Migration = ScmLayoutVersion3Migration;
exports.ScmLayoutVersion3Migration = ScmLayoutVersion3Migration = tslib_1.__decorate([
    (0, inversify_1.injectable)()
], ScmLayoutVersion3Migration);
let ScmLayoutVersion5Migration = class ScmLayoutVersion5Migration {
    constructor() {
        this.layoutVersion = 5.0;
    }
    onWillInflateWidget(desc) {
        if (desc.constructionOptions.factoryId === scm_contribution_1.SCM_VIEW_CONTAINER_ID && typeof desc.innerWidgetState === 'string') {
            desc.innerWidgetState = desc.innerWidgetState.replace(/scm-tab-icon/g, scm_contribution_1.SCM_VIEW_CONTAINER_TITLE_OPTIONS.iconClass);
            return desc;
        }
        return undefined;
    }
};
exports.ScmLayoutVersion5Migration = ScmLayoutVersion5Migration;
exports.ScmLayoutVersion5Migration = ScmLayoutVersion5Migration = tslib_1.__decorate([
    (0, inversify_1.injectable)()
], ScmLayoutVersion5Migration);


/***/ }),

/***/ "./node_modules/@theia/scm/lib/browser/scm-tree-label-provider.js":
/*!************************************************************************!*\
  !*** ./node_modules/@theia/scm/lib/browser/scm-tree-label-provider.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

// *****************************************************************************
// Copyright (C) 2020 Arm and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ScmTreeLabelProvider = void 0;
const tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
const inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify/index.js");
const uri_1 = __webpack_require__(/*! @theia/core/lib/common/uri */ "./node_modules/@theia/core/lib/common/uri.js");
const label_provider_1 = __webpack_require__(/*! @theia/core/lib/browser/label-provider */ "./node_modules/@theia/core/lib/browser/label-provider.js");
const tree_1 = __webpack_require__(/*! @theia/core/lib/browser/tree */ "./node_modules/@theia/core/lib/browser/tree/index.js");
const scm_tree_model_1 = __webpack_require__(/*! ./scm-tree-model */ "./node_modules/@theia/scm/lib/browser/scm-tree-model.js");
let ScmTreeLabelProvider = class ScmTreeLabelProvider {
    canHandle(element) {
        return tree_1.TreeNode.is(element) && (scm_tree_model_1.ScmFileChangeGroupNode.is(element) || scm_tree_model_1.ScmFileChangeFolderNode.is(element) || scm_tree_model_1.ScmFileChangeNode.is(element)) ? 60 : 0;
    }
    getName(node) {
        if (scm_tree_model_1.ScmFileChangeGroupNode.is(node)) {
            return node.groupLabel;
        }
        if (scm_tree_model_1.ScmFileChangeFolderNode.is(node)) {
            return node.path;
        }
        if (scm_tree_model_1.ScmFileChangeNode.is(node)) {
            return this.labelProvider.getName(new uri_1.default(node.sourceUri));
        }
        return '';
    }
};
exports.ScmTreeLabelProvider = ScmTreeLabelProvider;
tslib_1.__decorate([
    (0, inversify_1.inject)(label_provider_1.LabelProvider),
    tslib_1.__metadata("design:type", label_provider_1.LabelProvider)
], ScmTreeLabelProvider.prototype, "labelProvider", void 0);
exports.ScmTreeLabelProvider = ScmTreeLabelProvider = tslib_1.__decorate([
    (0, inversify_1.injectable)()
], ScmTreeLabelProvider);


/***/ }),

/***/ "./node_modules/@theia/scm/src/browser/style/dirty-diff.css":
/*!******************************************************************!*\
  !*** ./node_modules/@theia/scm/src/browser/style/dirty-diff.css ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_cjs_js_dirty_diff_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../../../../css-loader/dist/cjs.js!./dirty-diff.css */ "./node_modules/css-loader/dist/cjs.js!./node_modules/@theia/scm/src/browser/style/dirty-diff.css");

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_dirty_diff_css__WEBPACK_IMPORTED_MODULE_1__["default"], options);



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_dirty_diff_css__WEBPACK_IMPORTED_MODULE_1__["default"].locals || {});

/***/ }),

/***/ "./node_modules/@theia/scm/src/browser/style/index.css":
/*!*************************************************************!*\
  !*** ./node_modules/@theia/scm/src/browser/style/index.css ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_cjs_js_index_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../../../../css-loader/dist/cjs.js!./index.css */ "./node_modules/css-loader/dist/cjs.js!./node_modules/@theia/scm/src/browser/style/index.css");

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_index_css__WEBPACK_IMPORTED_MODULE_1__["default"], options);



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_index_css__WEBPACK_IMPORTED_MODULE_1__["default"].locals || {});

/***/ }),

/***/ "./node_modules/@theia/scm/src/browser/style/merge-editor.css":
/*!********************************************************************!*\
  !*** ./node_modules/@theia/scm/src/browser/style/merge-editor.css ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_cjs_js_merge_editor_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../../../../css-loader/dist/cjs.js!./merge-editor.css */ "./node_modules/css-loader/dist/cjs.js!./node_modules/@theia/scm/src/browser/style/merge-editor.css");

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_merge_editor_css__WEBPACK_IMPORTED_MODULE_1__["default"], options);



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_merge_editor_css__WEBPACK_IMPORTED_MODULE_1__["default"].locals || {});

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/@theia/scm/src/browser/style/dirty-diff-decorator.css":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/@theia/scm/src/browser/style/dirty-diff-decorator.css ***!
  \******************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

.dirty-diff-glyph {
	margin-left: 5px;
	cursor: pointer;
}

.dirty-diff-removed-line:after {
	content: '';
	position: absolute;
	bottom: -4px;
	box-sizing: border-box;
	width: 4px;
	height: 0;
	z-index: 9;
	border-top: 4px solid transparent;
	border-bottom: 4px solid transparent;
	transition: border-top-width 80ms linear, border-bottom-width 80ms linear, bottom 80ms linear;
	pointer-events: none;
}

.dirty-diff-glyph:before {
	position: absolute;
	content: '';
	height: 100%;
	width: 0;
	left: -2px;
	transition: width 80ms linear, left 80ms linear;
}

.dirty-diff-removed-line:before {
	margin-left: 3px;
	height: 0;
	bottom: 0;
	transition: height 80ms linear;
}

.margin-view-overlays > div:hover > .dirty-diff-glyph:before {
	position: absolute;
	content: '';
	height: 100%;
	width: 6px;
	left: -6px;
}

.margin-view-overlays > div:hover > .dirty-diff-removed-line:after {
	bottom: 0;
	border-top-width: 0;
	border-bottom-width: 0;
}
`, "",{"version":3,"sources":["webpack://./node_modules/@theia/scm/src/browser/style/dirty-diff-decorator.css"],"names":[],"mappings":"AAAA;;;+FAG+F;;AAE/F;CACC,gBAAgB;CAChB,eAAe;AAChB;;AAEA;CACC,WAAW;CACX,kBAAkB;CAClB,YAAY;CACZ,sBAAsB;CACtB,UAAU;CACV,SAAS;CACT,UAAU;CACV,iCAAiC;CACjC,oCAAoC;CACpC,6FAA6F;CAC7F,oBAAoB;AACrB;;AAEA;CACC,kBAAkB;CAClB,WAAW;CACX,YAAY;CACZ,QAAQ;CACR,UAAU;CACV,+CAA+C;AAChD;;AAEA;CACC,gBAAgB;CAChB,SAAS;CACT,SAAS;CACT,8BAA8B;AAC/B;;AAEA;CACC,kBAAkB;CAClB,WAAW;CACX,YAAY;CACZ,UAAU;CACV,UAAU;AACX;;AAEA;CACC,SAAS;CACT,mBAAmB;CACnB,sBAAsB;AACvB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n.dirty-diff-glyph {\n\tmargin-left: 5px;\n\tcursor: pointer;\n}\n\n.dirty-diff-removed-line:after {\n\tcontent: '';\n\tposition: absolute;\n\tbottom: -4px;\n\tbox-sizing: border-box;\n\twidth: 4px;\n\theight: 0;\n\tz-index: 9;\n\tborder-top: 4px solid transparent;\n\tborder-bottom: 4px solid transparent;\n\ttransition: border-top-width 80ms linear, border-bottom-width 80ms linear, bottom 80ms linear;\n\tpointer-events: none;\n}\n\n.dirty-diff-glyph:before {\n\tposition: absolute;\n\tcontent: '';\n\theight: 100%;\n\twidth: 0;\n\tleft: -2px;\n\ttransition: width 80ms linear, left 80ms linear;\n}\n\n.dirty-diff-removed-line:before {\n\tmargin-left: 3px;\n\theight: 0;\n\tbottom: 0;\n\ttransition: height 80ms linear;\n}\n\n.margin-view-overlays > div:hover > .dirty-diff-glyph:before {\n\tposition: absolute;\n\tcontent: '';\n\theight: 100%;\n\twidth: 6px;\n\tleft: -6px;\n}\n\n.margin-view-overlays > div:hover > .dirty-diff-removed-line:after {\n\tbottom: 0;\n\tborder-top-width: 0;\n\tborder-bottom-width: 0;\n}\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/@theia/scm/src/browser/style/dirty-diff.css":
/*!********************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/@theia/scm/src/browser/style/dirty-diff.css ***!
  \********************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _css_loader_dist_cjs_js_dirty_diff_decorator_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! -!../../../../../css-loader/dist/cjs.js!./dirty-diff-decorator.css */ "./node_modules/css-loader/dist/cjs.js!./node_modules/@theia/scm/src/browser/style/dirty-diff-decorator.css");
// Imports



var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
___CSS_LOADER_EXPORT___.i(_css_loader_dist_cjs_js_dirty_diff_decorator_css__WEBPACK_IMPORTED_MODULE_2__["default"]);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `/********************************************************************************
 * Copyright (C) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
 ********************************************************************************/

.monaco-editor .dirty-diff-added-line {
  border-left: 3px solid var(--theia-editorGutter-addedBackground);
  transition: opacity 0.5s;
}
.monaco-editor .dirty-diff-added-line:before {
  background: var(--theia-editorGutter-addedBackground);
}
.monaco-editor .margin:hover .dirty-diff-added-line {
  opacity: 1;
}

.monaco-editor .dirty-diff-removed-line:after {
  border-left: 4px solid var(--theia-editorGutter-deletedBackground);
  transition: opacity 0.5s;
}
.monaco-editor .dirty-diff-removed-line:before {
  background: var(--theia-editorGutter-deletedBackground);
}
.monaco-editor .margin:hover .dirty-diff-removed-line {
  opacity: 1;
}

.monaco-editor .dirty-diff-modified-line {
  border-left: 3px solid var(--theia-editorGutter-modifiedBackground);
  transition: opacity 0.5s;
}
.monaco-editor .dirty-diff-modified-line:before {
  background: var(--theia-editorGutter-modifiedBackground);
}
.monaco-editor .margin:hover .dirty-diff-modified-line {
  opacity: 1;
}
`, "",{"version":3,"sources":["webpack://./node_modules/@theia/scm/src/browser/style/dirty-diff.css"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;iFAciF;;AAIjF;EACE,gEAAgE;EAChE,wBAAwB;AAC1B;AACA;EACE,qDAAqD;AACvD;AACA;EACE,UAAU;AACZ;;AAEA;EACE,kEAAkE;EAClE,wBAAwB;AAC1B;AACA;EACE,uDAAuD;AACzD;AACA;EACE,UAAU;AACZ;;AAEA;EACE,mEAAmE;EACnE,wBAAwB;AAC1B;AACA;EACE,wDAAwD;AAC1D;AACA;EACE,UAAU;AACZ","sourcesContent":["/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\n@import \"dirty-diff-decorator.css\";\n\n.monaco-editor .dirty-diff-added-line {\n  border-left: 3px solid var(--theia-editorGutter-addedBackground);\n  transition: opacity 0.5s;\n}\n.monaco-editor .dirty-diff-added-line:before {\n  background: var(--theia-editorGutter-addedBackground);\n}\n.monaco-editor .margin:hover .dirty-diff-added-line {\n  opacity: 1;\n}\n\n.monaco-editor .dirty-diff-removed-line:after {\n  border-left: 4px solid var(--theia-editorGutter-deletedBackground);\n  transition: opacity 0.5s;\n}\n.monaco-editor .dirty-diff-removed-line:before {\n  background: var(--theia-editorGutter-deletedBackground);\n}\n.monaco-editor .margin:hover .dirty-diff-removed-line {\n  opacity: 1;\n}\n\n.monaco-editor .dirty-diff-modified-line {\n  border-left: 3px solid var(--theia-editorGutter-modifiedBackground);\n  transition: opacity 0.5s;\n}\n.monaco-editor .dirty-diff-modified-line:before {\n  background: var(--theia-editorGutter-modifiedBackground);\n}\n.monaco-editor .margin:hover .dirty-diff-modified-line {\n  opacity: 1;\n}\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/@theia/scm/src/browser/style/index.css":
/*!***************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/@theia/scm/src/browser/style/index.css ***!
  \***************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `/********************************************************************************
 * Copyright (C) 2019 Red Hat, Inc. and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
 ********************************************************************************/

.theia-scm-commit {
  overflow: hidden;
  font-size: var(--theia-ui-font-size1);
  max-height: calc(100% - var(--theia-border-width));
  position: relative;
  padding: var(--theia-ui-padding)
           max(var(--theia-ui-padding), var(--theia-scrollbar-width))
           var(--theia-ui-padding)
           calc(var(--theia-ui-padding) * 3);
}

.theia-scm {
  box-sizing: border-box;
  height: 100%;
}

.groups-outer-container:focus {
  outline: 0;
  box-shadow: none;
  border: none;
}

.theia-scm .noWrapInfo {
  width: 100%;
  align-items: center;
}

.theia-scm:focus,
.theia-scm :focus {
  outline: 0;
  box-shadow: none;
  border: none;
}

.theia-scm .space-between {
  justify-content: space-between;
}

.theia-scm .changesHeader {
  font-weight: bold;
}

.theia-scm .theia-scm-amend {
  margin: 5px 0;
}

.theia-scm #messageInputContainer {
  position: relative;
}

.theia-scm #repositoryListContainer {
  display: flex;
  margin-bottom: 5px;
  flex: 1;
}

.theia-scm .groups-outer-container {
  overflow-y: auto;
  width: 100%;
  flex-grow: 1;
}

.theia-scm .warn {
  background-color: var(--theia-inputValidation-warningBackground) !important;
}

.theia-scm-main-container {
  display: flex;
  flex-direction: column;
  height: 100%;
}

.theia-scm-input-message-container {
  display: flex;
  flex-direction: column;
  max-height: 400px;
}

.theia-scm-input-message-container textarea {
  line-height: var(--theia-content-line-height);
  resize: none;
  box-sizing: border-box;
  border: none;
}

.theia-scm-input-message-container textarea:placeholder-shown {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.theia-scm-input-message-container textarea:focus {
  outline: var(--theia-border-width) solid var(--theia-focusBorder);
}

.theia-scm-input-message {
  width: 100%;
}

.theia-scm-input-message-idle:not(:focus) {
  border-color: var(--theia-input-border);
}

.theia-scm-input-message-info {
  border-color: var(--theia-inputValidation-infoBorder) !important;
}

.theia-scm-input-message-success {
  border-color: var(--theia-successBackground) !important;
}

.theia-scm-input-message-warning {
  border-color: var(--theia-inputValidation-warningBorder) !important;
}

.theia-scm-input-message-error {
  border-color: var(--theia-inputValidation-errorBorder) !important;
}

.theia-scm-message,
.theia-scm-input-validation-message {
  padding: 4px 4px 4px 4px;
}

.theia-scm-validation-message-info {
  background-color: var(--theia-inputValidation-infoBackground) !important;
  color: var(--theia-inputValidation-infoForeground);
  border: var(--theia-border-width) solid
    var(--theia-inputValidation-infoBorder);
  border-top: none; /* remove top border since the input declares it already */
}

.theia-scm-validation-message-success {
  background-color: var(--theia-successBackground) !important;
  color: var(--theia-inputValidation-warningBackground);
}

.theia-scm-message-warning,
.theia-scm-validation-message-warning {
  background-color: var(--theia-inputValidation-warningBackground) !important;
  color: var(--theia-inputValidation-warningForeground);
  border: var(--theia-border-width) solid
    var(--theia-inputValidation-warningBorder);
  border-top: none; /* remove top border since the input declares it already */
}

.theia-scm-validation-message-error {
  background-color: var(--theia-inputValidation-errorBackground) !important;
  color: var(--theia-inputValidation-errorForeground);
  border: var(--theia-border-width) solid
    var(--theia-inputValidation-errorBorder);
  border-top: none; /* remove top border since the input declares it already */
}

.no-select:focus {
  outline: none;
}

.theia-scm .scmItem {
  font-size: var(--theia-ui-font-size1);
  display: flex;
  align-items: center;
  justify-content: space-between;
  height: var(--theia-content-line-height);
  line-height: var(--theia-content-line-height);
  padding: 0px calc(var(--theia-ui-padding) / 2);
}

.theia-scm .scmItem:hover {
  cursor: pointer;
}

.theia-scm:focus-within .scmItem:focus {
  background: var(--theia-list-focusBackground);
  color: var(--theia-list-focusForeground);
}

.theia-scm:not(:focus-within) .scmItem:not(:focus) {
  background: var(--theia-list-inactiveFocusBackground);
}

.theia-scm:focus-within .scmItem.theia-mod-selected {
  background: var(--theia-list-activeSelectionBackground);
  color: var(--theia-list-activeSelectionForeground);
}

.theia-scm:not(:focus-within) .scmItem.theia-mod-selected {
  background: var(--theia-list-inactiveSelectionBackground);
  color: var(--theia-list-inactiveSelectionForeground);
}

.theia-scm .scmItem .path {
  font-size: var(--theia-ui-font-size0);
  margin-left: var(--theia-ui-padding);
  opacity: 0.7;
}

.theia-scm .scmItem .status {
  text-align: center;
  font-size: var(--theia-ui-font-size0);
  margin-right: var(--theia-ui-padding);
}

.scm-theia-header {
  display: flex;
  align-items: center;
  padding-right: var(--theia-ui-padding);
}

.scm-theia-header:hover {
  cursor: pointer;
}

.theia-scm-inline-actions-container {
  display: flex;
  justify-content: flex-end;
  margin-left: 3px;
  min-height: 16px;
}

.theia-scm-inline-actions {
  display: flex;
  align-items: center;
  gap: 2px;
  margin-right: var(--theia-ui-padding);
}

.theia-scm-inline-actions a {
  color: var(--theia-icon-foreground);
}

.theia-scm-inline-action {
  display: flex;
  align-items: center;
  min-width: var(--theia-icon-size);
  height: var(--theia-icon-size);
  line-height: var(--theia-icon-size);
  font-size: var(--theia-ui-font-size1);
  cursor: pointer;
}

.theia-scm-inline-action .open-file {
  height: var(--theia-icon-size);
  width: 12px;
  background: var(--theia-icon-open-file) no-repeat center center;
}

.theia-scm-panel {
  overflow: visible;
}
`, "",{"version":3,"sources":["webpack://./node_modules/@theia/scm/src/browser/style/index.css"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;EACE,gBAAgB;EAChB,qCAAqC;EACrC,kDAAkD;EAClD,kBAAkB;EAClB;;;4CAG0C;AAC5C;;AAEA;EACE,sBAAsB;EACtB,YAAY;AACd;;AAEA;EACE,UAAU;EACV,gBAAgB;EAChB,YAAY;AACd;;AAEA;EACE,WAAW;EACX,mBAAmB;AACrB;;AAEA;;EAEE,UAAU;EACV,gBAAgB;EAChB,YAAY;AACd;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,kBAAkB;EAClB,OAAO;AACT;;AAEA;EACE,gBAAgB;EAChB,WAAW;EACX,YAAY;AACd;;AAEA;EACE,2EAA2E;AAC7E;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,YAAY;AACd;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,iBAAiB;AACnB;;AAEA;EACE,6CAA6C;EAC7C,YAAY;EACZ,sBAAsB;EACtB,YAAY;AACd;;AAEA;EACE,gBAAgB;EAChB,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,iEAAiE;AACnE;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,uCAAuC;AACzC;;AAEA;EACE,gEAAgE;AAClE;;AAEA;EACE,uDAAuD;AACzD;;AAEA;EACE,mEAAmE;AACrE;;AAEA;EACE,iEAAiE;AACnE;;AAEA;;EAEE,wBAAwB;AAC1B;;AAEA;EACE,wEAAwE;EACxE,kDAAkD;EAClD;2CACyC;EACzC,gBAAgB,EAAE,0DAA0D;AAC9E;;AAEA;EACE,2DAA2D;EAC3D,qDAAqD;AACvD;;AAEA;;EAEE,2EAA2E;EAC3E,qDAAqD;EACrD;8CAC4C;EAC5C,gBAAgB,EAAE,0DAA0D;AAC9E;;AAEA;EACE,yEAAyE;EACzE,mDAAmD;EACnD;4CAC0C;EAC1C,gBAAgB,EAAE,0DAA0D;AAC9E;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,qCAAqC;EACrC,aAAa;EACb,mBAAmB;EACnB,8BAA8B;EAC9B,wCAAwC;EACxC,6CAA6C;EAC7C,8CAA8C;AAChD;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,6CAA6C;EAC7C,wCAAwC;AAC1C;;AAEA;EACE,qDAAqD;AACvD;;AAEA;EACE,uDAAuD;EACvD,kDAAkD;AACpD;;AAEA;EACE,yDAAyD;EACzD,oDAAoD;AACtD;;AAEA;EACE,qCAAqC;EACrC,oCAAoC;EACpC,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,qCAAqC;EACrC,qCAAqC;AACvC;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,sCAAsC;AACxC;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,yBAAyB;EACzB,gBAAgB;EAChB,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,QAAQ;EACR,qCAAqC;AACvC;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,iCAAiC;EACjC,8BAA8B;EAC9B,mCAAmC;EACnC,qCAAqC;EACrC,eAAe;AACjB;;AAEA;EACE,8BAA8B;EAC9B,WAAW;EACX,+DAA+D;AACjE;;AAEA;EACE,iBAAiB;AACnB","sourcesContent":["/********************************************************************************\n * Copyright (C) 2019 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.theia-scm-commit {\n  overflow: hidden;\n  font-size: var(--theia-ui-font-size1);\n  max-height: calc(100% - var(--theia-border-width));\n  position: relative;\n  padding: var(--theia-ui-padding)\n           max(var(--theia-ui-padding), var(--theia-scrollbar-width))\n           var(--theia-ui-padding)\n           calc(var(--theia-ui-padding) * 3);\n}\n\n.theia-scm {\n  box-sizing: border-box;\n  height: 100%;\n}\n\n.groups-outer-container:focus {\n  outline: 0;\n  box-shadow: none;\n  border: none;\n}\n\n.theia-scm .noWrapInfo {\n  width: 100%;\n  align-items: center;\n}\n\n.theia-scm:focus,\n.theia-scm :focus {\n  outline: 0;\n  box-shadow: none;\n  border: none;\n}\n\n.theia-scm .space-between {\n  justify-content: space-between;\n}\n\n.theia-scm .changesHeader {\n  font-weight: bold;\n}\n\n.theia-scm .theia-scm-amend {\n  margin: 5px 0;\n}\n\n.theia-scm #messageInputContainer {\n  position: relative;\n}\n\n.theia-scm #repositoryListContainer {\n  display: flex;\n  margin-bottom: 5px;\n  flex: 1;\n}\n\n.theia-scm .groups-outer-container {\n  overflow-y: auto;\n  width: 100%;\n  flex-grow: 1;\n}\n\n.theia-scm .warn {\n  background-color: var(--theia-inputValidation-warningBackground) !important;\n}\n\n.theia-scm-main-container {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n\n.theia-scm-input-message-container {\n  display: flex;\n  flex-direction: column;\n  max-height: 400px;\n}\n\n.theia-scm-input-message-container textarea {\n  line-height: var(--theia-content-line-height);\n  resize: none;\n  box-sizing: border-box;\n  border: none;\n}\n\n.theia-scm-input-message-container textarea:placeholder-shown {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.theia-scm-input-message-container textarea:focus {\n  outline: var(--theia-border-width) solid var(--theia-focusBorder);\n}\n\n.theia-scm-input-message {\n  width: 100%;\n}\n\n.theia-scm-input-message-idle:not(:focus) {\n  border-color: var(--theia-input-border);\n}\n\n.theia-scm-input-message-info {\n  border-color: var(--theia-inputValidation-infoBorder) !important;\n}\n\n.theia-scm-input-message-success {\n  border-color: var(--theia-successBackground) !important;\n}\n\n.theia-scm-input-message-warning {\n  border-color: var(--theia-inputValidation-warningBorder) !important;\n}\n\n.theia-scm-input-message-error {\n  border-color: var(--theia-inputValidation-errorBorder) !important;\n}\n\n.theia-scm-message,\n.theia-scm-input-validation-message {\n  padding: 4px 4px 4px 4px;\n}\n\n.theia-scm-validation-message-info {\n  background-color: var(--theia-inputValidation-infoBackground) !important;\n  color: var(--theia-inputValidation-infoForeground);\n  border: var(--theia-border-width) solid\n    var(--theia-inputValidation-infoBorder);\n  border-top: none; /* remove top border since the input declares it already */\n}\n\n.theia-scm-validation-message-success {\n  background-color: var(--theia-successBackground) !important;\n  color: var(--theia-inputValidation-warningBackground);\n}\n\n.theia-scm-message-warning,\n.theia-scm-validation-message-warning {\n  background-color: var(--theia-inputValidation-warningBackground) !important;\n  color: var(--theia-inputValidation-warningForeground);\n  border: var(--theia-border-width) solid\n    var(--theia-inputValidation-warningBorder);\n  border-top: none; /* remove top border since the input declares it already */\n}\n\n.theia-scm-validation-message-error {\n  background-color: var(--theia-inputValidation-errorBackground) !important;\n  color: var(--theia-inputValidation-errorForeground);\n  border: var(--theia-border-width) solid\n    var(--theia-inputValidation-errorBorder);\n  border-top: none; /* remove top border since the input declares it already */\n}\n\n.no-select:focus {\n  outline: none;\n}\n\n.theia-scm .scmItem {\n  font-size: var(--theia-ui-font-size1);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: var(--theia-content-line-height);\n  line-height: var(--theia-content-line-height);\n  padding: 0px calc(var(--theia-ui-padding) / 2);\n}\n\n.theia-scm .scmItem:hover {\n  cursor: pointer;\n}\n\n.theia-scm:focus-within .scmItem:focus {\n  background: var(--theia-list-focusBackground);\n  color: var(--theia-list-focusForeground);\n}\n\n.theia-scm:not(:focus-within) .scmItem:not(:focus) {\n  background: var(--theia-list-inactiveFocusBackground);\n}\n\n.theia-scm:focus-within .scmItem.theia-mod-selected {\n  background: var(--theia-list-activeSelectionBackground);\n  color: var(--theia-list-activeSelectionForeground);\n}\n\n.theia-scm:not(:focus-within) .scmItem.theia-mod-selected {\n  background: var(--theia-list-inactiveSelectionBackground);\n  color: var(--theia-list-inactiveSelectionForeground);\n}\n\n.theia-scm .scmItem .path {\n  font-size: var(--theia-ui-font-size0);\n  margin-left: var(--theia-ui-padding);\n  opacity: 0.7;\n}\n\n.theia-scm .scmItem .status {\n  text-align: center;\n  font-size: var(--theia-ui-font-size0);\n  margin-right: var(--theia-ui-padding);\n}\n\n.scm-theia-header {\n  display: flex;\n  align-items: center;\n  padding-right: var(--theia-ui-padding);\n}\n\n.scm-theia-header:hover {\n  cursor: pointer;\n}\n\n.theia-scm-inline-actions-container {\n  display: flex;\n  justify-content: flex-end;\n  margin-left: 3px;\n  min-height: 16px;\n}\n\n.theia-scm-inline-actions {\n  display: flex;\n  align-items: center;\n  gap: 2px;\n  margin-right: var(--theia-ui-padding);\n}\n\n.theia-scm-inline-actions a {\n  color: var(--theia-icon-foreground);\n}\n\n.theia-scm-inline-action {\n  display: flex;\n  align-items: center;\n  min-width: var(--theia-icon-size);\n  height: var(--theia-icon-size);\n  line-height: var(--theia-icon-size);\n  font-size: var(--theia-ui-font-size1);\n  cursor: pointer;\n}\n\n.theia-scm-inline-action .open-file {\n  height: var(--theia-icon-size);\n  width: 12px;\n  background: var(--theia-icon-open-file) no-repeat center center;\n}\n\n.theia-scm-panel {\n  overflow: visible;\n}\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/@theia/scm/src/browser/style/merge-editor.css":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/@theia/scm/src/browser/style/merge-editor.css ***!
  \**********************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `/********************************************************************************
 * Copyright (C) 2025 1C-Soft LLC and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
 ********************************************************************************/
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
/* copied and modified from https://github.com/microsoft/vscode/blob/1.96.3/src/vs/workbench/contrib/mergeEditor/browser/view/media/mergeEditor.css */

.theia-merge-editor .lm-SplitPanel {
  height: 100%;
  width: 100%;
  outline: none;
}

.theia-merge-editor .lm-SplitPanel > .lm-SplitPanel-child {
  min-width: 50px;
  min-height: var(--theia-content-line-height);
}

.theia-merge-editor .lm-SplitPanel > .lm-SplitPanel-handle {
  box-sizing: border-box;
}

.theia-merge-editor .lm-SplitPanel[data-orientation="horizontal"] > .lm-SplitPanel-handle {
  border-left: var(--theia-border-width) solid var(--theia-sideBarSectionHeader-border);
}

.theia-merge-editor .lm-SplitPanel[data-orientation="vertical"] > .lm-SplitPanel-handle {
  border-top: var(--theia-border-width) solid var(--theia-sideBarSectionHeader-border);
}

.theia-merge-editor .editor-pane .monaco-editor {
  outline: none;
}

.theia-merge-editor .editor-pane > .header {
  padding: 0 10px;
  min-height: 30px;
  display: flex;
  align-content: center;
  overflow: hidden;
  outline: none;
  user-select: none;
}

.theia-merge-editor .editor-pane > .header > span {
  align-self: center;
  text-overflow: ellipsis;
  overflow: hidden;
  padding-right: 6px;
  white-space: nowrap;
}

.theia-merge-editor .editor-pane > .header > .title {
  flex-shrink: 0;
}

.theia-merge-editor .editor-pane > .header > .description {
  flex-shrink: 0;
  display: flex;
  font-size: 12px;
  align-items: center;
  color: var(--theia-descriptionForeground);
}

.theia-merge-editor .editor-pane > .header > .description .codicon {
  font-size: 14px;
  color: var(--theia-descriptionForeground);
}

.theia-merge-editor .editor-pane > .header > .detail {
  margin-left: auto;
  font-size: 12px;
  color: var(--theia-descriptionForeground);
}

.theia-merge-editor .editor-pane > .header > .detail .codicon {
  font-size: 13px;
}

.theia-merge-editor .editor-pane > .header > .toolbar {
  flex-shrink: 0;
  display: flex;
  font-size: 11px;
  align-items: center;
  color: var(--theia-descriptionForeground);
}

.theia-merge-editor .editor-pane > .header > .toolbar .codicon {
  color: var(--theia-icon-foreground);
}

.theia-merge-editor .editor-pane > .header > .toolbar .action-label.theia-mod-disabled {
  cursor: default;
  background: none;
}

.theia-merge-editor .editor-pane.side > .header > .detail::before {
  content: '•';
  opacity: .5;
  padding-right: 3px;
}

.theia-merge-editor .editor-pane.side > .header > .detail {
  margin-left: 0;
}

.theia-merge-editor .editor-pane.side > .header > .toolbar {
  margin-left: auto;
}

.theia-merge-editor .editor-pane.result > .header > .description {
  display: inline;
  flex-shrink: 1;
}

.theia-merge-editor .editor-pane.result > .header > .detail {
  flex-shrink: 0;
}

.theia-merge-editor .editor-pane .action-zone .codelens-decoration {
  font-family: var(--vscode-editorCodeLens-fontFamily, var(--theia-ui-font-family));
}

.theia-merge-editor .editor-pane .merge-range:not(.handled):not(.focused) {
  border: 1px solid var(--theia-mergeEditor-conflict-unhandledUnfocused-border);
  background-color: var(--theia-mergeEditor-conflict-unhandledUnfocused-background);
}

.theia-merge-editor .editor-pane .merge-range:not(.handled).focused {
  border: 2px solid var(--theia-mergeEditor-conflict-unhandledFocused-border);
  background-color: var(--theia-mergeEditor-conflict-unhandledFocused-background);
}

.theia-merge-editor .editor-pane .merge-range.handled:not(.focused) {
  border: 1px solid var(--theia-mergeEditor-conflict-handledUnfocused-border);
  background-color: var(--theia-mergeEditor-conflict-handledUnfocused-background);
}

.theia-merge-editor .editor-pane .merge-range.handled.focused {
  border: 2px solid var(--theia-mergeEditor-conflict-handledFocused-border);
  background-color: var(--theia-mergeEditor-conflict-handledFocused-background);
}

.theia-merge-editor .editor-pane .diff {
  background-color: var(--theia-mergeEditor-change-background);
}

.theia-merge-editor .editor-pane.base .diff {
  background-color: var(--theia-mergeEditor-changeBase-background);
}

.theia-merge-editor .editor-pane.side1:not(.focused) .diff {
  background-color: var(--theia-merge-currentContentBackground);
}

.theia-merge-editor .editor-pane.side2:not(.focused) .diff {
  background-color: var(--theia-merge-incomingContentBackground);
}

.theia-merge-editor .editor-pane.result:not(.focused) .diff {
  background-color: var(--theia-merge-commonContentBackground);
}

.theia-merge-editor .editor-pane .diff-word {
  background-color: var(--theia-mergeEditor-change-word-background);
}

.theia-merge-editor .editor-pane.base .diff-word {
  background-color: var(--theia-mergeEditor-changeBase-word-background);
}

.theia-merge-editor .editor-pane.side1:not(.focused) .diff-word {
  background-color: var(--theia-merge-currentHeaderBackground);
}

.theia-merge-editor .editor-pane.side2:not(.focused) .diff-word {
  background-color: var(--theia-merge-incomingHeaderBackground);
}

.theia-merge-editor .editor-pane.result:not(.focused) .diff-word {
  background-color: var(--theia-merge-commonHeaderBackground);
}

.theia-merge-editor .editor-pane .diff-empty-word {
  margin-left: 3px;
  border-left: solid var(--theia-mergeEditor-change-word-background) 3px;
}

.theia-merge-editor .editor-pane.base .diff-empty-word {
  margin-left: 3px;
  border-left: solid var(--theia-mergeEditor-changeBase-word-background) 3px;
}

.theia-merge-editor .editor-pane.side1:not(.focused) .diff-empty-word {
  margin-left: 3px;
  border-left: solid var(--theia-merge-currentHeaderBackground) 3px;
}

.theia-merge-editor .editor-pane.side2:not(.focused) .diff-empty-word {
  margin-left: 3px;
  border-left: solid var(--theia-merge-incomingHeaderBackground) 3px;
}

.theia-merge-editor .editor-pane.result:not(.focused) .diff-empty-word {
  margin-left: 3px;
  border-left: solid var(--theia-merge-commonHeaderBackground) 3px;
}
`, "",{"version":3,"sources":["webpack://./node_modules/@theia/scm/src/browser/style/merge-editor.css"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;iFAciF;AACjF;;;+FAG+F;AAC/F,qJAAqJ;;AAErJ;EACE,YAAY;EACZ,WAAW;EACX,aAAa;AACf;;AAEA;EACE,eAAe;EACf,4CAA4C;AAC9C;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,qFAAqF;AACvF;;AAEA;EACE,oFAAoF;AACtF;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,eAAe;EACf,gBAAgB;EAChB,aAAa;EACb,qBAAqB;EACrB,gBAAgB;EAChB,aAAa;EACb,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;EAClB,uBAAuB;EACvB,gBAAgB;EAChB,kBAAkB;EAClB,mBAAmB;AACrB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,cAAc;EACd,aAAa;EACb,eAAe;EACf,mBAAmB;EACnB,yCAAyC;AAC3C;;AAEA;EACE,eAAe;EACf,yCAAyC;AAC3C;;AAEA;EACE,iBAAiB;EACjB,eAAe;EACf,yCAAyC;AAC3C;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,cAAc;EACd,aAAa;EACb,eAAe;EACf,mBAAmB;EACnB,yCAAyC;AAC3C;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,kBAAkB;AACpB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,eAAe;EACf,cAAc;AAChB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,iFAAiF;AACnF;;AAEA;EACE,6EAA6E;EAC7E,iFAAiF;AACnF;;AAEA;EACE,2EAA2E;EAC3E,+EAA+E;AACjF;;AAEA;EACE,2EAA2E;EAC3E,+EAA+E;AACjF;;AAEA;EACE,yEAAyE;EACzE,6EAA6E;AAC/E;;AAEA;EACE,4DAA4D;AAC9D;;AAEA;EACE,gEAAgE;AAClE;;AAEA;EACE,6DAA6D;AAC/D;;AAEA;EACE,8DAA8D;AAChE;;AAEA;EACE,4DAA4D;AAC9D;;AAEA;EACE,iEAAiE;AACnE;;AAEA;EACE,qEAAqE;AACvE;;AAEA;EACE,4DAA4D;AAC9D;;AAEA;EACE,6DAA6D;AAC/D;;AAEA;EACE,2DAA2D;AAC7D;;AAEA;EACE,gBAAgB;EAChB,sEAAsE;AACxE;;AAEA;EACE,gBAAgB;EAChB,0EAA0E;AAC5E;;AAEA;EACE,gBAAgB;EAChB,iEAAiE;AACnE;;AAEA;EACE,gBAAgB;EAChB,kEAAkE;AACpE;;AAEA;EACE,gBAAgB;EAChB,gEAAgE;AAClE","sourcesContent":["/********************************************************************************\n * Copyright (C) 2025 1C-Soft LLC and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/* copied and modified from https://github.com/microsoft/vscode/blob/1.96.3/src/vs/workbench/contrib/mergeEditor/browser/view/media/mergeEditor.css */\n\n.theia-merge-editor .lm-SplitPanel {\n  height: 100%;\n  width: 100%;\n  outline: none;\n}\n\n.theia-merge-editor .lm-SplitPanel > .lm-SplitPanel-child {\n  min-width: 50px;\n  min-height: var(--theia-content-line-height);\n}\n\n.theia-merge-editor .lm-SplitPanel > .lm-SplitPanel-handle {\n  box-sizing: border-box;\n}\n\n.theia-merge-editor .lm-SplitPanel[data-orientation=\"horizontal\"] > .lm-SplitPanel-handle {\n  border-left: var(--theia-border-width) solid var(--theia-sideBarSectionHeader-border);\n}\n\n.theia-merge-editor .lm-SplitPanel[data-orientation=\"vertical\"] > .lm-SplitPanel-handle {\n  border-top: var(--theia-border-width) solid var(--theia-sideBarSectionHeader-border);\n}\n\n.theia-merge-editor .editor-pane .monaco-editor {\n  outline: none;\n}\n\n.theia-merge-editor .editor-pane > .header {\n  padding: 0 10px;\n  min-height: 30px;\n  display: flex;\n  align-content: center;\n  overflow: hidden;\n  outline: none;\n  user-select: none;\n}\n\n.theia-merge-editor .editor-pane > .header > span {\n  align-self: center;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  padding-right: 6px;\n  white-space: nowrap;\n}\n\n.theia-merge-editor .editor-pane > .header > .title {\n  flex-shrink: 0;\n}\n\n.theia-merge-editor .editor-pane > .header > .description {\n  flex-shrink: 0;\n  display: flex;\n  font-size: 12px;\n  align-items: center;\n  color: var(--theia-descriptionForeground);\n}\n\n.theia-merge-editor .editor-pane > .header > .description .codicon {\n  font-size: 14px;\n  color: var(--theia-descriptionForeground);\n}\n\n.theia-merge-editor .editor-pane > .header > .detail {\n  margin-left: auto;\n  font-size: 12px;\n  color: var(--theia-descriptionForeground);\n}\n\n.theia-merge-editor .editor-pane > .header > .detail .codicon {\n  font-size: 13px;\n}\n\n.theia-merge-editor .editor-pane > .header > .toolbar {\n  flex-shrink: 0;\n  display: flex;\n  font-size: 11px;\n  align-items: center;\n  color: var(--theia-descriptionForeground);\n}\n\n.theia-merge-editor .editor-pane > .header > .toolbar .codicon {\n  color: var(--theia-icon-foreground);\n}\n\n.theia-merge-editor .editor-pane > .header > .toolbar .action-label.theia-mod-disabled {\n  cursor: default;\n  background: none;\n}\n\n.theia-merge-editor .editor-pane.side > .header > .detail::before {\n  content: '•';\n  opacity: .5;\n  padding-right: 3px;\n}\n\n.theia-merge-editor .editor-pane.side > .header > .detail {\n  margin-left: 0;\n}\n\n.theia-merge-editor .editor-pane.side > .header > .toolbar {\n  margin-left: auto;\n}\n\n.theia-merge-editor .editor-pane.result > .header > .description {\n  display: inline;\n  flex-shrink: 1;\n}\n\n.theia-merge-editor .editor-pane.result > .header > .detail {\n  flex-shrink: 0;\n}\n\n.theia-merge-editor .editor-pane .action-zone .codelens-decoration {\n  font-family: var(--vscode-editorCodeLens-fontFamily, var(--theia-ui-font-family));\n}\n\n.theia-merge-editor .editor-pane .merge-range:not(.handled):not(.focused) {\n  border: 1px solid var(--theia-mergeEditor-conflict-unhandledUnfocused-border);\n  background-color: var(--theia-mergeEditor-conflict-unhandledUnfocused-background);\n}\n\n.theia-merge-editor .editor-pane .merge-range:not(.handled).focused {\n  border: 2px solid var(--theia-mergeEditor-conflict-unhandledFocused-border);\n  background-color: var(--theia-mergeEditor-conflict-unhandledFocused-background);\n}\n\n.theia-merge-editor .editor-pane .merge-range.handled:not(.focused) {\n  border: 1px solid var(--theia-mergeEditor-conflict-handledUnfocused-border);\n  background-color: var(--theia-mergeEditor-conflict-handledUnfocused-background);\n}\n\n.theia-merge-editor .editor-pane .merge-range.handled.focused {\n  border: 2px solid var(--theia-mergeEditor-conflict-handledFocused-border);\n  background-color: var(--theia-mergeEditor-conflict-handledFocused-background);\n}\n\n.theia-merge-editor .editor-pane .diff {\n  background-color: var(--theia-mergeEditor-change-background);\n}\n\n.theia-merge-editor .editor-pane.base .diff {\n  background-color: var(--theia-mergeEditor-changeBase-background);\n}\n\n.theia-merge-editor .editor-pane.side1:not(.focused) .diff {\n  background-color: var(--theia-merge-currentContentBackground);\n}\n\n.theia-merge-editor .editor-pane.side2:not(.focused) .diff {\n  background-color: var(--theia-merge-incomingContentBackground);\n}\n\n.theia-merge-editor .editor-pane.result:not(.focused) .diff {\n  background-color: var(--theia-merge-commonContentBackground);\n}\n\n.theia-merge-editor .editor-pane .diff-word {\n  background-color: var(--theia-mergeEditor-change-word-background);\n}\n\n.theia-merge-editor .editor-pane.base .diff-word {\n  background-color: var(--theia-mergeEditor-changeBase-word-background);\n}\n\n.theia-merge-editor .editor-pane.side1:not(.focused) .diff-word {\n  background-color: var(--theia-merge-currentHeaderBackground);\n}\n\n.theia-merge-editor .editor-pane.side2:not(.focused) .diff-word {\n  background-color: var(--theia-merge-incomingHeaderBackground);\n}\n\n.theia-merge-editor .editor-pane.result:not(.focused) .diff-word {\n  background-color: var(--theia-merge-commonHeaderBackground);\n}\n\n.theia-merge-editor .editor-pane .diff-empty-word {\n  margin-left: 3px;\n  border-left: solid var(--theia-mergeEditor-change-word-background) 3px;\n}\n\n.theia-merge-editor .editor-pane.base .diff-empty-word {\n  margin-left: 3px;\n  border-left: solid var(--theia-mergeEditor-changeBase-word-background) 3px;\n}\n\n.theia-merge-editor .editor-pane.side1:not(.focused) .diff-empty-word {\n  margin-left: 3px;\n  border-left: solid var(--theia-merge-currentHeaderBackground) 3px;\n}\n\n.theia-merge-editor .editor-pane.side2:not(.focused) .diff-empty-word {\n  margin-left: 3px;\n  border-left: solid var(--theia-merge-incomingHeaderBackground) 3px;\n}\n\n.theia-merge-editor .editor-pane.result:not(.focused) .diff-empty-word {\n  margin-left: 3px;\n  border-left: solid var(--theia-merge-commonHeaderBackground) 3px;\n}\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ })

}]);
//# sourceMappingURL=vendors-node_modules_theia_core_shared_lumino_coreutils_index_js-node_modules_theia_scm_lib_b-242aba.js.map