{"version":3,"file":"vendors-node_modules_theia_output_lib_browser_output-contribution_js.js","mappings":"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","sources":["webpack:///./node_modules/@theia/output/src/browser/output-commands.ts?","webpack:///./node_modules/@theia/output/src/browser/output-context-menu.ts?","webpack:///./node_modules/@theia/output/src/browser/output-contribution.ts?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { codicon } from '@theia/core/lib/browser';\nimport { Command, nls } from '@theia/core/lib/common';\n\nexport namespace OutputCommands {\n\n    const OUTPUT_CATEGORY = 'Output';\n    const OUTPUT_CATEGORY_KEY = nls.getDefaultKey(OUTPUT_CATEGORY);\n\n    /* #region VS Code `OutputChannel` API */\n    // Based on: https://github.com/theia-ide/vscode/blob/standalone/0.19.x/src/vs/vscode.d.ts#L4692-L4745\n\n    export const APPEND: Command = {\n        id: 'output:append'\n    };\n\n    export const APPEND_LINE: Command = {\n        id: 'output:appendLine'\n    };\n\n    export const CLEAR: Command = {\n        id: 'output:clear'\n    };\n\n    export const SHOW: Command = {\n        id: 'output:show'\n    };\n\n    export const HIDE: Command = {\n        id: 'output:hide'\n    };\n\n    export const DISPOSE: Command = {\n        id: 'output:dispose'\n    };\n\n    /* #endregion VS Code `OutputChannel` API */\n\n    export const CLEAR__WIDGET = Command.toLocalizedCommand({\n        id: 'output:widget:clear',\n        category: OUTPUT_CATEGORY,\n        iconClass: codicon('clear-all')\n    }, '', OUTPUT_CATEGORY_KEY);\n\n    export const LOCK__WIDGET = Command.toLocalizedCommand({\n        id: 'output:widget:lock',\n        category: OUTPUT_CATEGORY,\n        iconClass: codicon('unlock')\n    }, '', OUTPUT_CATEGORY_KEY);\n\n    export const UNLOCK__WIDGET = Command.toLocalizedCommand({\n        id: 'output:widget:unlock',\n        category: OUTPUT_CATEGORY,\n        iconClass: codicon('lock')\n    }, '', OUTPUT_CATEGORY_KEY);\n\n    export const CLEAR__QUICK_PICK = Command.toLocalizedCommand({\n        id: 'output:pick-clear',\n        label: 'Clear Output Channel...',\n        category: OUTPUT_CATEGORY\n    }, 'theia/output/clearOutputChannel', OUTPUT_CATEGORY_KEY);\n\n    export const SHOW__QUICK_PICK = Command.toLocalizedCommand({\n        id: 'output:pick-show',\n        label: 'Show Output Channel...',\n        category: OUTPUT_CATEGORY\n    }, 'theia/output/showOutputChannel', OUTPUT_CATEGORY_KEY);\n\n    export const HIDE__QUICK_PICK = Command.toLocalizedCommand({\n        id: 'output:pick-hide',\n        label: 'Hide Output Channel...',\n        category: OUTPUT_CATEGORY\n    }, 'theia/output/hideOutputChannel', OUTPUT_CATEGORY_KEY);\n\n    export const DISPOSE__QUICK_PICK = Command.toLocalizedCommand({\n        id: 'output:pick-dispose',\n        label: 'Close Output Channel...',\n        category: OUTPUT_CATEGORY\n    }, 'theia/output/closeOutputChannel', OUTPUT_CATEGORY_KEY);\n\n    export const COPY_ALL: Command = {\n        id: 'output:copy-all',\n    };\n\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { injectable } from '@theia/core/shared/inversify';\nimport { MenuPath } from '@theia/core/lib/common';\nimport { MonacoContextMenuService } from '@theia/monaco/lib/browser/monaco-context-menu';\n\nexport namespace OutputContextMenu {\n    export const MENU_PATH: MenuPath = ['output_context_menu'];\n    export const TEXT_EDIT_GROUP = [...MENU_PATH, '0_text_edit_group'];\n    export const COMMAND_GROUP = [...MENU_PATH, '1_command_group'];\n    export const WIDGET_GROUP = [...MENU_PATH, '2_widget_group'];\n}\n\n@injectable()\nexport class OutputContextMenuService extends MonacoContextMenuService {\n\n    protected override menuPath(): MenuPath {\n        return OutputContextMenu.MENU_PATH;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { Widget } from '@theia/core/lib/browser/widgets/widget';\nimport { MaybePromise } from '@theia/core/lib/common/types';\nimport { CommonCommands, quickCommand, OpenHandler, open, OpenerOptions, OpenerService, QuickPickItem, QuickPickValue } from '@theia/core/lib/browser';\nimport { CommandRegistry, MenuModelRegistry, CommandService } from '@theia/core/lib/common';\nimport { AbstractViewContribution } from '@theia/core/lib/browser/shell/view-contribution';\nimport { OutputWidget } from './output-widget';\nimport { OutputContextMenu } from './output-context-menu';\nimport { OutputUri } from '../common/output-uri';\nimport { ClipboardService } from '@theia/core/lib/browser/clipboard-service';\nimport { OutputChannelManager, OutputChannel } from './output-channel';\nimport { OutputCommands } from './output-commands';\nimport { QuickPickSeparator, QuickPickService } from '@theia/core/lib/common/quick-pick-service';\nimport { nls } from '@theia/core/lib/common/nls';\n\n@injectable()\nexport class OutputContribution extends AbstractViewContribution<OutputWidget> implements OpenHandler {\n\n    @inject(ClipboardService)\n    protected readonly clipboardService: ClipboardService;\n\n    @inject(CommandService)\n    protected readonly commandService: CommandService;\n\n    @inject(OutputChannelManager)\n    protected readonly outputChannelManager: OutputChannelManager;\n\n    @inject(OpenerService)\n    protected readonly openerService: OpenerService;\n\n    @inject(QuickPickService)\n    protected readonly quickPickService: QuickPickService;\n\n    readonly id: string = `${OutputWidget.ID}-opener`;\n\n    constructor() {\n        super({\n            widgetId: OutputWidget.ID,\n            widgetName: OutputWidget.LABEL,\n            defaultWidgetOptions: {\n                area: 'bottom'\n            },\n            toggleCommandId: 'output:toggle',\n            toggleKeybinding: 'CtrlCmd+Shift+U'\n        });\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.outputChannelManager.onChannelWasShown(({ name, preserveFocus }) =>\n            open(this.openerService, OutputUri.create(name), { activate: !preserveFocus, reveal: true }));\n    }\n\n    override registerCommands(registry: CommandRegistry): void {\n        super.registerCommands(registry);\n        registry.registerCommand(OutputCommands.CLEAR__WIDGET, {\n            isEnabled: arg => {\n                if (arg instanceof Widget) {\n                    return arg instanceof OutputWidget;\n                }\n                return this.shell.currentWidget instanceof OutputWidget;\n            },\n            isVisible: arg => {\n                if (arg instanceof Widget) {\n                    return arg instanceof OutputWidget;\n                }\n                return this.shell.currentWidget instanceof OutputWidget;\n            },\n            execute: () => {\n                this.widget.then(widget => {\n                    this.withWidget(widget, output => {\n                        output.clear();\n                        return true;\n                    });\n                });\n            }\n        });\n        registry.registerCommand(OutputCommands.LOCK__WIDGET, {\n            isEnabled: widget => this.withWidget(widget, output => !output.isLocked),\n            isVisible: widget => this.withWidget(widget, output => !output.isLocked),\n            execute: widget => this.withWidget(widget, output => {\n                output.lock();\n                return true;\n            })\n        });\n        registry.registerCommand(OutputCommands.UNLOCK__WIDGET, {\n            isEnabled: widget => this.withWidget(widget, output => output.isLocked),\n            isVisible: widget => this.withWidget(widget, output => output.isLocked),\n            execute: widget => this.withWidget(widget, output => {\n                output.unlock();\n                return true;\n            })\n        });\n        registry.registerCommand(OutputCommands.COPY_ALL, {\n            execute: () => {\n                const textToCopy = this.tryGetWidget()?.getText();\n                if (textToCopy) {\n                    this.clipboardService.writeText(textToCopy);\n                }\n            }\n        });\n        registry.registerCommand(OutputCommands.APPEND, {\n            execute: ({ name, text }: { name: string, text: string }) => {\n                if (name && text) {\n                    this.outputChannelManager.getChannel(name).append(text);\n                }\n            }\n        });\n        registry.registerCommand(OutputCommands.APPEND_LINE, {\n            execute: ({ name, text }: { name: string, text: string }) => {\n                if (name && text) {\n                    this.outputChannelManager.getChannel(name).appendLine(text);\n                }\n            }\n        });\n        registry.registerCommand(OutputCommands.CLEAR, {\n            execute: ({ name }: { name: string }) => {\n                if (name) {\n                    this.outputChannelManager.getChannel(name).clear();\n                }\n            }\n        });\n        registry.registerCommand(OutputCommands.DISPOSE, {\n            execute: ({ name }: { name: string }) => {\n                if (name) {\n                    this.outputChannelManager.deleteChannel(name);\n                }\n            }\n        });\n        registry.registerCommand(OutputCommands.SHOW, {\n            execute: ({ name, options }: { name: string, options?: { preserveFocus?: boolean } }) => {\n                if (name) {\n                    const preserveFocus = options && options.preserveFocus || false;\n                    this.outputChannelManager.getChannel(name).show({ preserveFocus });\n                }\n            }\n        });\n        registry.registerCommand(OutputCommands.HIDE, {\n            execute: ({ name }: { name: string }) => {\n                if (name) {\n                    this.outputChannelManager.getChannel(name).hide();\n                }\n            }\n        });\n\n        registry.registerCommand(OutputCommands.CLEAR__QUICK_PICK, {\n            execute: async () => {\n                const channel = await this.pick({\n                    placeholder: OutputCommands.CLEAR__QUICK_PICK.label!,\n                    channels: this.outputChannelManager.getChannels().slice()\n                });\n                if (channel) {\n                    channel.clear();\n                }\n            },\n            isEnabled: () => !!this.outputChannelManager.getChannels().length,\n            isVisible: () => !!this.outputChannelManager.getChannels().length\n        });\n        registry.registerCommand(OutputCommands.SHOW__QUICK_PICK, {\n            execute: async () => {\n                const channel = await this.pick({\n                    placeholder: OutputCommands.SHOW__QUICK_PICK.label!,\n                    channels: this.outputChannelManager.getChannels().slice()\n                });\n                if (channel) {\n                    const { name } = channel;\n                    registry.executeCommand(OutputCommands.SHOW.id, { name, options: { preserveFocus: false } });\n                }\n            },\n            isEnabled: () => !!this.outputChannelManager.getChannels().length,\n            isVisible: () => !!this.outputChannelManager.getChannels().length\n        });\n        registry.registerCommand(OutputCommands.HIDE__QUICK_PICK, {\n            execute: async () => {\n                const channel = await this.pick({\n                    placeholder: OutputCommands.HIDE__QUICK_PICK.label!,\n                    channels: this.outputChannelManager.getVisibleChannels().slice()\n                });\n                if (channel) {\n                    const { name } = channel;\n                    registry.executeCommand(OutputCommands.HIDE.id, { name });\n                }\n            },\n            isEnabled: () => !!this.outputChannelManager.getVisibleChannels().length,\n            isVisible: () => !!this.outputChannelManager.getVisibleChannels().length\n        });\n        registry.registerCommand(OutputCommands.DISPOSE__QUICK_PICK, {\n            execute: async () => {\n                const channel = await this.pick({\n                    placeholder: OutputCommands.DISPOSE__QUICK_PICK.label!,\n                    channels: this.outputChannelManager.getChannels().slice()\n                });\n                if (channel) {\n                    const { name } = channel;\n                    registry.executeCommand(OutputCommands.DISPOSE.id, { name });\n                }\n            },\n            isEnabled: () => !!this.outputChannelManager.getChannels().length,\n            isVisible: () => !!this.outputChannelManager.getChannels().length\n        });\n    }\n\n    override registerMenus(registry: MenuModelRegistry): void {\n        super.registerMenus(registry);\n        registry.registerMenuAction(OutputContextMenu.TEXT_EDIT_GROUP, {\n            commandId: CommonCommands.COPY.id\n        });\n        registry.registerMenuAction(OutputContextMenu.TEXT_EDIT_GROUP, {\n            commandId: OutputCommands.COPY_ALL.id,\n            label: nls.localizeByDefault('Copy All')\n        });\n        registry.registerMenuAction(OutputContextMenu.COMMAND_GROUP, {\n            commandId: quickCommand.id,\n            label: nls.localizeByDefault('Command Palette...')\n        });\n        registry.registerMenuAction(OutputContextMenu.WIDGET_GROUP, {\n            commandId: OutputCommands.CLEAR__WIDGET.id,\n            label: nls.localizeByDefault('Clear Output')\n        });\n    }\n\n    canHandle(uri: URI): MaybePromise<number> {\n        return OutputUri.is(uri) ? 200 : 0;\n    }\n\n    async open(uri: URI, options?: OpenerOptions): Promise<OutputWidget> {\n        if (!OutputUri.is(uri)) {\n            throw new Error(`Expected '${OutputUri.SCHEME}' URI scheme. Got: ${uri} instead.`);\n        }\n        const widget = await this.openView(options);\n        return widget;\n    }\n\n    protected withWidget(\n        widget: Widget | undefined = this.tryGetWidget(),\n        predicate: (output: OutputWidget) => boolean = () => true\n    ): boolean | false {\n        return widget instanceof OutputWidget ? predicate(widget) : false;\n    }\n\n    protected async pick({ channels, placeholder }: { channels: OutputChannel[], placeholder: string }): Promise<OutputChannel | undefined> {\n        const items: Array<QuickPickValue<OutputChannel> | QuickPickItem | QuickPickSeparator> = [];\n        const outputChannels = nls.localize('theia/output/outputChannels', 'Output Channels');\n        const hiddenChannels = nls.localize('theia/output/hiddenChannels', 'Hidden Channels');\n        for (let i = 0; i < channels.length; i++) {\n            const channel = channels[i];\n            if (i === 0) {\n                items.push({ label: channel.isVisible ? outputChannels : hiddenChannels, type: 'separator' });\n            } else if (!channel.isVisible && channels[i - 1].isVisible) {\n                items.push({ label: hiddenChannels, type: 'separator' });\n            }\n            items.push({ label: channel.name, value: channel });\n        }\n        const selectedItem = await this.quickPickService.show(items, { placeholder });\n        return selectedItem && ('value' in selectedItem) ? selectedItem.value : undefined;\n    }\n}\n"],"names":[],"sourceRoot":""}