"use strict";
(self["webpackChunk"] = self["webpackChunk"] || []).push([["vendors-node_modules_theia_navigator_lib_browser_file-navigator-commands_js-node_modules_thei-f4fefb"],{

/***/ "./node_modules/@theia/navigator/lib/browser/file-navigator-commands.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@theia/navigator/lib/browser/file-navigator-commands.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


// *****************************************************************************
// Copyright (C) 2022 Ericsson and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FileNavigatorCommands = void 0;
const browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "./node_modules/@theia/core/lib/browser/index.js");
const common_1 = __webpack_require__(/*! @theia/core/lib/common */ "./node_modules/@theia/core/lib/common/index.js");
const browser_2 = __webpack_require__(/*! @theia/workspace/lib/browser */ "./node_modules/@theia/workspace/lib/browser/index.js");
var FileNavigatorCommands;
(function (FileNavigatorCommands) {
    FileNavigatorCommands.REVEAL_IN_NAVIGATOR = common_1.Command.toLocalizedCommand({
        id: 'navigator.reveal',
        label: 'Reveal in Explorer'
    }, 'theia/navigator/reveal');
    FileNavigatorCommands.TOGGLE_HIDDEN_FILES = common_1.Command.toLocalizedCommand({
        id: 'navigator.toggle.hidden.files',
        label: 'Toggle Hidden Files'
    }, 'theia/navigator/toggleHiddenFiles');
    FileNavigatorCommands.TOGGLE_AUTO_REVEAL = common_1.Command.toLocalizedCommand({
        id: 'navigator.toggle.autoReveal',
        category: browser_1.CommonCommands.FILE_CATEGORY,
        label: 'Auto Reveal'
    }, 'theia/navigator/autoReveal', browser_1.CommonCommands.FILE_CATEGORY_KEY);
    FileNavigatorCommands.REFRESH_NAVIGATOR = common_1.Command.toLocalizedCommand({
        id: 'navigator.refresh',
        category: browser_1.CommonCommands.FILE_CATEGORY,
        label: 'Refresh in Explorer',
        iconClass: (0, browser_1.codicon)('refresh')
    }, 'theia/navigator/refresh', browser_1.CommonCommands.FILE_CATEGORY_KEY);
    FileNavigatorCommands.COLLAPSE_ALL = common_1.Command.toDefaultLocalizedCommand({
        id: 'navigator.collapse.all',
        category: browser_1.CommonCommands.FILE_CATEGORY,
        label: 'Collapse Folders in Explorer',
        iconClass: (0, browser_1.codicon)('collapse-all')
    });
    FileNavigatorCommands.ADD_ROOT_FOLDER = {
        id: 'navigator.addRootFolder'
    };
    FileNavigatorCommands.FOCUS = common_1.Command.toDefaultLocalizedCommand({
        id: 'workbench.files.action.focusFilesExplorer',
        category: browser_1.CommonCommands.FILE_CATEGORY,
        label: 'Focus on Files Explorer'
    });
    FileNavigatorCommands.OPEN = {
        id: 'navigator.open',
    };
    FileNavigatorCommands.OPEN_WITH = {
        id: 'navigator.openWith',
    };
    FileNavigatorCommands.NEW_FILE_TOOLBAR = {
        id: `${browser_2.WorkspaceCommands.NEW_FILE.id}.toolbar`,
        iconClass: (0, browser_1.codicon)('new-file')
    };
    FileNavigatorCommands.NEW_FOLDER_TOOLBAR = {
        id: `${browser_2.WorkspaceCommands.NEW_FOLDER.id}.toolbar`,
        iconClass: (0, browser_1.codicon)('new-folder')
    };
    /**
     * @deprecated since 1.21.0. Use WorkspaceCommands.COPY_RELATIVE_FILE_COMMAND instead.
     */
    FileNavigatorCommands.COPY_RELATIVE_FILE_PATH = browser_2.WorkspaceCommands.COPY_RELATIVE_FILE_PATH;
})(FileNavigatorCommands || (exports.FileNavigatorCommands = FileNavigatorCommands = {}));


/***/ }),

/***/ "./node_modules/@theia/test/lib/browser/view/test-output-view-contribution.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@theia/test/lib/browser/view/test-output-view-contribution.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


// *****************************************************************************
// Copyright (C) 2023 STMicroelectronics and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TestOutputViewContribution = void 0;
const tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
const browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "./node_modules/@theia/core/lib/browser/index.js");
const test_output_widget_1 = __webpack_require__(/*! ./test-output-widget */ "./node_modules/@theia/test/lib/browser/view/test-output-widget.js");
const inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify/index.js");
const core_1 = __webpack_require__(/*! @theia/core */ "./node_modules/@theia/core/lib/common/index.js");
let TestOutputViewContribution = class TestOutputViewContribution extends browser_1.AbstractViewContribution {
    constructor() {
        super({
            widgetId: test_output_widget_1.TestOutputWidget.ID,
            widgetName: core_1.nls.localizeByDefault('Test Output'),
            defaultWidgetOptions: {
                area: 'bottom'
            }
        });
    }
};
exports.TestOutputViewContribution = TestOutputViewContribution;
exports.TestOutputViewContribution = TestOutputViewContribution = tslib_1.__decorate([
    (0, inversify_1.injectable)(),
    tslib_1.__metadata("design:paramtypes", [])
], TestOutputViewContribution);


/***/ }),

/***/ "./node_modules/@theia/test/lib/browser/view/test-output-widget.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@theia/test/lib/browser/view/test-output-widget.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


var TestOutputWidget_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TestOutputWidget = void 0;
const tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
// *****************************************************************************
// Copyright (C) 2023 STMicroelectronics and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
const xterm_1 = __webpack_require__(/*! xterm */ "./node_modules/xterm/lib/xterm.js");
const xterm_addon_fit_1 = __webpack_require__(/*! xterm-addon-fit */ "./node_modules/xterm-addon-fit/lib/xterm-addon-fit.js");
const browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "./node_modules/@theia/core/lib/browser/index.js");
const inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify/index.js");
const core_1 = __webpack_require__(/*! @theia/core */ "./node_modules/@theia/core/lib/common/index.js");
const terminal_preferences_1 = __webpack_require__(/*! @theia/terminal/lib/browser/terminal-preferences */ "./node_modules/@theia/terminal/lib/browser/terminal-preferences.js");
const terminal_theme_service_1 = __webpack_require__(/*! @theia/terminal/lib/browser/terminal-theme-service */ "./node_modules/@theia/terminal/lib/browser/terminal-theme-service.js");
const test_output_ui_model_1 = __webpack_require__(/*! ./test-output-ui-model */ "./node_modules/@theia/test/lib/browser/view/test-output-ui-model.js");
const debounce = __webpack_require__(/*! p-debounce */ "./node_modules/p-debounce/index.js");
let TestOutputWidget = TestOutputWidget_1 = class TestOutputWidget extends browser_1.BaseWidget {
    constructor() {
        super();
        this.disposeOnSetInput = new core_1.DisposableCollection();
        this.resizeTerminal = debounce(() => this.doResizeTerminal(), 50);
        this.id = TestOutputWidget_1.ID;
        this.title.label = 'Test Output';
        this.title.caption = 'Test Output';
        this.title.iconClass = (0, browser_1.codicon)('symbol-keyword');
        this.title.closable = true;
    }
    init() {
        this.term = new xterm_1.Terminal({
            disableStdin: true,
            cursorStyle: 'bar',
            fontFamily: this.preferences['terminal.integrated.fontFamily'],
            fontSize: this.preferences['terminal.integrated.fontSize'],
            fontWeight: this.preferences['terminal.integrated.fontWeight'],
            fontWeightBold: this.preferences['terminal.integrated.fontWeightBold'],
            drawBoldTextInBrightColors: this.preferences['terminal.integrated.drawBoldTextInBrightColors'],
            letterSpacing: this.preferences['terminal.integrated.letterSpacing'],
            lineHeight: this.preferences['terminal.integrated.lineHeight'],
            scrollback: this.preferences['terminal.integrated.scrollback'],
            fastScrollSensitivity: this.preferences['terminal.integrated.fastScrollSensitivity'],
            theme: this.themeService.theme
        });
        this.fitAddon = new xterm_addon_fit_1.FitAddon();
        this.term.loadAddon(this.fitAddon);
        this.setInput(this.uiModel.selectedOutputSource);
        this.uiModel.onDidChangeSelectedOutputSource(source => this.setInput(source));
        this.toDispose.push(core_1.Disposable.create(() => this.term.dispose()));
    }
    setInput(selectedOutputSource) {
        this.disposeOnSetInput.dispose();
        this.disposeOnSetInput = new core_1.DisposableCollection();
        this.term.clear();
        if (selectedOutputSource) {
            selectedOutputSource.output.forEach(item => this.term.writeln(item.output));
            this.disposeOnSetInput.push(selectedOutputSource.onDidAddTestOutput(items => {
                items.forEach(item => this.term.writeln(item.output));
            }));
            this.term.scrollToBottom();
        }
    }
    onAfterAttach(msg) {
        super.onAfterAttach(msg);
        this.term.open(this.node);
        if (browser_1.isFirefox) {
            // monkey patching intersection observer handling for secondary window support
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            const renderService = this.term._core._renderService;
            const originalFunc = renderService._onIntersectionChange.bind(renderService);
            const replacement = function (entry) {
                if (entry.target.ownerDocument !== document) {
                    // in Firefox, the intersection observer always reports the widget as non-intersecting if the dom element
                    // is in a different document from when the IntersectionObserver started observing. Since we know
                    // that the widget is always "visible" when in a secondary window, so we mark the entry as "intersecting"
                    const patchedEvent = {
                        ...entry,
                        isIntersecting: true,
                    };
                    originalFunc(patchedEvent);
                }
                else {
                    originalFunc(entry);
                }
            };
            renderService._onIntersectionChange = replacement;
        }
        if (browser_1.isFirefox) {
            // The software scrollbars don't work with xterm.js, so we disable the scrollbar if we are on firefox.
            if (this.term.element) {
                this.term.element.children.item(0).style.overflow = 'hidden';
            }
        }
    }
    onResize(msg) {
        super.onResize(msg);
        this.resizeTerminal();
    }
    doResizeTerminal() {
        if (this.isDisposed) {
            return;
        }
        const geo = this.fitAddon.proposeDimensions();
        if (geo) {
            const cols = geo.cols;
            const rows = geo.rows - 1; // subtract one row for margin
            this.term.resize(cols, rows);
        }
    }
};
exports.TestOutputWidget = TestOutputWidget;
TestOutputWidget.ID = 'test-output-view';
tslib_1.__decorate([
    (0, inversify_1.inject)(terminal_preferences_1.TerminalPreferences),
    tslib_1.__metadata("design:type", Object)
], TestOutputWidget.prototype, "preferences", void 0);
tslib_1.__decorate([
    (0, inversify_1.inject)(terminal_theme_service_1.TerminalThemeService),
    tslib_1.__metadata("design:type", terminal_theme_service_1.TerminalThemeService)
], TestOutputWidget.prototype, "themeService", void 0);
tslib_1.__decorate([
    (0, inversify_1.inject)(test_output_ui_model_1.TestOutputUIModel),
    tslib_1.__metadata("design:type", test_output_ui_model_1.TestOutputUIModel)
], TestOutputWidget.prototype, "uiModel", void 0);
tslib_1.__decorate([
    (0, inversify_1.postConstruct)(),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", []),
    tslib_1.__metadata("design:returntype", void 0)
], TestOutputWidget.prototype, "init", null);
exports.TestOutputWidget = TestOutputWidget = TestOutputWidget_1 = tslib_1.__decorate([
    (0, inversify_1.injectable)(),
    tslib_1.__metadata("design:paramtypes", [])
], TestOutputWidget);


/***/ }),

/***/ "./node_modules/@theia/test/lib/browser/view/test-view-frontend-module.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@theia/test/lib/browser/view/test-view-frontend-module.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


// *****************************************************************************
// Copyright (C) 2023 STMicroelectronics and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createTestRunContainer = exports.createTestTreeContainer = void 0;
__webpack_require__(/*! ../../../src/browser/style/index.css */ "./node_modules/@theia/test/src/browser/style/index.css");
const inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify/index.js");
const browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "./node_modules/@theia/core/lib/browser/index.js");
const test_tree_widget_1 = __webpack_require__(/*! ./test-tree-widget */ "./node_modules/@theia/test/lib/browser/view/test-tree-widget.js");
const test_view_contribution_1 = __webpack_require__(/*! ./test-view-contribution */ "./node_modules/@theia/test/lib/browser/view/test-view-contribution.js");
const test_service_1 = __webpack_require__(/*! ../test-service */ "./node_modules/@theia/test/lib/browser/test-service.js");
const core_1 = __webpack_require__(/*! @theia/core */ "./node_modules/@theia/core/lib/common/index.js");
const tab_bar_toolbar_1 = __webpack_require__(/*! @theia/core/lib/browser/shell/tab-bar-toolbar */ "./node_modules/@theia/core/lib/browser/shell/tab-bar-toolbar/index.js");
const test_execution_state_manager_1 = __webpack_require__(/*! ./test-execution-state-manager */ "./node_modules/@theia/test/lib/browser/view/test-execution-state-manager.js");
const test_result_widget_1 = __webpack_require__(/*! ./test-result-widget */ "./node_modules/@theia/test/lib/browser/view/test-result-widget.js");
const test_output_widget_1 = __webpack_require__(/*! ./test-output-widget */ "./node_modules/@theia/test/lib/browser/view/test-output-widget.js");
const test_output_view_contribution_1 = __webpack_require__(/*! ./test-output-view-contribution */ "./node_modules/@theia/test/lib/browser/view/test-output-view-contribution.js");
const test_output_ui_model_1 = __webpack_require__(/*! ./test-output-ui-model */ "./node_modules/@theia/test/lib/browser/view/test-output-ui-model.js");
const test_run_widget_1 = __webpack_require__(/*! ./test-run-widget */ "./node_modules/@theia/test/lib/browser/view/test-run-widget.js");
const test_result_view_contribution_1 = __webpack_require__(/*! ./test-result-view-contribution */ "./node_modules/@theia/test/lib/browser/view/test-result-view-contribution.js");
const test_run_view_contribution_1 = __webpack_require__(/*! ./test-run-view-contribution */ "./node_modules/@theia/test/lib/browser/view/test-run-view-contribution.js");
const test_context_key_service_1 = __webpack_require__(/*! ./test-context-key-service */ "./node_modules/@theia/test/lib/browser/view/test-context-key-service.js");
const test_execution_progress_service_1 = __webpack_require__(/*! ../test-execution-progress-service */ "./node_modules/@theia/test/lib/browser/test-execution-progress-service.js");
const test_preferences_1 = __webpack_require__(/*! ../test-preferences */ "./node_modules/@theia/test/lib/browser/test-preferences.js");
exports["default"] = new inversify_1.ContainerModule(bind => {
    (0, test_preferences_1.bindTestPreferences)(bind);
    (0, core_1.bindContributionProvider)(bind, test_service_1.TestContribution);
    bind(test_context_key_service_1.TestContextKeyService).toSelf().inSingletonScope();
    bind(test_service_1.TestService).to(test_service_1.DefaultTestService).inSingletonScope();
    bind(browser_1.WidgetFactory).toDynamicValue(({ container }) => ({
        id: test_output_widget_1.TestOutputWidget.ID,
        createWidget: () => container.get(test_output_widget_1.TestOutputWidget)
    })).inSingletonScope();
    bind(test_output_widget_1.TestOutputWidget).toSelf();
    bind(browser_1.WidgetFactory).toDynamicValue(({ container }) => ({
        id: test_result_widget_1.TestResultWidget.ID,
        createWidget: () => container.get(test_result_widget_1.TestResultWidget)
    })).inSingletonScope();
    bind(test_result_widget_1.TestResultWidget).toSelf();
    bind(test_tree_widget_1.TestTreeWidget).toDynamicValue(({ container }) => {
        const child = createTestTreeContainer(container);
        return child.get(test_tree_widget_1.TestTreeWidget);
    });
    bind(browser_1.WidgetFactory).toDynamicValue(({ container }) => ({
        id: test_tree_widget_1.TestTreeWidget.ID,
        createWidget: () => container.get(test_tree_widget_1.TestTreeWidget)
    })).inSingletonScope();
    bind(test_run_widget_1.TestRunTreeWidget).toDynamicValue(({ container }) => {
        const child = createTestRunContainer(container);
        return child.get(test_run_widget_1.TestRunTreeWidget);
    });
    bind(browser_1.WidgetFactory).toDynamicValue(({ container }) => ({
        id: test_run_widget_1.TestRunTreeWidget.ID,
        createWidget: () => container.get(test_run_widget_1.TestRunTreeWidget)
    })).inSingletonScope();
    bind(browser_1.WidgetFactory).toDynamicValue(({ container }) => ({
        id: test_view_contribution_1.TEST_VIEW_CONTAINER_ID,
        createWidget: async () => {
            const viewContainer = container.get(browser_1.ViewContainer.Factory)({
                id: test_view_contribution_1.TEST_VIEW_CONTAINER_ID,
                progressLocationId: 'test'
            });
            viewContainer.setTitleOptions(test_view_contribution_1.TEST_VIEW_CONTAINER_TITLE_OPTIONS);
            let widget = await container.get(browser_1.WidgetManager).getOrCreateWidget(test_tree_widget_1.TestTreeWidget.ID);
            viewContainer.addWidget(widget, {
                canHide: false,
                initiallyCollapsed: false
            });
            widget = await container.get(browser_1.WidgetManager).getOrCreateWidget(test_run_widget_1.TestRunTreeWidget.ID);
            viewContainer.addWidget(widget, {
                canHide: true,
                initiallyCollapsed: false,
            });
            return viewContainer;
        }
    })).inSingletonScope();
    (0, browser_1.bindViewContribution)(bind, test_view_contribution_1.TestViewContribution);
    (0, browser_1.bindViewContribution)(bind, test_run_view_contribution_1.TestRunViewContribution);
    (0, browser_1.bindViewContribution)(bind, test_result_view_contribution_1.TestResultViewContribution);
    (0, browser_1.bindViewContribution)(bind, test_output_view_contribution_1.TestOutputViewContribution);
    bind(browser_1.FrontendApplicationContribution).toService(test_view_contribution_1.TestViewContribution);
    bind(tab_bar_toolbar_1.TabBarToolbarContribution).toService(test_view_contribution_1.TestViewContribution);
    bind(tab_bar_toolbar_1.TabBarToolbarContribution).toService(test_run_view_contribution_1.TestRunViewContribution);
    bind(test_execution_state_manager_1.TestExecutionStateManager).toSelf().inSingletonScope();
    bind(test_output_ui_model_1.TestOutputUIModel).toSelf().inSingletonScope();
    bind(test_execution_progress_service_1.TestExecutionProgressService).to(test_execution_progress_service_1.DefaultTestExecutionProgressService).inSingletonScope();
});
function createTestTreeContainer(parent) {
    return (0, browser_1.createTreeContainer)(parent, {
        tree: test_tree_widget_1.TestTree,
        props: {
            virtualized: false,
            search: true,
            contextMenuPath: test_view_contribution_1.TEST_VIEW_CONTEXT_MENU
        },
        widget: test_tree_widget_1.TestTreeWidget,
    });
}
exports.createTestTreeContainer = createTestTreeContainer;
function createTestRunContainer(parent) {
    return (0, browser_1.createTreeContainer)(parent, {
        tree: test_run_widget_1.TestRunTree,
        props: {
            virtualized: false,
            search: true,
            multiSelect: false,
            contextMenuPath: test_run_view_contribution_1.TEST_RUNS_CONTEXT_MENU
        },
        widget: test_run_widget_1.TestRunTreeWidget
    });
}
exports.createTestRunContainer = createTestRunContainer;


/***/ }),

/***/ "./node_modules/@theia/test/src/browser/style/index.css":
/*!**************************************************************!*\
  !*** ./node_modules/@theia/test/src/browser/style/index.css ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_cjs_js_index_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../../../../css-loader/dist/cjs.js!./index.css */ "./node_modules/css-loader/dist/cjs.js!./node_modules/@theia/test/src/browser/style/index.css");

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_index_css__WEBPACK_IMPORTED_MODULE_1__["default"], options);



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_index_css__WEBPACK_IMPORTED_MODULE_1__["default"].locals || {});

/***/ }),

/***/ "./node_modules/@theia/workspace/lib/browser/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@theia/workspace/lib/browser/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


// *****************************************************************************
// Copyright (C) 2017 TypeFox and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
tslib_1.__exportStar(__webpack_require__(/*! ./workspace-commands */ "./node_modules/@theia/workspace/lib/browser/workspace-commands.js"), exports);
tslib_1.__exportStar(__webpack_require__(/*! ./workspace-service */ "./node_modules/@theia/workspace/lib/browser/workspace-service.js"), exports);
tslib_1.__exportStar(__webpack_require__(/*! ./canonical-uri-service */ "./node_modules/@theia/workspace/lib/browser/canonical-uri-service.js"), exports);
tslib_1.__exportStar(__webpack_require__(/*! ./workspace-frontend-contribution */ "./node_modules/@theia/workspace/lib/browser/workspace-frontend-contribution.js"), exports);
tslib_1.__exportStar(__webpack_require__(/*! ./workspace-frontend-module */ "./node_modules/@theia/workspace/lib/browser/workspace-frontend-module.js"), exports);
tslib_1.__exportStar(__webpack_require__(/*! ./workspace-preferences */ "./node_modules/@theia/workspace/lib/browser/workspace-preferences.js"), exports);
tslib_1.__exportStar(__webpack_require__(/*! ./workspace-trust-service */ "./node_modules/@theia/workspace/lib/browser/workspace-trust-service.js"), exports);


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/@theia/test/src/browser/style/index.css":
/*!****************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/@theia/test/src/browser/style/index.css ***!
  \****************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `/******************************************************************************
* Copyright (C) 2023 STMicroelectronics and others.
* This program and the accompanying materials are made available under the
* terms of the Eclipse Public License v. 2.0 which is available at
* http://www.eclipse.org/legal/epl-2.0.
*
* This Source Code may also be made available under the following Secondary
* Licenses when the conditions for such availability set forth in the Eclipse
* Public License v. 2.0 are satisfied: GNU General Public License, version 2
* with the GNU Classpath Exception which is available at
* https://www.gnu.org/software/classpath/license.html.
*
* SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
********************************************************************************/

.theia-test-view {
    height: 100%
}

.theia-test-view .passed,
.theia-test-run-view .passed {
    color: var(--theia-successBackground);
}

.theia-test-view .failed,
.theia-test-run-view .failed {
    color: var(--theia-editorError-foreground);
}

.theia-test-view .errored,
.theia-test-run-view .errored {
    color: var(--theia-editorError-foreground);
}

.theia-test-view .queued,
.theia-test-run-view .queued {
    color: var(--theia-editorWarning-foreground);
}

.theia-test-result-view .debug-frame {
    white-space: pre;
}

.theia-test-view .theia-TreeNode:not(:hover):not(.theia-mod-selected) .theia-test-tree-inline-action {
    display: none;
}`, "",{"version":3,"sources":["webpack://./node_modules/@theia/test/src/browser/style/index.css"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;gFAagF;;AAEhF;IACI;AACJ;;AAEA;;IAEI,qCAAqC;AACzC;;AAEA;;IAEI,0CAA0C;AAC9C;;AAEA;;IAEI,0CAA0C;AAC9C;;AAEA;;IAEI,4CAA4C;AAChD;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,aAAa;AACjB","sourcesContent":["/******************************************************************************\n* Copyright (C) 2023 STMicroelectronics and others.\n* This program and the accompanying materials are made available under the\n* terms of the Eclipse Public License v. 2.0 which is available at\n* http://www.eclipse.org/legal/epl-2.0.\n*\n* This Source Code may also be made available under the following Secondary\n* Licenses when the conditions for such availability set forth in the Eclipse\n* Public License v. 2.0 are satisfied: GNU General Public License, version 2\n* with the GNU Classpath Exception which is available at\n* https://www.gnu.org/software/classpath/license.html.\n*\n* SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n********************************************************************************/\n\n.theia-test-view {\n    height: 100%\n}\n\n.theia-test-view .passed,\n.theia-test-run-view .passed {\n    color: var(--theia-successBackground);\n}\n\n.theia-test-view .failed,\n.theia-test-run-view .failed {\n    color: var(--theia-editorError-foreground);\n}\n\n.theia-test-view .errored,\n.theia-test-run-view .errored {\n    color: var(--theia-editorError-foreground);\n}\n\n.theia-test-view .queued,\n.theia-test-run-view .queued {\n    color: var(--theia-editorWarning-foreground);\n}\n\n.theia-test-result-view .debug-frame {\n    white-space: pre;\n}\n\n.theia-test-view .theia-TreeNode:not(:hover):not(.theia-mod-selected) .theia-test-tree-inline-action {\n    display: none;\n}"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ })

}]);
//# sourceMappingURL=vendors-node_modules_theia_navigator_lib_browser_file-navigator-commands_js-node_modules_thei-f4fefb.js.map