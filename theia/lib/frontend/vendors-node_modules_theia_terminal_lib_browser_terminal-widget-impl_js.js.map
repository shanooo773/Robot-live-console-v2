{"version":3,"file":"vendors-node_modules_theia_terminal_lib_browser_terminal-widget-impl_js.js","mappings":"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","sources":["webpack:///./node_modules/@theia/terminal/src/browser/base/terminal-widget.ts?","webpack:///./node_modules/@theia/terminal/src/browser/search/terminal-search-widget.tsx?","webpack:///./node_modules/@theia/terminal/src/browser/shell-terminal-profile.ts?","webpack:///./node_modules/@theia/terminal/src/browser/terminal-copy-on-selection-handler.ts?","webpack:///./node_modules/@theia/terminal/src/browser/terminal-frontend-contribution.ts?","webpack:///./node_modules/@theia/terminal/src/browser/terminal-profile-service.ts?","webpack:///./node_modules/@theia/terminal/src/browser/terminal-widget-impl.ts?","webpack:///./node_modules/@theia/terminal/src/common/base-terminal-protocol.ts?","webpack:///./node_modules/@theia/terminal/src/common/shell-type.ts?","webpack:///./node_modules/@theia/terminal/src/common/terminal-protocol.ts?","webpack:///./node_modules/@theia/terminal/src/common/terminal-watcher.ts?","webpack:///./node_modules/@theia/terminal/src/browser/style/terminal-search.css?","webpack:///./node_modules/@theia/terminal/src/browser/style/terminal-search.css?./node_modules/css-loader/dist/cjs.js","webpack:///SearchAddon/webpack/universalModuleDefinition?","webpack:///SearchAddon/../../src/common/EventEmitter.ts?","webpack:///SearchAddon/../../src/common/Lifecycle.ts?","webpack:///SearchAddon/webpack/bootstrap?","webpack:///SearchAddon/./src/SearchAddon.ts?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Event, ViewColumn } from '@theia/core';\nimport { BaseWidget } from '@theia/core/lib/browser';\nimport { MarkdownString } from '@theia/core/lib/common/markdown-rendering/markdown-string';\nimport { ThemeIcon } from '@theia/core/lib/common/theme';\nimport { CommandLineOptions } from '@theia/process/lib/common/shell-command-builder';\nimport { TerminalSearchWidget } from '../search/terminal-search-widget';\nimport { TerminalProcessInfo, TerminalExitReason } from '../../common/base-terminal-protocol';\nimport URI from '@theia/core/lib/common/uri';\n\nexport interface TerminalDimensions {\n    cols: number;\n    rows: number;\n}\n\nexport interface TerminalExitStatus {\n    readonly code: number | undefined;\n    readonly reason: TerminalExitReason;\n}\n\nexport type TerminalLocationOptions = TerminalLocation | TerminalEditorLocation | TerminalSplitLocation;\n\nexport enum TerminalLocation {\n    Panel = 1,\n    Editor = 2\n}\n\nexport interface TerminalEditorLocation {\n    readonly viewColumn: ViewColumn;\n    readonly preserveFocus?: boolean;\n}\n\nexport interface TerminalSplitLocation {\n    readonly parentTerminal: string;\n}\n\nexport interface TerminalBuffer {\n    readonly length: number;\n    /**\n     * @param start zero based index of the first line to return\n     * @param length the max number or lines to return\n     */\n    getLines(start: number, length: number): string[];\n}\n\n/**\n * Terminal UI widget.\n */\nexport abstract class TerminalWidget extends BaseWidget {\n\n    abstract processId: Promise<number>;\n    /**\n     * Get the current executable and arguments.\n     */\n    abstract processInfo: Promise<TerminalProcessInfo>;\n\n    /** The ids of extensions contributing to the environment of this terminal mapped to the provided description for their changes. */\n    abstract envVarCollectionDescriptionsByExtension: Promise<Map<string, (string | MarkdownString | undefined)[]>>;\n\n    /** Terminal kind that indicates whether a terminal is created by a user or by some extension for a user */\n    abstract readonly kind: 'user' | string;\n\n    abstract readonly terminalId: number;\n\n    abstract readonly dimensions: TerminalDimensions;\n\n    abstract readonly exitStatus: TerminalExitStatus | undefined;\n\n    /** Terminal widget can be hidden from users until explicitly shown once. */\n    abstract readonly hiddenFromUser: boolean;\n\n    /** The position of the terminal widget. */\n    abstract readonly location: TerminalLocationOptions;\n\n    /** The last CWD assigned to the terminal, useful when attempting getCwdURI on a task terminal fails */\n    lastCwd: URI;\n\n    /**\n     * Start terminal and return terminal id.\n     * @param id - terminal id.\n     */\n    abstract start(id?: number): Promise<number>;\n\n    /**\n     * Send text to the terminal server.\n     * @param text - text content.\n     */\n    abstract sendText(text: string): void;\n\n    /**\n     * Resolves when the command is successfully sent, this doesn't mean that it\n     * was evaluated. Might reject if terminal wasn't properly started yet.\n     *\n     * Note that this method will try to escape your arguments as if it was\n     * someone inputting everything in a shell.\n     *\n     * Supported shells: `bash`, `cmd.exe`, `wsl.exe`, `pwsh/powershell.exe`\n     */\n    abstract executeCommand(commandOptions: CommandLineOptions): Promise<void>;\n\n    /** Event that fires when the terminal is connected or reconnected */\n    abstract onDidOpen: Event<void>;\n\n    /** Event that fires when the terminal fails to connect or reconnect */\n    abstract onDidOpenFailure: Event<void>;\n\n    /** Event that fires when the terminal size changed */\n    abstract onSizeChanged: Event<{ cols: number; rows: number; }>;\n\n    /** Event that fires when the terminal receives a key event. */\n    abstract onKey: Event<{ key: string, domEvent: KeyboardEvent }>;\n\n    /** Event that fires when the terminal input data */\n    abstract onData: Event<string>;\n\n    /** Event that fires when the terminal shell type is changed */\n    abstract onShellTypeChanged: Event<string>;\n\n    abstract onOutput: Event<string>;\n\n    abstract buffer: TerminalBuffer;\n\n    abstract scrollLineUp(): void;\n\n    abstract scrollLineDown(): void;\n\n    abstract scrollToTop(): void;\n\n    abstract scrollToBottom(): void;\n\n    abstract scrollPageUp(): void;\n\n    abstract scrollPageDown(): void;\n\n    abstract resetTerminal(): void;\n    /**\n     * Event which fires when terminal did closed. Event value contains closed terminal widget definition.\n     */\n    abstract onTerminalDidClose: Event<TerminalWidget>;\n\n    /**\n     * Cleat terminal output.\n     */\n    abstract clearOutput(): void;\n\n    /**\n     * Select entire content in the terminal.\n     */\n    abstract selectAll(): void;\n\n    abstract writeLine(line: string): void;\n\n    abstract write(data: string): void;\n\n    abstract resize(cols: number, rows: number): void;\n\n    /**\n     * Return Terminal search box widget.\n     */\n    abstract getSearchBox(): TerminalSearchWidget;\n    /**\n     * Whether the terminal process has child processes.\n     */\n    abstract hasChildProcesses(): Promise<boolean>;\n\n    abstract setTitle(title: string): void;\n\n    abstract waitOnExit(waitOnExit?: boolean | string): void;\n}\n\n/**\n * Terminal widget options.\n */\nexport const TerminalWidgetOptions = Symbol('TerminalWidgetOptions');\nexport interface TerminalWidgetOptions {\n\n    /**\n     * Human readable terminal representation on the UI.\n     */\n    readonly title?: string;\n\n    /**\n     * icon class with or without color modifier\n     */\n    readonly iconClass?: string | ThemeIcon;\n\n    /**\n     * Path to the executable shell. For example: `/bin/bash`, `bash`, `sh`.\n     */\n    readonly shellPath?: string;\n\n    /**\n     * Args for the custom shell executable. A string can be used on Windows only which allows\n     * specifying shell args in [command-line format](https://msdn.microsoft.com/en-au/08dfcab2-eb6e-49a4-80eb-87d4076c98c6).\n     */\n    readonly shellArgs?: string[] | string;\n\n    /**\n     * Current working directory.\n     */\n    readonly cwd?: string | URI;\n\n    /**\n     * Environment variables for terminal.\n     */\n    readonly env?: { [key: string]: string | null };\n\n    /**\n     * Whether the terminal process environment should be exactly as provided in `env`.\n     */\n    readonly strictEnv?: boolean;\n\n    /**\n     * In case `destroyTermOnClose` is true - terminal process will be destroyed on close terminal widget, otherwise will be kept\n     * alive.\n     */\n    readonly destroyTermOnClose?: boolean;\n\n    /**\n     * Terminal server side can send to the client `terminal title` to display this value on the UI. If\n     * useServerTitle = true then display this title, otherwise display title defined by 'title' argument.\n     */\n    readonly useServerTitle?: boolean;\n\n    /**\n     * Whether it is a pseudo terminal where an extension controls its input and output.\n     */\n    readonly isPseudoTerminal?: boolean;\n\n    /**\n     * Terminal id. Should be unique for all DOM.\n     */\n    readonly id?: string;\n\n    /**\n     * Terminal attributes. Can be useful to apply some implementation specific information.\n     */\n    readonly attributes?: { [key: string]: string | null };\n\n    /**\n     * Terminal kind that indicates whether a terminal is created by a user or by some extension for a user\n     */\n    readonly kind?: 'user' | string;\n\n    /**\n     * When enabled the terminal will run the process as normal but not be surfaced to the user until `Terminal.show` is called.\n     */\n    readonly hideFromUser?: boolean;\n\n    readonly location?: TerminalLocationOptions;\n\n    /**\n     * When enabled, the terminal will not be persisted across window reloads.\n     */\n    readonly isTransient?: boolean;\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { ReactWidget } from '@theia/core/lib/browser/widgets/react-widget';\nimport * as React from '@theia/core/shared/react';\nimport '../../../src/browser/style/terminal-search.css';\nimport { Terminal } from 'xterm';\nimport { SearchAddon, ISearchOptions } from 'xterm-addon-search';\nimport { codicon, Key } from '@theia/core/lib/browser';\n\nexport const TERMINAL_SEARCH_WIDGET_FACTORY_ID = 'terminal-search';\nexport const TerminalSearchWidgetFactory = Symbol('TerminalSearchWidgetFactory');\nexport type TerminalSearchWidgetFactory = (terminal: Terminal) => TerminalSearchWidget;\n\n@injectable()\nexport class TerminalSearchWidget extends ReactWidget {\n\n    private searchInput: HTMLInputElement | null;\n    private searchBox: HTMLDivElement | null;\n    private searchOptions: ISearchOptions = {};\n    private searchAddon: SearchAddon;\n\n    @inject(Terminal)\n    protected terminal: Terminal;\n\n    @postConstruct()\n    protected init(): void {\n        this.node.classList.add('theia-search-terminal-widget-parent');\n\n        this.searchAddon = new SearchAddon();\n        this.terminal.loadAddon(this.searchAddon);\n\n        this.hide();\n        this.update();\n    }\n\n    protected render(): React.ReactNode {\n        return <div className='theia-search-terminal-widget'>\n            <div className='theia-search-elem-box' ref={searchBox => this.searchBox = searchBox} >\n                <input\n                    title='Find'\n                    type='text'\n                    spellCheck='false'\n                    placeholder='Find'\n                    ref={ip => this.searchInput = ip}\n                    onKeyUp={this.onInputChanged}\n                    onFocus={this.onSearchInputFocus}\n                    onBlur={this.onSearchInputBlur}\n                />\n                <div title='Match case' tabIndex={0} className={'search-elem ' + codicon('case-sensitive')} onClick={this.handleCaseSensitiveOptionClicked}></div>\n                <div title='Match whole word' tabIndex={0} className={'search-elem ' + codicon('whole-word')} onClick={this.handleWholeWordOptionClicked}></div>\n                <div title='Use regular expression' tabIndex={0} className={'search-elem ' + codicon('regex')} onClick={this.handleRegexOptionClicked}></div>\n            </div>\n            <button title='Previous match' className={'search-elem ' + codicon('arrow-up')} onClick={this.handlePreviousButtonClicked}></button>\n            <button title='Next match' className={'search-elem ' + codicon('arrow-down')} onClick={this.handleNextButtonClicked}></button>\n            <button title='Close' className={'search-elem ' + codicon('close')} onClick={this.handleHide}></button>\n        </div>;\n    }\n\n    onSearchInputFocus = (): void => {\n        if (this.searchBox) {\n            this.searchBox.classList.add('focused');\n        }\n    };\n\n    onSearchInputBlur = (): void => {\n        if (this.searchBox) {\n            this.searchBox.classList.remove('focused');\n        }\n    };\n\n    private handleHide = (): void => {\n        this.hide();\n    };\n\n    private handleCaseSensitiveOptionClicked = (event: React.MouseEvent<HTMLSpanElement>): void => {\n        this.searchOptions.caseSensitive = !this.searchOptions.caseSensitive;\n        this.updateSearchInputBox(this.searchOptions.caseSensitive, event.currentTarget);\n    };\n\n    private handleWholeWordOptionClicked = (event: React.MouseEvent<HTMLSpanElement>): void => {\n        this.searchOptions.wholeWord = !this.searchOptions.wholeWord;\n        this.updateSearchInputBox(this.searchOptions.wholeWord, event.currentTarget);\n    };\n\n    private handleRegexOptionClicked = (event: React.MouseEvent<HTMLSpanElement>): void => {\n        this.searchOptions.regex = !this.searchOptions.regex;\n        this.updateSearchInputBox(this.searchOptions.regex, event.currentTarget);\n    };\n\n    private updateSearchInputBox(enable: boolean, optionElement: HTMLSpanElement): void {\n        if (enable) {\n            optionElement.classList.add('option-enabled');\n        } else {\n            optionElement.classList.remove('option-enabled');\n        }\n        this.searchInput!.focus();\n    }\n\n    private onInputChanged = (event: React.KeyboardEvent): void => {\n        // move to previous search result on `Shift + Enter`\n        if (event && event.shiftKey && event.keyCode === Key.ENTER.keyCode) {\n            this.search(false, 'previous');\n            return;\n        }\n        // move to next search result on `Enter`\n        if (event && event.keyCode === Key.ENTER.keyCode) {\n            this.search(false, 'next');\n            return;\n        }\n\n        this.search(true, 'next');\n    };\n\n    search(incremental: boolean, searchDirection: 'next' | 'previous'): void {\n        if (this.searchInput) {\n            this.searchOptions.incremental = incremental;\n            const searchText = this.searchInput.value;\n\n            if (searchDirection === 'next') {\n                this.searchAddon.findNext(searchText, this.searchOptions);\n            }\n\n            if (searchDirection === 'previous') {\n                this.searchAddon.findPrevious(searchText, this.searchOptions);\n            }\n        }\n    }\n\n    private handleNextButtonClicked = (): void => {\n        this.search(false, 'next');\n    };\n\n    private handlePreviousButtonClicked = (): void => {\n        this.search(false, 'previous');\n    };\n\n    override onAfterHide(): void {\n        this.terminal.focus();\n    }\n\n    override onAfterShow(): void {\n        if (this.searchInput) {\n            this.searchInput.select();\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2022 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { URI } from '@theia/core';\nimport { TerminalService } from './base/terminal-service';\nimport { TerminalWidget, TerminalWidgetOptions } from './base/terminal-widget';\nimport { TerminalProfile } from './terminal-profile-service';\n\nexport class ShellTerminalProfile implements TerminalProfile {\n\n    get shellPath(): string | undefined {\n        return this.options.shellPath;\n    }\n\n    constructor(protected readonly terminalService: TerminalService, protected readonly options: TerminalWidgetOptions) { }\n\n    async start(): Promise<TerminalWidget> {\n        const widget = await this.terminalService.newTerminal(this.options);\n        widget.start();\n        return widget;\n    }\n\n    /**\n     * Makes a copy of this profile modified with the options given\n     * as an argument.\n     * @param options the options to override\n     * @returns a modified copy of this profile\n     */\n    modify(options: { cwd?: string | URI }): TerminalProfile {\n        return new ShellTerminalProfile(this.terminalService, { ...this.options, ...options });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { isFirefox } from '@theia/core/lib/browser';\n\n@injectable()\nexport class TerminalCopyOnSelectionHandler {\n\n    private textToCopy: string;\n    private interceptCopy: boolean;\n\n    private copyListener = (ev: ClipboardEvent) => {\n        if (this.interceptCopy && ev.clipboardData) {\n            ev.clipboardData.setData('text/plain', this.textToCopy);\n            ev.preventDefault();\n        }\n    };\n\n    @postConstruct()\n    protected init(): void {\n        document.addEventListener('copy', this.copyListener);\n    }\n\n    private async clipBoardCopyIsGranted(): Promise<boolean> {\n        // Unfortunately Firefox doesn't support permission check `clipboard-write`, so let try to copy anyway,\n        if (isFirefox) {\n            return true;\n        }\n        try {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const permissions = (navigator as any).permissions;\n            const { state } = await permissions.query({ name: 'clipboard-write' });\n            if (state === 'granted') {\n                return true;\n            }\n        } catch (e) { }\n\n        return false;\n    }\n\n    private executeCommandCopy(): void {\n        try {\n            this.interceptCopy = true;\n            document.execCommand('copy');\n            this.interceptCopy = false;\n        } catch (e) {\n            // do nothing\n        }\n    }\n\n    private async writeToClipBoard(): Promise<void> {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const clipboard = (navigator as any).clipboard;\n\n        if (!clipboard) {\n            this.executeCommandCopy();\n            return;\n        }\n\n        try {\n            await clipboard.writeText(this.textToCopy);\n        } catch (e) {\n            this.executeCommandCopy();\n        }\n    }\n\n    async copy(text: string): Promise<void> {\n        this.textToCopy = text;\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const permissions = (navigator as any).permissions;\n        if (permissions && permissions.query && await this.clipBoardCopyIsGranted()) {\n            await this.writeToClipBoard();\n        } else {\n            this.executeCommandCopy();\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, optional, postConstruct } from '@theia/core/shared/inversify';\nimport {\n    CommandContribution,\n    Command,\n    CommandRegistry,\n    DisposableCollection,\n    MenuContribution,\n    MenuModelRegistry,\n    isOSX,\n    SelectionService,\n    Emitter,\n    Event,\n    ViewColumn,\n    OS,\n    MAIN_MENU_BAR\n} from '@theia/core/lib/common';\nimport {\n    ApplicationShell, KeybindingContribution, KeyCode, Key, WidgetManager, PreferenceService,\n    KeybindingRegistry, LabelProvider, WidgetOpenerOptions, StorageService, QuickInputService,\n    codicon, CommonCommands, FrontendApplicationContribution, OnWillStopAction, Dialog, ConfirmDialog, FrontendApplication, PreferenceScope, Widget, SHELL_TABBAR_CONTEXT_MENU\n} from '@theia/core/lib/browser';\nimport { TabBarToolbarContribution, TabBarToolbarRegistry } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { TERMINAL_WIDGET_FACTORY_ID, TerminalWidgetFactoryOptions, TerminalWidgetImpl } from './terminal-widget-impl';\nimport { TerminalService } from './base/terminal-service';\nimport { TerminalWidgetOptions, TerminalWidget, TerminalLocation } from './base/terminal-widget';\nimport { ContributedTerminalProfileStore, NULL_PROFILE, TerminalProfile, TerminalProfileService, TerminalProfileStore, UserTerminalProfileStore } from './terminal-profile-service';\nimport { UriAwareCommandHandler } from '@theia/core/lib/common/uri-command-handler';\nimport { ShellTerminalServerProxy } from '../common/shell-terminal-protocol';\nimport URI from '@theia/core/lib/common/uri';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { ContextKeyService } from '@theia/core/lib/browser/context-key-service';\nimport { ColorContribution } from '@theia/core/lib/browser/color-application-contribution';\nimport { ColorRegistry } from '@theia/core/lib/browser/color-registry';\nimport { terminalAnsiColorMap } from './terminal-theme-service';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\nimport { FileStat } from '@theia/filesystem/lib/common/files';\nimport { TerminalWatcher } from '../common/terminal-watcher';\nimport { nls } from '@theia/core/lib/common/nls';\nimport { Profiles, TerminalPreferences } from './terminal-preferences';\nimport { ShellTerminalProfile } from './shell-terminal-profile';\nimport { VariableResolverService } from '@theia/variable-resolver/lib/browser';\nimport { Color } from '@theia/core/lib/common/color';\n\nexport namespace TerminalMenus {\n    export const TERMINAL = [...MAIN_MENU_BAR, '7_terminal'];\n    export const TERMINAL_NEW = [...TERMINAL, '1_terminal'];\n\n    export const TERMINAL_TASKS = [...TERMINAL, '2_terminal'];\n    export const TERMINAL_TASKS_INFO = [...TERMINAL_TASKS, '3_terminal'];\n    export const TERMINAL_TASKS_CONFIG = [...TERMINAL_TASKS, '4_terminal'];\n    export const TERMINAL_NAVIGATOR_CONTEXT_MENU = ['navigator-context-menu', 'navigation'];\n    export const TERMINAL_OPEN_EDITORS_CONTEXT_MENU = ['open-editors-context-menu', 'navigation'];\n\n    export const TERMINAL_CONTEXT_MENU = ['terminal-context-menu'];\n    export const TERMINAL_CONTRIBUTIONS = [...TERMINAL_CONTEXT_MENU, '5_terminal_contributions'];\n\n    export const TERMINAL_TITLE_CONTRIBUTIONS = [...SHELL_TABBAR_CONTEXT_MENU, 'terminal_title_contributions'];\n}\n\nexport namespace TerminalCommands {\n    const TERMINAL_CATEGORY = 'Terminal';\n    export const NEW = Command.toDefaultLocalizedCommand({\n        id: 'terminal:new',\n        category: TERMINAL_CATEGORY,\n        label: 'Create New Terminal'\n    });\n    export const PROFILE_NEW = Command.toLocalizedCommand({\n        id: 'terminal:new:profile',\n        category: TERMINAL_CATEGORY,\n        label: 'Create New Integrated Terminal from a Profile'\n    });\n    export const PROFILE_DEFAULT = Command.toLocalizedCommand({\n        id: 'terminal:profile:default',\n        category: TERMINAL_CATEGORY,\n        label: 'Choose the default Terminal Profile'\n    });\n    export const NEW_ACTIVE_WORKSPACE = Command.toDefaultLocalizedCommand({\n        id: 'terminal:new:active:workspace',\n        category: TERMINAL_CATEGORY,\n        label: 'Create New Terminal (In Active Workspace)'\n    });\n    export const TERMINAL_CLEAR = Command.toDefaultLocalizedCommand({\n        id: 'terminal:clear',\n        category: TERMINAL_CATEGORY,\n        label: 'Clear'\n    });\n    export const TERMINAL_CONTEXT = Command.toDefaultLocalizedCommand({\n        id: 'terminal:context',\n        category: TERMINAL_CATEGORY,\n        label: 'Open in Integrated Terminal'\n    });\n    export const SPLIT = Command.toDefaultLocalizedCommand({\n        id: 'terminal:split',\n        category: TERMINAL_CATEGORY,\n        label: 'Split Terminal'\n    });\n    export const TERMINAL_FIND_TEXT = Command.toDefaultLocalizedCommand({\n        id: 'terminal:find',\n        category: TERMINAL_CATEGORY,\n        label: 'Find'\n    });\n    export const TERMINAL_FIND_TEXT_CANCEL = Command.toDefaultLocalizedCommand({\n        id: 'terminal:find:cancel',\n        category: TERMINAL_CATEGORY,\n        label: 'Hide Find'\n    });\n\n    export const SCROLL_LINE_UP = Command.toDefaultLocalizedCommand({\n        id: 'terminal:scroll:line:up',\n        category: TERMINAL_CATEGORY,\n        label: 'Scroll Up (Line)'\n    });\n    export const SCROLL_LINE_DOWN = Command.toDefaultLocalizedCommand({\n        id: 'terminal:scroll:line:down',\n        category: TERMINAL_CATEGORY,\n        label: 'Scroll Down (Line)'\n    });\n    export const SCROLL_TO_TOP = Command.toDefaultLocalizedCommand({\n        id: 'terminal:scroll:top',\n        category: TERMINAL_CATEGORY,\n        label: 'Scroll to Top'\n    });\n    export const SCROLL_PAGE_UP = Command.toDefaultLocalizedCommand({\n        id: 'terminal:scroll:page:up',\n        category: TERMINAL_CATEGORY,\n        label: 'Scroll Up (Page)'\n    });\n    export const SCROLL_PAGE_DOWN = Command.toDefaultLocalizedCommand({\n        id: 'terminal:scroll:page:down',\n        category: TERMINAL_CATEGORY,\n        label: 'Scroll Down (Page)'\n    });\n    export const TOGGLE_TERMINAL = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.terminal.toggleTerminal',\n        category: TERMINAL_CATEGORY,\n        label: 'Toggle Terminal'\n    });\n    export const KILL_TERMINAL = Command.toDefaultLocalizedCommand({\n        id: 'terminal:kill',\n        category: TERMINAL_CATEGORY,\n        label: 'Kill Terminal'\n    });\n    export const SELECT_ALL: Command = {\n        id: 'terminal:select:all',\n        label: CommonCommands.SELECT_ALL.label,\n        category: TERMINAL_CATEGORY,\n    };\n\n    /**\n     * Command that displays all terminals that are currently opened\n     */\n    export const SHOW_ALL_OPENED_TERMINALS = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.showAllTerminals',\n        category: CommonCommands.VIEW_CATEGORY,\n        label: 'Show All Opened Terminals'\n    });\n}\n\nconst ENVIRONMENT_VARIABLE_COLLECTIONS_KEY = 'terminal.integrated.environmentVariableCollections';\n@injectable()\nexport class TerminalFrontendContribution implements FrontendApplicationContribution, TerminalService, CommandContribution, MenuContribution,\n    KeybindingContribution, TabBarToolbarContribution, ColorContribution {\n\n    @inject(ApplicationShell) protected readonly shell: ApplicationShell;\n    @inject(ShellTerminalServerProxy) protected readonly shellTerminalServer: ShellTerminalServerProxy;\n    @inject(WidgetManager) protected readonly widgetManager: WidgetManager;\n    @inject(FileService) protected readonly fileService: FileService;\n    @inject(SelectionService) protected readonly selectionService: SelectionService;\n\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n\n    @inject(QuickInputService) @optional()\n    protected readonly quickInputService: QuickInputService;\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    @inject(TerminalProfileService)\n    protected readonly profileService: TerminalProfileService;\n\n    @inject(UserTerminalProfileStore)\n    protected readonly userProfileStore: TerminalProfileStore;\n\n    @inject(ContributedTerminalProfileStore)\n    protected readonly contributedProfileStore: TerminalProfileStore;\n\n    @inject(TerminalWatcher)\n    protected readonly terminalWatcher: TerminalWatcher;\n\n    @inject(VariableResolverService)\n    protected readonly variableResolver: VariableResolverService;\n\n    @inject(StorageService)\n    protected readonly storageService: StorageService;\n\n    @inject(PreferenceService)\n    protected readonly preferenceService: PreferenceService;\n\n    @inject(TerminalPreferences)\n    protected terminalPreferences: TerminalPreferences;\n\n    protected mergePreferencesPromise: Promise<void> = Promise.resolve();\n\n    protected readonly onDidCreateTerminalEmitter = new Emitter<TerminalWidget>();\n    readonly onDidCreateTerminal: Event<TerminalWidget> = this.onDidCreateTerminalEmitter.event;\n\n    protected readonly onDidChangeCurrentTerminalEmitter = new Emitter<TerminalWidget | undefined>();\n    readonly onDidChangeCurrentTerminal: Event<TerminalWidget | undefined> = this.onDidChangeCurrentTerminalEmitter.event;\n\n    @inject(ContextKeyService)\n    protected readonly contextKeyService: ContextKeyService;\n\n    @postConstruct()\n    protected init(): void {\n        this.shell.onDidChangeCurrentWidget(() => this.updateCurrentTerminal());\n        this.widgetManager.onDidCreateWidget(({ widget }) => {\n            if (widget instanceof TerminalWidget) {\n                this.updateCurrentTerminal();\n                this.onDidCreateTerminalEmitter.fire(widget);\n                this.setLastUsedTerminal(widget);\n            }\n        });\n\n        const terminalFocusKey = this.contextKeyService.createKey<boolean>('terminalFocus', false);\n        const terminalSearchToggle = this.contextKeyService.createKey<boolean>('terminalHideSearch', false);\n        const updateFocusKey = () => {\n            terminalFocusKey.set(this.shell.activeWidget instanceof TerminalWidget);\n            terminalSearchToggle.set(this.terminalHideSearch);\n        };\n        updateFocusKey();\n        this.shell.onDidChangeActiveWidget(updateFocusKey);\n\n        this.terminalWatcher.onStoreTerminalEnvVariablesRequested(data => {\n            this.storageService.setData(ENVIRONMENT_VARIABLE_COLLECTIONS_KEY, data);\n        });\n        this.terminalWatcher.onUpdateTerminalEnvVariablesRequested(() => {\n            this.storageService.getData<string>(ENVIRONMENT_VARIABLE_COLLECTIONS_KEY).then(data => {\n                if (data) {\n                    this.shellTerminalServer.restorePersisted(data);\n                }\n            });\n        });\n    }\n\n    get terminalHideSearch(): boolean {\n        if (!(this.shell.activeWidget instanceof TerminalWidget)) {\n            return false;\n        }\n        const searchWidget = this.shell.activeWidget.getSearchBox();\n        return searchWidget.isVisible;\n    }\n\n    async onStart(app: FrontendApplication): Promise<void> {\n        this.contributeDefaultProfiles();\n\n        this.terminalPreferences.onPreferenceChanged(e => {\n            if (e.preferenceName.startsWith('terminal.integrated.')) {\n                this.mergePreferencesPromise = this.mergePreferencesPromise.finally(() => this.mergePreferences());\n            }\n        });\n        this.mergePreferencesPromise = this.mergePreferencesPromise.finally(() => this.mergePreferences());\n\n        // extension contributions get read after this point: need to set the default profile if necessary\n        this.profileService.onAdded(id => {\n            let defaultProfileId: string | undefined;\n            switch (OS.backend.type()) {\n                case OS.Type.Windows: {\n                    defaultProfileId = this.terminalPreferences['terminal.integrated.defaultProfile.windows'];\n                    break;\n                }\n                case OS.Type.Linux: {\n                    defaultProfileId = this.terminalPreferences['terminal.integrated.defaultProfile.linux'];\n                    break;\n                }\n                case OS.Type.OSX: {\n                    defaultProfileId = this.terminalPreferences['terminal.integrated.defaultProfile.osx'];\n                    break;\n                }\n            }\n            if (defaultProfileId) {\n                this.profileService.setDefaultProfile(defaultProfileId);\n            }\n        });\n    }\n\n    async contributeDefaultProfiles(): Promise<void> {\n        if (OS.backend.isWindows) {\n            this.contributedProfileStore.registerTerminalProfile('cmd', new ShellTerminalProfile(this, {\n                shellPath: await this.resolveShellPath([\n                    '${env:windir}\\\\Sysnative\\\\cmd.exe',\n                    '${env:windir}\\\\System32\\\\cmd.exe'\n                ])!\n            }));\n        } else {\n            this.contributedProfileStore.registerTerminalProfile('SHELL', new ShellTerminalProfile(this, {\n                shellPath: await this.resolveShellPath('${SHELL}')!,\n                shellArgs: ['-l'],\n                iconClass: 'codicon codicon-terminal'\n            }));\n        }\n\n        // contribute default profiles based on legacy preferences\n    }\n\n    protected async mergePreferences(): Promise<void> {\n        let profiles: Profiles;\n        let defaultProfile: string;\n        let legacyShellPath: string | undefined;\n        let legacyShellArgs: string[] | undefined;\n        const removed = new Set(this.userProfileStore.all.map(([id, profile]) => id));\n        switch (OS.backend.type()) {\n            case OS.Type.Windows: {\n                profiles = this.terminalPreferences['terminal.integrated.profiles.windows'];\n                defaultProfile = this.terminalPreferences['terminal.integrated.defaultProfile.windows'];\n                legacyShellPath = this.terminalPreferences['terminal.integrated.shell.windows'] ?? undefined;\n                legacyShellArgs = this.terminalPreferences['terminal.integrated.shellArgs.windows'];\n                break;\n            }\n            case OS.Type.Linux: {\n                profiles = this.terminalPreferences['terminal.integrated.profiles.linux'];\n                defaultProfile = this.terminalPreferences['terminal.integrated.defaultProfile.linux'];\n                legacyShellPath = this.terminalPreferences['terminal.integrated.shell.linux'] ?? undefined;\n                legacyShellArgs = this.terminalPreferences['terminal.integrated.shellArgs.linux'];\n                break;\n            }\n            case OS.Type.OSX: {\n                profiles = this.terminalPreferences['terminal.integrated.profiles.osx'];\n                defaultProfile = this.terminalPreferences['terminal.integrated.defaultProfile.osx'];\n                legacyShellPath = this.terminalPreferences['terminal.integrated.shell.osx'] ?? undefined;\n                legacyShellArgs = this.terminalPreferences['terminal.integrated.shellArgs.osx'];\n                break;\n            }\n        }\n        if (profiles) {\n            for (const id of Object.getOwnPropertyNames(profiles)) {\n                const profile = profiles[id];\n                removed.delete(id);\n                if (profile) {\n                    const shellPath = await this.resolveShellPath(profile.path);\n\n                    if (shellPath) {\n                        const options: TerminalWidgetOptions = {\n                            shellPath: shellPath,\n                            shellArgs: profile.args ? await this.variableResolver.resolve(profile.args) : undefined,\n                            useServerTitle: profile.overrideName ? false : undefined,\n                            env: profile.env ? await this.variableResolver.resolve(profile.env) : undefined,\n                            title: profile.overrideName ? id : undefined\n                        };\n\n                        this.userProfileStore.registerTerminalProfile(id, new ShellTerminalProfile(this, options));\n                    }\n                } else {\n                    this.userProfileStore.registerTerminalProfile(id, NULL_PROFILE);\n                }\n            }\n        }\n\n        if (legacyShellPath) {\n            this.userProfileStore.registerTerminalProfile('Legacy Shell Preferences', new ShellTerminalProfile(this, {\n                shellPath: legacyShellPath!,\n                shellArgs: legacyShellArgs\n            }));\n            // if no other default is set, use the legacy preferences as default if they exist\n            this.profileService.setDefaultProfile('Legacy Shell Preferences');\n        }\n\n        if (defaultProfile && this.profileService.getProfile(defaultProfile)) {\n            this.profileService.setDefaultProfile(defaultProfile);\n        }\n\n        for (const id of removed) {\n            this.userProfileStore.unregisterTerminalProfile(id);\n        }\n    }\n\n    protected async resolveShellPath(path: string | string[] | undefined): Promise<string | undefined> {\n        if (!path) {\n            return undefined;\n        }\n        if (typeof path === 'string') {\n            path = [path];\n        }\n        for (const p of path) {\n            const resolved = await this.variableResolver.resolve(p);\n            if (resolved) {\n                const resolvedURI = URI.fromFilePath(resolved);\n                if (await this.fileService.exists(resolvedURI)) {\n                    return resolved;\n                }\n            }\n        }\n        return undefined;\n    }\n\n    onWillStop(): OnWillStopAction<number> | undefined {\n        const preferenceValue = this.terminalPreferences['terminal.integrated.confirmOnExit'];\n        if (preferenceValue !== 'never') {\n            const allTerminals = this.widgetManager.getWidgets(TERMINAL_WIDGET_FACTORY_ID) as TerminalWidget[];\n            if (allTerminals.length) {\n                return {\n                    prepare: async () => {\n                        if (preferenceValue === 'always') {\n                            return allTerminals.length;\n                        } else {\n                            const activeTerminals = await Promise.all(allTerminals.map(widget => widget.hasChildProcesses()))\n                                .then(hasChildProcesses => hasChildProcesses.filter(hasChild => hasChild));\n                            return activeTerminals.length;\n                        }\n                    },\n                    action: async activeTerminalCount => activeTerminalCount === 0 || this.confirmExitWithActiveTerminals(activeTerminalCount),\n                    reason: 'Active integrated terminal',\n                };\n            }\n        }\n    }\n\n    protected async confirmExitWithActiveTerminals(activeTerminalCount: number): Promise<boolean> {\n        const msg = activeTerminalCount === 1\n            ? nls.localizeByDefault('Do you want to terminate the active terminal session?')\n            : nls.localizeByDefault('Do you want to terminate the {0} active terminal sessions?', activeTerminalCount);\n        const safeToExit = await new ConfirmDialog({\n            title: '',\n            msg,\n            ok: nls.localizeByDefault('Terminate'),\n            cancel: Dialog.CANCEL,\n        }).open();\n        return safeToExit === true;\n    }\n\n    protected _currentTerminal: TerminalWidget | undefined;\n    get currentTerminal(): TerminalWidget | undefined {\n        return this._currentTerminal;\n    }\n    protected setCurrentTerminal(current: TerminalWidget | undefined): void {\n        if (this._currentTerminal !== current) {\n            this._currentTerminal = current;\n            this.onDidChangeCurrentTerminalEmitter.fire(this._currentTerminal);\n        }\n    }\n    protected updateCurrentTerminal(): void {\n        const widget = this.shell.currentWidget;\n        if (widget instanceof TerminalWidget) {\n            this.setCurrentTerminal(widget);\n        } else if (!this._currentTerminal || !this._currentTerminal.isVisible) {\n            this.setCurrentTerminal(undefined);\n        }\n    }\n\n    // IDs of the most recently used terminals\n    protected mostRecentlyUsedTerminalEntries: { id: string, disposables: DisposableCollection }[] = [];\n\n    protected getLastUsedTerminalId(): string | undefined {\n        const mostRecent = this.mostRecentlyUsedTerminalEntries[this.mostRecentlyUsedTerminalEntries.length - 1];\n        if (mostRecent) {\n            return mostRecent.id;\n        }\n    }\n\n    get lastUsedTerminal(): TerminalWidget | undefined {\n        const id = this.getLastUsedTerminalId();\n        if (id) {\n            return this.getById(id);\n        }\n    }\n\n    protected setLastUsedTerminal(lastUsedTerminal: TerminalWidget): void {\n        const lastUsedTerminalId = lastUsedTerminal.id;\n        const entryIndex = this.mostRecentlyUsedTerminalEntries.findIndex(entry => entry.id === lastUsedTerminalId);\n        let toDispose: DisposableCollection | undefined;\n        if (entryIndex >= 0) {\n            toDispose = this.mostRecentlyUsedTerminalEntries[entryIndex].disposables;\n            this.mostRecentlyUsedTerminalEntries.splice(entryIndex, 1);\n        } else {\n            toDispose = new DisposableCollection();\n            toDispose.push(\n                lastUsedTerminal.onDidChangeVisibility((isVisible: boolean) => {\n                    if (isVisible) {\n                        this.setLastUsedTerminal(lastUsedTerminal);\n                    }\n                })\n            );\n            toDispose.push(\n                lastUsedTerminal.onDidDispose(() => {\n                    const index = this.mostRecentlyUsedTerminalEntries.findIndex(entry => entry.id === lastUsedTerminalId);\n                    if (index >= 0) {\n                        this.mostRecentlyUsedTerminalEntries[index].disposables.dispose();\n                        this.mostRecentlyUsedTerminalEntries.splice(index, 1);\n                    }\n                })\n            );\n        }\n\n        const newEntry = { id: lastUsedTerminalId, disposables: toDispose };\n        if (lastUsedTerminal.isVisible) {\n            this.mostRecentlyUsedTerminalEntries.push(newEntry);\n        } else {\n            this.mostRecentlyUsedTerminalEntries = [newEntry, ...this.mostRecentlyUsedTerminalEntries];\n        }\n    }\n\n    get all(): TerminalWidget[] {\n        return this.widgetManager.getWidgets(TERMINAL_WIDGET_FACTORY_ID) as TerminalWidget[];\n    }\n\n    getById(id: string): TerminalWidget | undefined {\n        return this.all.find(terminal => terminal.id === id);\n    }\n\n    getByTerminalId(terminalId: number): TerminalWidget | undefined {\n        return this.all.find(terminal => terminal.terminalId === terminalId);\n    }\n\n    getDefaultShell(): Promise<string> {\n        return this.shellTerminalServer.getDefaultShell();\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(TerminalCommands.NEW, {\n            execute: () => this.openTerminal()\n        });\n\n        commands.registerCommand(TerminalCommands.PROFILE_NEW, {\n            execute: async () => {\n                const profile = await this.selectTerminalProfile(nls.localize('theia/terminal/selectProfile', 'Select a profile for the new terminal'));\n                if (!profile) {\n                    return;\n                }\n                this.openTerminal(undefined, profile[1]);\n            }\n        });\n\n        commands.registerCommand(TerminalCommands.PROFILE_DEFAULT, {\n            execute: () => this.chooseDefaultProfile()\n        });\n\n        commands.registerCommand(TerminalCommands.NEW_ACTIVE_WORKSPACE, {\n            execute: () => this.openActiveWorkspaceTerminal()\n        });\n        commands.registerCommand(TerminalCommands.SPLIT, {\n            execute: () => this.splitTerminal(),\n            isEnabled: w => this.withWidget(w, () => true),\n            isVisible: w => this.withWidget(w, () => true),\n        });\n        commands.registerCommand(TerminalCommands.TERMINAL_CLEAR);\n        commands.registerHandler(TerminalCommands.TERMINAL_CLEAR.id, {\n            execute: () => this.currentTerminal?.clearOutput()\n        });\n        commands.registerCommand(TerminalCommands.TERMINAL_CONTEXT, UriAwareCommandHandler.MonoSelect(this.selectionService, {\n            execute: uri => this.openInTerminal(uri)\n        }));\n        commands.registerCommand(TerminalCommands.TERMINAL_FIND_TEXT);\n        commands.registerHandler(TerminalCommands.TERMINAL_FIND_TEXT.id, {\n            isEnabled: () => {\n                if (this.shell.activeWidget instanceof TerminalWidget) {\n                    return !this.shell.activeWidget.getSearchBox().isVisible;\n                }\n                return false;\n            },\n            execute: () => {\n                const termWidget = (this.shell.activeWidget as TerminalWidget);\n                const terminalSearchBox = termWidget.getSearchBox();\n                terminalSearchBox.show();\n            }\n        });\n        commands.registerCommand(TerminalCommands.TERMINAL_FIND_TEXT_CANCEL);\n        commands.registerHandler(TerminalCommands.TERMINAL_FIND_TEXT_CANCEL.id, {\n            isEnabled: () => {\n                if (this.shell.activeWidget instanceof TerminalWidget) {\n                    return this.shell.activeWidget.getSearchBox().isVisible;\n                }\n                return false;\n            },\n            execute: () => {\n                const termWidget = (this.shell.activeWidget as TerminalWidget);\n                const terminalSearchBox = termWidget.getSearchBox();\n                terminalSearchBox.hide();\n            }\n        });\n        commands.registerCommand(TerminalCommands.SCROLL_LINE_UP, {\n            isEnabled: () => this.shell.activeWidget instanceof TerminalWidget,\n            isVisible: () => false,\n            execute: () => {\n                (this.shell.activeWidget as TerminalWidget).scrollLineUp();\n            }\n        });\n        commands.registerCommand(TerminalCommands.SCROLL_LINE_DOWN, {\n            isEnabled: () => this.shell.activeWidget instanceof TerminalWidget,\n            isVisible: () => false,\n            execute: () => {\n                (this.shell.activeWidget as TerminalWidget).scrollLineDown();\n            }\n        });\n        commands.registerCommand(TerminalCommands.SCROLL_TO_TOP, {\n            isEnabled: () => this.shell.activeWidget instanceof TerminalWidget,\n            isVisible: () => false,\n            execute: () => {\n                (this.shell.activeWidget as TerminalWidget).scrollToTop();\n            }\n        });\n        commands.registerCommand(TerminalCommands.SCROLL_PAGE_UP, {\n            isEnabled: () => this.shell.activeWidget instanceof TerminalWidget,\n            isVisible: () => false,\n            execute: () => {\n                (this.shell.activeWidget as TerminalWidget).scrollPageUp();\n            }\n        });\n        commands.registerCommand(TerminalCommands.SCROLL_PAGE_DOWN, {\n            isEnabled: () => this.shell.activeWidget instanceof TerminalWidget,\n            isVisible: () => false,\n            execute: () => {\n                (this.shell.activeWidget as TerminalWidget).scrollPageDown();\n            }\n        });\n        commands.registerCommand(TerminalCommands.TOGGLE_TERMINAL, {\n            execute: () => this.toggleTerminal()\n        });\n        commands.registerCommand(TerminalCommands.KILL_TERMINAL, {\n            isEnabled: () => !!this.currentTerminal,\n            execute: () => this.currentTerminal?.close()\n        });\n        commands.registerCommand(TerminalCommands.SELECT_ALL, {\n            isEnabled: () => !!this.currentTerminal,\n            execute: () => this.currentTerminal?.selectAll()\n        });\n    }\n\n    protected toggleTerminal(): void {\n        const terminals = this.shell.getWidgets('bottom').filter(w => w instanceof TerminalWidget);\n\n        if (terminals.length === 0) {\n            this.openTerminal();\n            return;\n        }\n\n        if (!this.shell.isExpanded('bottom')) {\n            this.shell.expandPanel('bottom');\n            terminals[0].activate();\n        } else {\n            const visibleTerminal = terminals.find(t => t.isVisible);\n            if (!visibleTerminal) {\n                this.shell.bottomPanel.activateWidget(terminals[0]);\n            } else if (this.shell.activeWidget !== visibleTerminal) {\n                this.shell.bottomPanel.activateWidget(visibleTerminal);\n            } else {\n                this.shell.collapsePanel('bottom');\n            }\n        }\n\n    }\n\n    async openInTerminal(uri: URI): Promise<void> {\n        // Determine folder path of URI\n        let stat: FileStat;\n        try {\n            stat = await this.fileService.resolve(uri);\n        } catch {\n            return;\n        }\n\n        // Use folder if a file was selected\n        const cwd = (stat.isDirectory) ? uri.toString() : uri.parent.toString();\n\n        // Open terminal\n        const termWidget = await this.newTerminal({ cwd });\n        termWidget.start();\n        this.open(termWidget);\n    }\n\n    registerMenus(menus: MenuModelRegistry): void {\n        menus.registerSubmenu(TerminalMenus.TERMINAL, TerminalWidgetImpl.LABEL);\n        menus.registerMenuAction(TerminalMenus.TERMINAL_NEW, {\n            commandId: TerminalCommands.NEW.id,\n            label: nls.localizeByDefault('New Terminal'),\n            order: '0'\n        });\n        menus.registerMenuAction(TerminalMenus.TERMINAL_NEW, {\n            commandId: TerminalCommands.PROFILE_NEW.id,\n            label: nls.localize('theia/terminal/profileNew', 'New Terminal (With Profile)...'),\n            order: '1'\n        });\n\n        menus.registerMenuAction(TerminalMenus.TERMINAL_NEW, {\n            commandId: TerminalCommands.PROFILE_DEFAULT.id,\n            label: nls.localize('theia/terminal/profileDefault', 'Choose Default Profile...'),\n            order: '3'\n        });\n        menus.registerMenuAction(TerminalMenus.TERMINAL_NEW, {\n            commandId: TerminalCommands.SPLIT.id,\n            order: '3'\n        });\n        menus.registerMenuAction(TerminalMenus.TERMINAL_NAVIGATOR_CONTEXT_MENU, {\n            commandId: TerminalCommands.TERMINAL_CONTEXT.id,\n            order: 'z'\n        });\n        menus.registerMenuAction(TerminalMenus.TERMINAL_OPEN_EDITORS_CONTEXT_MENU, {\n            commandId: TerminalCommands.TERMINAL_CONTEXT.id,\n            order: 'z'\n        });\n\n        menus.registerMenuAction([...TerminalMenus.TERMINAL_CONTEXT_MENU, '_1'], {\n            commandId: TerminalCommands.NEW_ACTIVE_WORKSPACE.id,\n            label: nls.localizeByDefault('New Terminal')\n        });\n        menus.registerMenuAction([...TerminalMenus.TERMINAL_CONTEXT_MENU, '_1'], {\n            commandId: TerminalCommands.SPLIT.id\n        });\n        menus.registerMenuAction([...TerminalMenus.TERMINAL_CONTEXT_MENU, '_2'], {\n            commandId: CommonCommands.COPY.id\n        });\n        menus.registerMenuAction([...TerminalMenus.TERMINAL_CONTEXT_MENU, '_2'], {\n            commandId: CommonCommands.PASTE.id\n        });\n        menus.registerMenuAction([...TerminalMenus.TERMINAL_CONTEXT_MENU, '_2'], {\n            commandId: TerminalCommands.SELECT_ALL.id\n        });\n        menus.registerMenuAction([...TerminalMenus.TERMINAL_CONTEXT_MENU, '_3'], {\n            commandId: TerminalCommands.TERMINAL_CLEAR.id\n        });\n        menus.registerMenuAction([...TerminalMenus.TERMINAL_CONTEXT_MENU, '_4'], {\n            commandId: TerminalCommands.KILL_TERMINAL.id\n        });\n\n        menus.registerSubmenu(TerminalMenus.TERMINAL_CONTRIBUTIONS, '');\n\n        menus.registerSubmenu(TerminalMenus.TERMINAL_TITLE_CONTRIBUTIONS, '', { when: 'isTerminalTab' });\n    }\n\n    registerToolbarItems(toolbar: TabBarToolbarRegistry): void {\n        toolbar.registerItem({\n            id: TerminalCommands.NEW.id,\n            command: TerminalCommands.NEW.id,\n            icon: codicon('add'),\n            tooltip: TerminalCommands.NEW.label,\n            isVisible: w => this.withWidget(w, () => true),\n        });\n        toolbar.registerItem({\n            id: TerminalCommands.SPLIT.id,\n            command: TerminalCommands.SPLIT.id,\n            icon: codicon('split-horizontal'),\n            tooltip: TerminalCommands.SPLIT.label\n        });\n    }\n\n    registerKeybindings(keybindings: KeybindingRegistry): void {\n        /* Register passthrough keybindings for combinations recognized by\n           xterm.js and converted to control characters.\n             See: https://github.com/xtermjs/xterm.js/blob/v3/src/Terminal.ts#L1684 */\n\n        /* Register ctrl + k (the passed Key) as a passthrough command in the\n           context of the terminal.  */\n        const regCtrl = (k: { keyCode: number, code: string }) => {\n            keybindings.registerKeybinding({\n                command: KeybindingRegistry.PASSTHROUGH_PSEUDO_COMMAND,\n                keybinding: KeyCode.createKeyCode({ key: k, ctrl: true }).toString(),\n                when: 'terminalFocus',\n            });\n        };\n\n        /* Register alt + k (the passed Key) as a passthrough command in the\n           context of the terminal.  */\n        const regAlt = (k: { keyCode: number, code: string }) => {\n            keybindings.registerKeybinding({\n                command: KeybindingRegistry.PASSTHROUGH_PSEUDO_COMMAND,\n                keybinding: KeyCode.createKeyCode({ key: k, alt: true }).toString(),\n                when: 'terminalFocus'\n            });\n        };\n\n        /* ctrl-space (000 - NUL).  */\n        regCtrl(Key.SPACE);\n\n        /* ctrl-A (001/1/0x1) through ctrl-Z (032/26/0x1A).  */\n        for (let i = 0; i < 26; i++) {\n            regCtrl({\n                keyCode: Key.KEY_A.keyCode + i,\n                code: 'Key' + String.fromCharCode('A'.charCodeAt(0) + i)\n            });\n        }\n\n        /* ctrl-[ or ctrl-3 (033/27/0x1B - ESC).  */\n        regCtrl(Key.BRACKET_LEFT);\n        regCtrl(Key.DIGIT3);\n\n        /* ctrl-\\ or ctrl-4 (034/28/0x1C - FS).  */\n        regCtrl(Key.BACKSLASH);\n        regCtrl(Key.DIGIT4);\n\n        /* ctrl-] or ctrl-5 (035/29/0x1D - GS).  */\n        regCtrl(Key.BRACKET_RIGHT);\n        regCtrl(Key.DIGIT5);\n\n        /* ctrl-6 (036/30/0x1E - RS).  */\n        regCtrl(Key.DIGIT6);\n\n        /* ctrl-7 (037/31/0x1F - US).  */\n        regCtrl(Key.DIGIT7);\n\n        /* ctrl-8 (177/127/0x7F - DEL).  */\n        regCtrl(Key.DIGIT8);\n\n        /* alt-A (0x1B 0x62) through alt-Z (0x1B 0x7A).  */\n        for (let i = 0; i < 26; i++) {\n            regAlt({\n                keyCode: Key.KEY_A.keyCode + i,\n                code: 'Key' + String.fromCharCode('A'.charCodeAt(0) + i)\n            });\n        }\n\n        /* alt-` (0x1B 0x60).  */\n        regAlt(Key.BACKQUOTE);\n\n        /* alt-0 (0x1B 0x30) through alt-9 (0x1B 0x39).  */\n        for (let i = 0; i < 10; i++) {\n            regAlt({\n                keyCode: Key.DIGIT0.keyCode + i,\n                code: 'Digit' + String.fromCharCode('0'.charCodeAt(0) + i)\n            });\n        }\n        if (isOSX) {\n            // selectAll on OSX\n            keybindings.registerKeybinding({\n                command: KeybindingRegistry.PASSTHROUGH_PSEUDO_COMMAND,\n                keybinding: 'ctrlcmd+a',\n                when: 'terminalFocus'\n            });\n        }\n\n        keybindings.registerKeybinding({\n            command: TerminalCommands.NEW.id,\n            keybinding: 'ctrl+shift+`'\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.NEW_ACTIVE_WORKSPACE.id,\n            keybinding: 'ctrl+`'\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.TERMINAL_CLEAR.id,\n            keybinding: 'ctrlcmd+k',\n            when: 'terminalFocus'\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.TERMINAL_FIND_TEXT.id,\n            keybinding: 'ctrlcmd+f',\n            when: 'terminalFocus'\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.TERMINAL_FIND_TEXT_CANCEL.id,\n            keybinding: 'esc',\n            when: 'terminalHideSearch'\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.SCROLL_LINE_UP.id,\n            keybinding: 'ctrl+shift+up',\n            when: 'terminalFocus'\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.SCROLL_LINE_DOWN.id,\n            keybinding: 'ctrl+shift+down',\n            when: 'terminalFocus'\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.SCROLL_TO_TOP.id,\n            keybinding: 'shift-home',\n            when: 'terminalFocus'\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.SCROLL_PAGE_UP.id,\n            keybinding: 'shift-pageUp',\n            when: 'terminalFocus'\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.SCROLL_PAGE_DOWN.id,\n            keybinding: 'shift-pageDown',\n            when: 'terminalFocus'\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.TOGGLE_TERMINAL.id,\n            keybinding: 'ctrl+`',\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.SELECT_ALL.id,\n            keybinding: 'ctrlcmd+a',\n            when: 'terminalFocus'\n        });\n    }\n\n    async newTerminal(options: TerminalWidgetOptions): Promise<TerminalWidget> {\n        const widget = <TerminalWidget>await this.widgetManager.getOrCreateWidget(TERMINAL_WIDGET_FACTORY_ID, <TerminalWidgetFactoryOptions>{\n            created: new Date().toISOString(),\n            ...options\n        });\n        return widget;\n    }\n\n    // TODO: reuse WidgetOpenHandler.open\n    open(widget: TerminalWidget, options?: WidgetOpenerOptions): void {\n        const area = widget.location === TerminalLocation.Editor ? 'main' : 'bottom';\n        const widgetOptions: ApplicationShell.WidgetOptions = { area: area, ...options?.widgetOptions };\n        let preserveFocus = false;\n\n        if (typeof widget.location === 'object') {\n            if ('parentTerminal' in widget.location) {\n                widgetOptions.ref = this.getById(widget.location.parentTerminal);\n                widgetOptions.mode = 'split-right';\n            } else if ('viewColumn' in widget.location) {\n                preserveFocus = widget.location.preserveFocus ?? false;\n                switch (widget.location.viewColumn) {\n                    case ViewColumn.Active:\n                        widgetOptions.ref = this.shell.currentWidget;\n                        widgetOptions.mode = 'tab-after';\n                        break;\n                    case ViewColumn.Beside:\n                        widgetOptions.ref = this.shell.currentWidget;\n                        widgetOptions.mode = 'split-right';\n                        break;\n                    default:\n                        widgetOptions.area = 'main';\n                        const mainAreaTerminals = this.shell.getWidgets('main').filter(w => w instanceof TerminalWidget && w.isVisible);\n                        const column = Math.min(widget.location.viewColumn, mainAreaTerminals.length);\n                        widgetOptions.mode = widget.location.viewColumn <= mainAreaTerminals.length ? 'split-left' : 'split-right';\n                        widgetOptions.ref = mainAreaTerminals[column - 1];\n                }\n            }\n        }\n\n        const op: WidgetOpenerOptions = {\n            mode: 'activate',\n            ...options,\n            widgetOptions: widgetOptions\n        };\n        if (!widget.isAttached) {\n            this.shell.addWidget(widget, op.widgetOptions);\n        }\n        if (op.mode === 'activate' && !preserveFocus) {\n            this.shell.activateWidget(widget.id);\n        } else if (op.mode === 'reveal' || preserveFocus) {\n            this.shell.revealWidget(widget.id);\n        }\n    }\n\n    protected async selectTerminalCwd(): Promise<string | undefined> {\n        return new Promise(async resolve => {\n            const roots = this.workspaceService.tryGetRoots();\n            if (roots.length === 0) {\n                resolve(undefined);\n            } else if (roots.length === 1) {\n                resolve(roots[0].resource.toString());\n            } else {\n                const items = roots.map(({ resource }) => ({\n                    label: this.labelProvider.getName(resource),\n                    description: this.labelProvider.getLongName(resource),\n                    resource\n                }));\n                const selectedItem = await this.quickInputService?.showQuickPick(items, {\n                    placeholder: nls.localizeByDefault('Select current working directory for new terminal')\n                });\n                resolve(selectedItem?.resource?.toString());\n            }\n        });\n    }\n\n    protected async selectTerminalProfile(placeholder: string): Promise<[string, TerminalProfile] | undefined> {\n        return new Promise(async resolve => {\n            const profiles = this.profileService.all;\n            if (profiles.length === 0) {\n                resolve(undefined);\n            } else {\n                const items = profiles.map(([id, profile]) => ({\n                    label: id,\n                    profile\n                }));\n                const selectedItem = await this.quickInputService?.showQuickPick(items, {\n                    placeholder\n                });\n                resolve(selectedItem ? [selectedItem.label, selectedItem.profile] : undefined);\n            }\n        });\n    }\n\n    protected async splitTerminal(referenceTerminal?: TerminalWidget): Promise<void> {\n        if (referenceTerminal || this.currentTerminal) {\n            const ref = referenceTerminal ?? this.currentTerminal;\n            await this.openTerminal({ ref, mode: 'split-right' });\n        }\n    }\n\n    protected async openTerminal(options?: ApplicationShell.WidgetOptions, terminalProfile?: TerminalProfile): Promise<void> {\n        let profile = terminalProfile;\n        if (!terminalProfile) {\n            profile = this.profileService.defaultProfile;\n            if (!profile) {\n                throw new Error('There are no profiles registered');\n            }\n        }\n\n        if (profile instanceof ShellTerminalProfile) {\n            if (this.workspaceService.workspace) {\n                const cwd = await this.selectTerminalCwd();\n                if (!cwd) {\n                    return;\n                }\n                profile = profile.modify({ cwd });\n            }\n        }\n\n        const termWidget = await profile?.start();\n        if (!!termWidget) {\n            this.open(termWidget, { widgetOptions: options });\n        }\n    }\n\n    protected async chooseDefaultProfile(): Promise<void> {\n        const result = await this.selectTerminalProfile(nls.localizeByDefault('Select your default terminal profile'));\n        if (!result) {\n            return;\n        }\n\n        this.preferenceService.set(`terminal.integrated.defaultProfile.${OS.backend.type().toLowerCase()}`, result[0], PreferenceScope.User);\n    }\n\n    protected async openActiveWorkspaceTerminal(options?: ApplicationShell.WidgetOptions): Promise<void> {\n        const termWidget = await this.newTerminal({});\n        termWidget.start();\n        this.open(termWidget, { widgetOptions: options });\n    }\n\n    protected withWidget<T>(widget: Widget | undefined, fn: (widget: TerminalWidget) => T): T | false {\n        if (widget instanceof TerminalWidget) {\n            return fn(widget);\n        }\n        return false;\n    }\n\n    /**\n     * It should be aligned with https://code.visualstudio.com/api/references/theme-color#integrated-terminal-colors\n     */\n    registerColors(colors: ColorRegistry): void {\n        colors.register({\n            id: 'terminal.background',\n            defaults: {\n                dark: 'panel.background',\n                light: 'panel.background',\n                hcDark: 'panel.background',\n                hcLight: 'panel.background'\n            },\n            description: 'The background color of the terminal, this allows coloring the terminal differently to the panel.'\n        });\n        colors.register({\n            id: 'terminal.foreground',\n            defaults: {\n                light: '#333333',\n                dark: '#CCCCCC',\n                hcDark: '#FFFFFF',\n                hcLight: '#292929'\n            },\n            description: 'The foreground color of the terminal.'\n        });\n        colors.register({\n            id: 'terminalCursor.foreground',\n            description: 'The foreground color of the terminal cursor.'\n        });\n        colors.register({\n            id: 'terminalCursor.background',\n            description: 'The background color of the terminal cursor. Allows customizing the color of a character overlapped by a block cursor.'\n        });\n        colors.register({\n            id: 'terminal.selectionBackground',\n            defaults: {\n                light: 'editor.selectionBackground',\n                dark: 'editor.selectionBackground',\n                hcDark: 'editor.selectionBackground',\n                hcLight: 'editor.selectionBackground'\n            },\n            description: 'The selection background color of the terminal.'\n        });\n        colors.register({\n            id: 'terminal.inactiveSelectionBackground',\n            defaults: {\n                light: Color.transparent('terminal.selectionBackground', 0.5),\n                dark: Color.transparent('terminal.selectionBackground', 0.5),\n                hcDark: Color.transparent('terminal.selectionBackground', 0.7),\n                hcLight: Color.transparent('terminal.selectionBackground', 0.5),\n            },\n            description: 'The selection background color of the terminal when it does not have focus.'\n        });\n        colors.register({\n            id: 'terminal.selectionForeground',\n            defaults: {\n                light: undefined,\n                dark: undefined,\n                hcDark: '#000000',\n                hcLight: '#ffffff'\n            },\n            // eslint-disable-next-line max-len\n            description: 'The selection foreground color of the terminal. When this is null the selection foreground will be retained and have the minimum contrast ratio feature applied.'\n        });\n        colors.register({\n            id: 'terminal.border',\n            defaults: {\n                light: 'panel.border',\n                dark: 'panel.border',\n                hcDark: 'panel.border',\n                hcLight: 'panel.border'\n            },\n            description: 'The color of the border that separates split panes within the terminal. This defaults to panel.border.'\n        });\n        // eslint-disable-next-line guard-for-in\n        for (const id in terminalAnsiColorMap) {\n            const entry = terminalAnsiColorMap[id];\n            const colorName = id.substring(13);\n            colors.register({\n                id,\n                defaults: entry.defaults,\n                description: `'${colorName}'  ANSI color in the terminal.`\n            });\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2022 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Emitter, Event } from '@theia/core';\nimport { injectable, unmanaged } from '@theia/core/shared/inversify';\nimport { TerminalWidget } from './base/terminal-widget';\nimport { ShellTerminalProfile } from './shell-terminal-profile';\n\nexport const TerminalProfileService = Symbol('TerminalProfileService');\nexport const ContributedTerminalProfileStore = Symbol('ContributedTerminalProfileStore');\nexport const UserTerminalProfileStore = Symbol('UserTerminalProfileStore');\n\nexport interface TerminalProfile {\n    start(): Promise<TerminalWidget>;\n}\n\nexport const NULL_PROFILE: TerminalProfile = {\n    start: async () => { throw new Error('you cannot start a null profile'); }\n};\n\nexport interface TerminalProfileService {\n    onAdded: Event<string>;\n    onRemoved: Event<string>;\n    getProfile(id: string): TerminalProfile | undefined\n    readonly all: [string, TerminalProfile][];\n    setDefaultProfile(id: string): void;\n    readonly onDidChangeDefaultShell: Event<string>;\n    readonly defaultProfile: TerminalProfile | undefined;\n}\n\nexport interface TerminalProfileStore {\n    onAdded: Event<[string, TerminalProfile]>;\n    onRemoved: Event<string>;\n    registerTerminalProfile(id: string, profile: TerminalProfile): void;\n    unregisterTerminalProfile(id: string): void;\n    hasProfile(id: string): boolean;\n    getProfile(id: string): TerminalProfile | undefined\n    readonly all: [string, TerminalProfile][];\n}\n\n@injectable()\nexport class DefaultProfileStore implements TerminalProfileStore {\n    protected readonly onAddedEmitter: Emitter<[string, TerminalProfile]> = new Emitter();\n    protected readonly onRemovedEmitter: Emitter<string> = new Emitter();\n    protected readonly profiles: Map<string, TerminalProfile> = new Map();\n\n    onAdded: Event<[string, TerminalProfile]> = this.onAddedEmitter.event;\n    onRemoved: Event<string> = this.onRemovedEmitter.event;\n\n    registerTerminalProfile(id: string, profile: TerminalProfile): void {\n        this.profiles.set(id, profile);\n        this.onAddedEmitter.fire([id, profile]);\n    }\n    unregisterTerminalProfile(id: string): void {\n        this.profiles.delete(id);\n        this.onRemovedEmitter.fire(id);\n    }\n\n    hasProfile(id: string): boolean {\n        return this.profiles.has(id);\n    }\n\n    getProfile(id: string): TerminalProfile | undefined {\n        return this.profiles.get(id);\n    }\n    get all(): [string, TerminalProfile][] {\n        return [...this.profiles.entries()];\n    }\n}\n\n@injectable()\nexport class DefaultTerminalProfileService implements TerminalProfileService {\n    protected defaultProfileIndex = 0;\n    protected order: string[] = [];\n    protected readonly stores: TerminalProfileStore[];\n\n    protected readonly onAddedEmitter: Emitter<string> = new Emitter();\n    protected readonly onRemovedEmitter: Emitter<string> = new Emitter();\n    protected readonly onDidChangeDefaultShellEmitter: Emitter<string> = new Emitter();\n\n    onAdded: Event<string> = this.onAddedEmitter.event;\n    onRemoved: Event<string> = this.onRemovedEmitter.event;\n    onDidChangeDefaultShell: Event<string> = this.onDidChangeDefaultShellEmitter.event;\n\n    constructor(@unmanaged() ...stores: TerminalProfileStore[]) {\n        this.stores = stores;\n        for (const store of this.stores) {\n            store.onAdded(e => {\n                if (e[1] === NULL_PROFILE) {\n                    this.handleRemoved(e[0]);\n                } else {\n                    this.handleAdded(e[0]);\n                }\n            });\n            store.onRemoved(id => {\n                if (!this.getProfile(id)) {\n                    this.handleRemoved(id);\n                } else {\n                    // we may have removed a null profile\n                    this.handleAdded(id);\n                }\n            });\n        }\n    }\n\n    handleRemoved(id: string): void {\n        const index = this.order.indexOf(id);\n        if (index >= 0 && !this.getProfile(id)) {\n            // the profile was removed, but it's still in the `order` array\n            this.order.splice(index, 1);\n            this.defaultProfileIndex = Math.max(0, Math.min(this.order.length - 1, index));\n            this.onRemovedEmitter.fire(id);\n        }\n    }\n\n    handleAdded(id: string): void {\n        const index = this.order.indexOf(id);\n        if (index < 0) {\n            this.order.push(id);\n            this.onAddedEmitter.fire(id);\n        }\n    }\n\n    get defaultProfile(): TerminalProfile | undefined {\n        const id = this.order[this.defaultProfileIndex];\n        if (id) {\n            return this.getProfile(id);\n        }\n        return undefined;\n    }\n\n    setDefaultProfile(id: string): void {\n        const profile = this.getProfile(id);\n        if (!profile) {\n            throw new Error(`Cannot set default to unknown profile '${id}' `);\n        }\n        this.defaultProfileIndex = this.order.indexOf(id);\n\n        if (profile instanceof ShellTerminalProfile && profile.shellPath) {\n            this.onDidChangeDefaultShellEmitter.fire(profile.shellPath);\n        } else {\n            this.onDidChangeDefaultShellEmitter.fire('');\n        }\n    }\n\n    getProfile(id: string): TerminalProfile | undefined {\n        for (const store of this.stores) {\n            if (store.hasProfile(id)) {\n                const found = store.getProfile(id);\n                return found === NULL_PROFILE ? undefined : found;\n            }\n        }\n        return undefined;\n    }\n\n    getId(profile: TerminalProfile): string | undefined {\n        for (const [id, p] of this.all) {\n            if (p === profile) {\n                return id;\n            }\n        }\n    }\n\n    get all(): [string, TerminalProfile][] {\n        return this.order.filter(id => !!this.getProfile(id)).map(id => [id, this.getProfile(id)!]);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Terminal } from 'xterm';\nimport { FitAddon } from 'xterm-addon-fit';\nimport { inject, injectable, named, postConstruct } from '@theia/core/shared/inversify';\nimport { ContributionProvider, Disposable, Event, Emitter, ILogger, DisposableCollection, Channel, OS, generateUuid } from '@theia/core';\nimport {\n    Widget, Message, StatefulWidget, isFirefox, MessageLoop, KeyCode, ExtractableWidget, ContextMenuRenderer,\n    DecorationStyle\n} from '@theia/core/lib/browser';\nimport { isOSX } from '@theia/core/lib/common';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { ShellTerminalServerProxy, IShellTerminalPreferences } from '../common/shell-terminal-protocol';\nimport { terminalsPath } from '../common/terminal-protocol';\nimport { IBaseTerminalServer, TerminalProcessInfo, TerminalExitReason } from '../common/base-terminal-protocol';\nimport { TerminalWatcher } from '../common/terminal-watcher';\nimport {\n    TerminalWidgetOptions, TerminalWidget, TerminalDimensions, TerminalExitStatus, TerminalLocationOptions,\n    TerminalLocation,\n    TerminalBuffer\n} from './base/terminal-widget';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { TerminalPreferences } from './terminal-preferences';\nimport URI from '@theia/core/lib/common/uri';\nimport { TerminalService } from './base/terminal-service';\nimport { TerminalSearchWidgetFactory, TerminalSearchWidget } from './search/terminal-search-widget';\nimport { TerminalCopyOnSelectionHandler } from './terminal-copy-on-selection-handler';\nimport { TerminalThemeService } from './terminal-theme-service';\nimport { CommandLineOptions, ShellCommandBuilder } from '@theia/process/lib/common/shell-command-builder';\nimport { Key } from '@theia/core/lib/browser/keys';\nimport { nls } from '@theia/core/lib/common/nls';\nimport { TerminalMenus } from './terminal-frontend-contribution';\nimport debounce = require('p-debounce');\nimport { MarkdownString, MarkdownStringImpl } from '@theia/core/lib/common/markdown-rendering/markdown-string';\nimport { EnhancedPreviewWidget } from '@theia/core/lib/browser/widgets/enhanced-preview-widget';\nimport { MarkdownRenderer, MarkdownRendererFactory } from '@theia/core/lib/browser/markdown-rendering/markdown-renderer';\nimport { RemoteConnectionProvider, ServiceConnectionProvider } from '@theia/core/lib/browser/messaging/service-connection-provider';\nimport { ColorRegistry } from '@theia/core/lib/browser/color-registry';\nimport { guessShellTypeFromExecutable } from '../common/shell-type';\n\nexport const TERMINAL_WIDGET_FACTORY_ID = 'terminal';\n\nexport interface TerminalWidgetFactoryOptions extends Partial<TerminalWidgetOptions> {\n    /* a unique string per terminal */\n    created: string\n}\n\nexport const TerminalContribution = Symbol('TerminalContribution');\nexport interface TerminalContribution {\n    onCreate(term: TerminalWidgetImpl): void;\n}\n\nclass TerminalBufferImpl implements TerminalBuffer {\n    constructor(private readonly term: Terminal) {\n    }\n\n    get length(): number {\n        return this.term.buffer.active.length;\n    };\n    getLines(start: number, length: number): string[] {\n        const result: string[] = [];\n        for (let i = 0; i < length && this.length - 1 - i >= 0; i++) {\n            result.push(this.term.buffer.active.getLine(this.length - 1 - i)!.translateToString());\n        }\n        return result;\n    }\n\n}\n\n@injectable()\nexport class TerminalWidgetImpl extends TerminalWidget implements StatefulWidget, ExtractableWidget, EnhancedPreviewWidget {\n    readonly isExtractable: boolean = true;\n    secondaryWindow: Window | undefined;\n    location: TerminalLocationOptions;\n\n    static LABEL = nls.localizeByDefault('Terminal');\n\n    exitStatus: TerminalExitStatus | undefined;\n\n    protected terminalKind = 'user';\n    protected _terminalId = -1;\n    protected readonly onTermDidClose = new Emitter<TerminalWidget>();\n    protected fitAddon: FitAddon;\n    protected term: Terminal;\n    protected searchBox: TerminalSearchWidget;\n    protected restored = false;\n    protected closeOnDispose = true;\n    protected waitForConnection: Deferred<Channel> | undefined;\n    protected linkHover: HTMLDivElement;\n    protected linkHoverButton: HTMLAnchorElement;\n    protected lastTouchEnd: TouchEvent | undefined;\n    protected lastMousePosition: { x: number, y: number } | undefined;\n    protected isAttachedCloseListener: boolean = false;\n    protected shown = false;\n    protected enhancedPreviewNode: Node | undefined;\n    protected styleElement: HTMLStyleElement | undefined;\n    override lastCwd = new URI();\n\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(RemoteConnectionProvider) protected readonly connectionProvider: ServiceConnectionProvider;\n    @inject(TerminalWidgetOptions) options: TerminalWidgetOptions;\n    @inject(ShellTerminalServerProxy) protected readonly shellTerminalServer: ShellTerminalServerProxy;\n    @inject(TerminalWatcher) protected readonly terminalWatcher: TerminalWatcher;\n    @inject(ILogger) @named('terminal') protected readonly logger: ILogger;\n    @inject('terminal-dom-id') readonly _terminalDOMId: string;\n    @inject(TerminalPreferences) protected readonly preferences: TerminalPreferences;\n    @inject(ContributionProvider) @named(TerminalContribution) protected readonly terminalContributionProvider: ContributionProvider<TerminalContribution>;\n    @inject(TerminalService) protected readonly terminalService: TerminalService;\n    @inject(TerminalSearchWidgetFactory) protected readonly terminalSearchBoxFactory: TerminalSearchWidgetFactory;\n    @inject(TerminalCopyOnSelectionHandler) protected readonly copyOnSelectionHandler: TerminalCopyOnSelectionHandler;\n    @inject(TerminalThemeService) protected readonly themeService: TerminalThemeService;\n    @inject(ColorRegistry) protected readonly colorRegistry: ColorRegistry;\n    @inject(ShellCommandBuilder) protected readonly shellCommandBuilder: ShellCommandBuilder;\n    @inject(ContextMenuRenderer) protected readonly contextMenuRenderer: ContextMenuRenderer;\n    @inject(MarkdownRendererFactory) protected readonly markdownRendererFactory: MarkdownRendererFactory;\n\n    protected _markdownRenderer: MarkdownRenderer | undefined;\n    protected get markdownRenderer(): MarkdownRenderer {\n        this._markdownRenderer ||= this.markdownRendererFactory();\n        return this._markdownRenderer;\n    }\n\n    protected readonly onDidOpenEmitter = new Emitter<void>();\n    readonly onDidOpen: Event<void> = this.onDidOpenEmitter.event;\n\n    protected readonly onDidOpenFailureEmitter = new Emitter<void>();\n    readonly onDidOpenFailure: Event<void> = this.onDidOpenFailureEmitter.event;\n\n    protected readonly onSizeChangedEmitter = new Emitter<{ cols: number; rows: number; }>();\n    readonly onSizeChanged: Event<{ cols: number; rows: number; }> = this.onSizeChangedEmitter.event;\n\n    protected readonly onDataEmitter = new Emitter<string>();\n    readonly onData: Event<string> = this.onDataEmitter.event;\n\n    protected readonly onOutputEmitter = new Emitter<string>();\n    readonly onOutput: Event<string> = this.onOutputEmitter.event;\n\n    protected readonly onKeyEmitter = new Emitter<{ key: string, domEvent: KeyboardEvent }>();\n    readonly onKey: Event<{ key: string, domEvent: KeyboardEvent }> = this.onKeyEmitter.event;\n\n    protected readonly onMouseEnterLinkHoverEmitter = new Emitter<MouseEvent>();\n    readonly onMouseEnterLinkHover: Event<MouseEvent> = this.onMouseEnterLinkHoverEmitter.event;\n\n    protected readonly onMouseLeaveLinkHoverEmitter = new Emitter<MouseEvent>();\n    readonly onMouseLeaveLinkHover: Event<MouseEvent> = this.onMouseLeaveLinkHoverEmitter.event;\n\n    protected readonly onShellTypeChangedEmiter = new Emitter<string>();\n    readonly onShellTypeChanged: Event<string> = this.onShellTypeChangedEmiter.event;\n\n    protected readonly toDisposeOnConnect = new DisposableCollection();\n\n    private _buffer: TerminalBuffer;\n    override get buffer(): TerminalBuffer {\n        return this._buffer;\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.id = this._terminalDOMId;\n        this.setTitle(this.options.title || TerminalWidgetImpl.LABEL);\n        this.setIconClass();\n\n        if (this.options.kind) {\n            this.terminalKind = this.options.kind;\n        }\n\n        if (this.options.destroyTermOnClose === true) {\n            this.toDispose.push(Disposable.create(() =>\n                this.term.dispose()\n            ));\n        }\n\n        this.location = this.options.location || TerminalLocation.Panel;\n\n        this.title.closable = true;\n        this.addClass('terminal-container');\n\n        this.term = new Terminal({\n            cursorBlink: this.preferences['terminal.integrated.cursorBlinking'],\n            cursorStyle: this.preferences['terminal.integrated.cursorStyle'] === 'line' ? 'bar' : this.preferences['terminal.integrated.cursorStyle'],\n            cursorWidth: this.preferences['terminal.integrated.cursorWidth'],\n            fontFamily: this.preferences['terminal.integrated.fontFamily'],\n            fontSize: this.preferences['terminal.integrated.fontSize'],\n            fontWeight: this.preferences['terminal.integrated.fontWeight'],\n            fontWeightBold: this.preferences['terminal.integrated.fontWeightBold'],\n            drawBoldTextInBrightColors: this.preferences['terminal.integrated.drawBoldTextInBrightColors'],\n            letterSpacing: this.preferences['terminal.integrated.letterSpacing'],\n            lineHeight: this.preferences['terminal.integrated.lineHeight'],\n            scrollback: this.preferences['terminal.integrated.scrollback'],\n            fastScrollSensitivity: this.preferences['terminal.integrated.fastScrollSensitivity'],\n            theme: this.themeService.theme\n        });\n        this._buffer = new TerminalBufferImpl(this.term);\n\n        this.fitAddon = new FitAddon();\n        this.term.loadAddon(this.fitAddon);\n\n        this.initializeLinkHover();\n\n        this.toDispose.push(this.preferences.onPreferenceChanged(change => {\n            this.updateConfig();\n            this.needsResize = true;\n            this.update();\n        }));\n\n        this.toDispose.push(this.themeService.onDidChange(() => {\n            this.term.options.theme = this.themeService.theme;\n            this.setIconClass();\n        }));\n        this.attachCustomKeyEventHandler();\n        const titleChangeListenerDispose = this.term.onTitleChange((title: string) => {\n            if (this.options.useServerTitle) {\n                this.title.label = title;\n            }\n        });\n        this.toDispose.push(titleChangeListenerDispose);\n\n        this.toDispose.push(this.terminalWatcher.onTerminalError(({ terminalId, error, attached }) => {\n            if (terminalId === this.terminalId) {\n                this.exitStatus = { code: undefined, reason: TerminalExitReason.Process };\n                this.logger.error(`The terminal process terminated. Cause: ${error}`);\n                if (!attached) {\n                    this.dispose();\n                }\n            }\n        }));\n        this.toDispose.push(this.terminalWatcher.onTerminalExit(({ terminalId, code, reason, attached }) => {\n            if (terminalId === this.terminalId) {\n                if (reason) {\n                    this.exitStatus = { code, reason };\n                } else {\n                    this.exitStatus = { code, reason: TerminalExitReason.Process };\n                }\n                if (!attached) {\n                    this.dispose();\n                }\n            }\n        }));\n        this.toDispose.push(this.toDisposeOnConnect);\n        this.toDispose.push(this.shellTerminalServer.onDidCloseConnection(() => {\n            const disposable = this.shellTerminalServer.onDidOpenConnection(() => {\n                disposable.dispose();\n                this.reconnectTerminalProcess();\n            });\n            this.toDispose.push(disposable);\n        }));\n        this.toDispose.push(this.onTermDidClose);\n        this.toDispose.push(this.onDidOpenEmitter);\n        this.toDispose.push(this.onDidOpenFailureEmitter);\n        this.toDispose.push(this.onSizeChangedEmitter);\n        this.toDispose.push(this.onDataEmitter);\n        this.toDispose.push(this.onKeyEmitter);\n        this.toDispose.push(this.onShellTypeChangedEmiter);\n\n        const touchEndListener = (event: TouchEvent) => {\n            if (this.node.contains(event.target as Node)) {\n                this.lastTouchEnd = event;\n            }\n        };\n        document.addEventListener('touchend', touchEndListener, { passive: true });\n        this.onDispose(() => {\n            document.removeEventListener('touchend', touchEndListener);\n        });\n\n        const mouseListener = (event: MouseEvent) => {\n            this.lastMousePosition = { x: event.x, y: event.y };\n        };\n        this.node.addEventListener('mousemove', mouseListener);\n        this.onDispose(() => {\n            this.node.removeEventListener('mousemove', mouseListener);\n        });\n\n        const contextMenuListener = (event: MouseEvent) => {\n            event.preventDefault();\n            event.stopPropagation();\n            this.contextMenuRenderer.render({ menuPath: TerminalMenus.TERMINAL_CONTEXT_MENU, anchor: event, context: this.node });\n        };\n        this.node.addEventListener('contextmenu', contextMenuListener);\n        this.onDispose(() => this.node.removeEventListener('contextmenu', contextMenuListener));\n\n        this.toDispose.push(this.term.onSelectionChange(() => {\n            if (this.copyOnSelection) {\n                this.copyOnSelectionHandler.copy(this.term.getSelection());\n            }\n        }));\n\n        this.toDispose.push(this.term.onResize(data => {\n            this.onSizeChangedEmitter.fire(data);\n        }));\n\n        this.toDispose.push(this.term.onData(data => {\n            this.onDataEmitter.fire(data);\n        }));\n\n        this.toDispose.push(this.term.onBinary(data => {\n            this.onDataEmitter.fire(data);\n        }));\n\n        this.toDispose.push(this.term.onKey(data => {\n            this.onKeyEmitter.fire(data);\n        }));\n\n        for (const contribution of this.terminalContributionProvider.getContributions()) {\n            contribution.onCreate(this);\n        }\n\n        this.searchBox = this.terminalSearchBoxFactory(this.term);\n        this.toDispose.push(this.searchBox);\n    }\n\n    get kind(): 'user' | string {\n        return this.terminalKind;\n    }\n\n    updateConfig(): void {\n        this.setCursorBlink(this.preferences.get('terminal.integrated.cursorBlinking'));\n        this.setCursorStyle(this.preferences.get('terminal.integrated.cursorStyle'));\n        this.setCursorWidth(this.preferences.get('terminal.integrated.cursorWidth'));\n        this.term.options.fontFamily = this.preferences.get('terminal.integrated.fontFamily');\n        this.term.options.fontSize = this.preferences.get('terminal.integrated.fontSize');\n        this.term.options.fontWeight = this.preferences.get('terminal.integrated.fontWeight');\n        this.term.options.fontWeightBold = this.preferences.get('terminal.integrated.fontWeightBold');\n        this.term.options.drawBoldTextInBrightColors = this.preferences.get('terminal.integrated.drawBoldTextInBrightColors');\n        this.term.options.letterSpacing = this.preferences.get('terminal.integrated.letterSpacing');\n        this.term.options.lineHeight = this.preferences.get('terminal.integrated.lineHeight');\n        this.term.options.scrollback = this.preferences.get('terminal.integrated.scrollback');\n        this.term.options.fastScrollSensitivity = this.preferences.get('terminal.integrated.fastScrollSensitivity');\n    }\n\n    protected setIconClass(): void {\n        this.styleElement?.remove();\n        if (this.options.iconClass) {\n            const iconClass = this.options.iconClass;\n            if (typeof iconClass === 'string') {\n                this.title.iconClass = iconClass;\n            } else {\n                const iconClasses: string[] = [];\n                iconClasses.push(iconClass.id);\n                if (iconClass.color) {\n                    this.styleElement = DecorationStyle.createStyleElement(`${this.terminalId}-terminal-style`);\n                    const classId = 'terminal-icon-' + generateUuid().replace(/-/g, '');\n                    const color = this.colorRegistry.getCurrentColor(iconClass.color.id);\n                    this.styleElement.textContent = `\n                        .${classId}::before {\n                            color: ${color};\n                        }\n                    `;\n                    iconClasses.push(classId);\n                }\n                this.title.iconClass = iconClasses.join(' ');\n            }\n        }\n    }\n\n    private setCursorBlink(blink: boolean): void {\n        if (this.term.options.cursorBlink !== blink) {\n            this.term.options.cursorBlink = blink;\n            this.term.refresh(0, this.term.rows - 1);\n        }\n    }\n\n    private setCursorStyle(style: 'block' | 'underline' | 'bar' | 'line'): void {\n        if (this.term.options.cursorStyle !== style) {\n            this.term.options.cursorStyle = (style === 'line') ? 'bar' : style;\n        }\n    }\n\n    private setCursorWidth(width: number): void {\n        if (this.term.options.cursorWidth !== width) {\n            this.term.options.cursorWidth = width;\n        }\n    }\n\n    protected initializeLinkHover(): void {\n        this.linkHover = document.createElement('div');\n        this.linkHover.style.position = 'fixed';\n        this.linkHover.style.color = 'var(--theia-editorHoverWidget-foreground)';\n        this.linkHover.style.backgroundColor = 'var(--theia-editorHoverWidget-background)';\n        this.linkHover.style.borderColor = 'var(--theia-editorHoverWidget-border)';\n        this.linkHover.style.borderWidth = '0.5px';\n        this.linkHover.style.borderStyle = 'solid';\n        this.linkHover.style.padding = '5px';\n        // Above the xterm.js canvas layers:\n        // https://github.com/xtermjs/xterm.js/blob/ff790236c1b205469f17a21246141f512d844295/src/renderer/Renderer.ts#L41-L46\n        this.linkHover.style.zIndex = '10';\n        // Initially invisible:\n        this.linkHover.style.display = 'none';\n\n        this.linkHoverButton = document.createElement('a');\n        this.linkHoverButton.textContent = this.linkHoverMessage();\n        this.linkHoverButton.style.cursor = 'pointer';\n        this.linkHover.appendChild(this.linkHoverButton);\n\n        const cmdCtrl = isOSX ? 'cmd' : 'ctrl';\n        const cmdHint = document.createTextNode(` (${nls.localizeByDefault(`${cmdCtrl} + click`)})`);\n        this.linkHover.appendChild(cmdHint);\n\n        const onMouseEnter = (mouseEvent: MouseEvent) => this.onMouseEnterLinkHoverEmitter.fire(mouseEvent);\n        this.linkHover.addEventListener('mouseenter', onMouseEnter);\n        this.toDispose.push(Disposable.create(() => this.linkHover.removeEventListener('mouseenter', onMouseEnter)));\n\n        const onMouseLeave = (mouseEvent: MouseEvent) => this.onMouseLeaveLinkHoverEmitter.fire(mouseEvent);\n        this.linkHover.addEventListener('mouseleave', onMouseLeave);\n        this.toDispose.push(Disposable.create(() => this.linkHover.removeEventListener('mouseleave', onMouseLeave)));\n\n        this.node.appendChild(this.linkHover);\n    }\n\n    showLinkHover(invokeAction: (event: MouseEvent) => void, x: number, y: number, message?: string): void {\n        const mouseY = this.lastMousePosition?.y ?? y;\n        const mouseX = this.lastMousePosition?.x ?? x;\n        this.linkHoverButton.textContent = this.linkHoverMessage(message);\n        this.linkHoverButton.onclick = (mouseEvent: MouseEvent) => invokeAction(mouseEvent);\n        this.linkHover.style.display = 'inline';\n        this.linkHover.style.top = `${mouseY - 30}px`;\n        this.linkHover.style.left = `${mouseX - 60}px`;\n    }\n\n    protected linkHoverMessage(message?: string): string {\n        return message ?? nls.localizeByDefault('Follow link');\n    }\n\n    hideLinkHover(): void {\n        this.linkHover.style.display = 'none';\n        // eslint-disable-next-line no-null/no-null\n        this.linkHoverButton.onclick = null;\n    }\n\n    getTerminal(): Terminal {\n        return this.term;\n    }\n\n    getSearchBox(): TerminalSearchWidget {\n        return this.searchBox;\n    }\n\n    protected override onCloseRequest(msg: Message): void {\n        this.exitStatus = { code: undefined, reason: TerminalExitReason.User };\n        super.onCloseRequest(msg);\n    }\n\n    get dimensions(): TerminalDimensions {\n        return {\n            cols: this.term.cols,\n            rows: this.term.rows,\n        };\n    }\n\n    get cwd(): Promise<URI> {\n        if (!IBaseTerminalServer.validateId(this.terminalId)) {\n            return Promise.reject(new Error('terminal is not started'));\n        }\n        if (this.terminalService.getById(this.id)) {\n            return this.shellTerminalServer.getCwdURI(this.terminalId)\n                .then(cwdUrl => {\n                    this.lastCwd = new URI(cwdUrl);\n                    return this.lastCwd;\n                }).catch(() => this.lastCwd);\n        }\n        return Promise.resolve(new URI());\n    }\n\n    get processId(): Promise<number> {\n        if (!IBaseTerminalServer.validateId(this.terminalId)) {\n            return Promise.reject(new Error('terminal is not started'));\n        }\n        return this.shellTerminalServer.getProcessId(this.terminalId);\n    }\n\n    get processInfo(): Promise<TerminalProcessInfo> {\n        if (!IBaseTerminalServer.validateId(this.terminalId)) {\n            return Promise.reject(new Error('terminal is not started'));\n        }\n        return this.shellTerminalServer.getProcessInfo(this.terminalId);\n    }\n\n    get envVarCollectionDescriptionsByExtension(): Promise<Map<string, (string | MarkdownString | undefined)[]>> {\n        if (!IBaseTerminalServer.validateId(this.terminalId)) {\n            return Promise.reject(new Error('terminal is not started'));\n        }\n        return this.shellTerminalServer.getEnvVarCollectionDescriptionsByExtension(this.terminalId);\n    }\n\n    get terminalId(): number {\n        return this._terminalId;\n    }\n\n    get lastTouchEndEvent(): TouchEvent | undefined {\n        return this.lastTouchEnd;\n    }\n\n    get hiddenFromUser(): boolean {\n        if (this.shown) {\n            return false;\n        }\n        return this.options.hideFromUser ?? false;\n    }\n\n    get transient(): boolean {\n        // The terminal is transient if session persistence is disabled or it's explicitly marked as transient\n        return !this.preferences['terminal.integrated.enablePersistentSessions'] || !!this.options.isTransient;\n    }\n\n    onDispose(onDispose: () => void): void {\n        this.toDispose.push(Disposable.create(onDispose));\n    }\n\n    clearOutput(): void {\n        this.term.clear();\n    }\n\n    selectAll(): void {\n        this.term.selectAll();\n    }\n\n    async hasChildProcesses(): Promise<boolean> {\n        return this.shellTerminalServer.hasChildProcesses(await this.processId);\n    }\n\n    storeState(): object {\n        this.closeOnDispose = false;\n        if (this.transient || this.options.isPseudoTerminal) {\n            return {};\n        }\n        return { terminalId: this.terminalId, titleLabel: this.title.label };\n    }\n\n    restoreState(oldState: object): void {\n        // transient terminals and pseudo terminals are not restored\n        if (this.transient || this.options.isPseudoTerminal) {\n            this.dispose();\n            return;\n        }\n        if (this.restored === false) {\n            const state = oldState as { terminalId: number, titleLabel: string };\n            /* This is a workaround to issue #879 */\n            this.restored = true;\n            this.title.label = state.titleLabel;\n            this.start(state.terminalId);\n        }\n    }\n\n    /**\n     * Create a new shell terminal in the back-end and attach it to a\n     * new terminal widget.\n     * If id is provided attach to the terminal for this id.\n     */\n    async start(id?: number): Promise<number> {\n        this._terminalId = typeof id !== 'number' ? await this.createTerminal() : await this.attachTerminal(id);\n        this.resizeTerminalProcess();\n        this.connectTerminalProcess();\n        if (IBaseTerminalServer.validateId(this.terminalId)) {\n            this.onDidOpenEmitter.fire(undefined);\n            await this.shellTerminalServer.onAttachAttempted(this._terminalId);\n            return this.terminalId;\n        }\n        this.onDidOpenFailureEmitter.fire(undefined);\n        throw new Error('Failed to start terminal' + (id ? ` for id: ${id}.` : '.'));\n    }\n\n    protected async attachTerminal(id: number): Promise<number> {\n        const terminalId = await this.shellTerminalServer.attach(id);\n        if (IBaseTerminalServer.validateId(terminalId)) {\n            // reset exit status if a new terminal process is attached\n            this.exitStatus = undefined;\n            return terminalId;\n        }\n        this.logger.warn(`Failed attaching to terminal id ${id}, the terminal is most likely gone. Starting up a new terminal instead.`);\n        if (this.kind === 'user') {\n            return this.createTerminal();\n        } else {\n            return -1;\n        }\n    }\n\n    protected async createTerminal(): Promise<number> {\n        let rootURI = this.options.cwd?.toString();\n        if (!rootURI) {\n            const root = (await this.workspaceService.roots)[0];\n            rootURI = root?.resource?.toString();\n        }\n        const { cols, rows } = this.term;\n        const terminalId = await this.shellTerminalServer.create({\n            shell: this.options.shellPath || this.shellPreferences.shell[OS.backend.type()],\n            args: this.options.shellArgs || this.shellPreferences.shellArgs[OS.backend.type()],\n            env: this.options.env,\n            strictEnv: this.options.strictEnv,\n            isPseudo: this.options.isPseudoTerminal,\n            rootURI,\n            cols,\n            rows\n        });\n        if (IBaseTerminalServer.validateId(terminalId)) {\n            const processInfo = await this.shellTerminalServer.getProcessInfo(terminalId);\n            const shellType = guessShellTypeFromExecutable(processInfo.executable);\n            if (shellType) {\n                this.onShellTypeChangedEmiter.fire(shellType);\n            }\n            return terminalId;\n        }\n        throw new Error('Error creating terminal widget, see the backend error log for more information.');\n    }\n\n    override processMessage(msg: Message): void {\n        super.processMessage(msg);\n        switch (msg.type) {\n            case 'fit-request':\n                this.onFitRequest(msg);\n                break;\n            default:\n                break;\n        }\n    }\n    protected override onFitRequest(msg: Message): void {\n        super.onFitRequest(msg);\n        MessageLoop.sendMessage(this, Widget.ResizeMessage.UnknownSize);\n    }\n    protected override onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.term.focus();\n    }\n    protected override onAfterShow(msg: Message): void {\n        super.onAfterShow(msg);\n        this.update();\n        this.shown = true;\n    }\n    protected override onAfterAttach(msg: Message): void {\n        Widget.attach(this.searchBox, this.node);\n        super.onAfterAttach(msg);\n        this.update();\n    }\n    protected override onBeforeDetach(msg: Message): void {\n        Widget.detach(this.searchBox);\n        super.onBeforeDetach(msg);\n    }\n    protected override onResize(msg: Widget.ResizeMessage): void {\n        super.onResize(msg);\n        this.needsResize = true;\n        this.update();\n    }\n\n    protected needsResize = true;\n    protected override onUpdateRequest(msg: Message): void {\n        super.onUpdateRequest(msg);\n        if (!this.isVisible || !this.isAttached) {\n            return;\n        }\n\n        this.open();\n\n        if (this.needsResize) {\n            this.resizeTerminal();\n            this.needsResize = false;\n        }\n    }\n\n    // Device status code emitted by Xterm.js\n    // Check: https://github.com/xtermjs/xterm.js/blob/release/3.14/src/InputHandler.ts#L1055-L1082\n    protected readonly deviceStatusCodes = new Set(['\\u001B[>0;276;0c', '\\u001B[>85;95;0c', '\\u001B[>83;40003;0c', '\\u001B[?1;2c', '\\u001B[?6c']);\n\n    protected connectTerminalProcess(): void {\n        if (typeof this.terminalId !== 'number') {\n            return;\n        }\n        if (this.options.isPseudoTerminal) {\n            return;\n        }\n        this.toDisposeOnConnect.dispose();\n        this.toDispose.push(this.toDisposeOnConnect);\n        const waitForConnection = this.waitForConnection = new Deferred<Channel>();\n        this.connectionProvider.listen(\n            `${terminalsPath}/${this.terminalId}`,\n            (_path, connection) => {\n                connection.onMessage(e => {\n                    this.write(e().readString());\n                });\n\n                // Excludes the device status code emitted by Xterm.js\n                const sendData = (data?: string) => {\n                    if (data && !this.deviceStatusCodes.has(data) && !this.disableEnterWhenAttachCloseListener()) {\n                        connection.getWriteBuffer().writeString(data).commit();\n                    }\n                };\n\n                const disposable = new DisposableCollection();\n                disposable.push(this.term.onData(sendData));\n                disposable.push(this.term.onBinary(sendData));\n\n                connection.onClose(() => disposable.dispose());\n\n                if (waitForConnection) {\n                    waitForConnection.resolve(connection);\n                }\n            }, false);\n    }\n    protected async reconnectTerminalProcess(): Promise<void> {\n        if (this.options.isPseudoTerminal) {\n            return;\n        }\n        if (typeof this.terminalId === 'number') {\n            await this.start(this.terminalId);\n        }\n    }\n\n    protected termOpened = false;\n    protected initialData = '';\n    protected open(): void {\n        if (this.termOpened) {\n            return;\n        }\n        this.term.open(this.node);\n\n        interface ViewportType {\n            register(d: Disposable): void;\n            _refreshAnimationFrame: number | null;\n            _coreBrowserService: {\n                window: Window;\n            }\n        }\n\n        // Workaround for https://github.com/xtermjs/xterm.js/issues/4775. Can be removed for releases > 5.3.0\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const viewPort: ViewportType = (this.term as any)._core.viewport;\n        viewPort.register(Disposable.create(() => {\n            if (typeof viewPort._refreshAnimationFrame === 'number') {\n                viewPort._coreBrowserService.window.cancelAnimationFrame(viewPort._refreshAnimationFrame);\n            }\n        }));\n\n        if (isFirefox) {\n            // monkey patching intersection observer handling for secondary window support\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const renderService: any = (this.term as any)._core._renderService;\n\n            const originalFunc: (entry: IntersectionObserverEntry) => void = renderService._handleIntersectionChange.bind(renderService);\n            const replacement = function (entry: IntersectionObserverEntry): void {\n                if (entry.target.ownerDocument !== document) {\n                    // in Firefox, the intersection observer always reports the widget as non-intersecting if the dom element\n                    // is in a different document from when the IntersectionObserver started observing. Since we know\n                    // that the widget is always \"visible\" when in a secondary window, so we refresh the rows ourselves\n                    const patchedEvent: IntersectionObserverEntry = {\n                        ...entry,\n                        isIntersecting: true,\n                    };\n                    originalFunc(patchedEvent);\n                } else {\n                    originalFunc(entry);\n                }\n            };\n\n            renderService._handleIntersectionChange = replacement.bind(renderService);\n        }\n\n        if (this.initialData) {\n            this.term.write(this.initialData);\n        }\n        this.termOpened = true;\n        this.initialData = '';\n    }\n\n    write(data: string): void {\n        if (this.termOpened) {\n            this.term.write(data);\n            this.onOutputEmitter.fire(data);\n        } else {\n            this.initialData += data;\n        }\n    }\n\n    resize(cols: number, rows: number): void {\n        this.term.resize(cols, rows);\n    }\n\n    sendText(text: string): void {\n        if (this.waitForConnection) {\n            this.waitForConnection.promise.then(connection =>\n                connection.getWriteBuffer().writeString(text).commit()\n            );\n        }\n    }\n\n    async executeCommand(commandOptions: CommandLineOptions): Promise<void> {\n        this.sendText(this.shellCommandBuilder.buildCommand(await this.processInfo, commandOptions) + OS.backend.EOL);\n    }\n\n    scrollLineUp(): void {\n        this.term.scrollLines(-1);\n    }\n\n    scrollLineDown(): void {\n        this.term.scrollLines(1);\n    }\n\n    scrollToTop(): void {\n        this.term.scrollToTop();\n    }\n\n    scrollToBottom(): void {\n        this.term.scrollToBottom();\n    }\n\n    scrollPageUp(): void {\n        this.term.scrollPages(-1);\n    }\n\n    scrollPageDown(): void {\n        this.term.scrollPages(1);\n    }\n\n    resetTerminal(): void {\n        this.term.reset();\n    }\n\n    writeLine(text: string): void {\n        this.term.writeln(text);\n        this.onOutputEmitter.fire(text + '\\n');\n    }\n\n    get onTerminalDidClose(): Event<TerminalWidget> {\n        return this.onTermDidClose.event;\n    }\n\n    override dispose(): void {\n        if (this.closeOnDispose === true && typeof this.terminalId === 'number' && !this.exitStatus?.code) {\n            // Close the backend terminal only when explicitly closing the terminal\n            // a refresh for example won't close it.\n            this.shellTerminalServer.close(this.terminalId);\n            // Exit status is set when terminal is closed by user or by process, so most likely an extension closed it.\n            this.exitStatus = { code: undefined, reason: TerminalExitReason.Extension };\n        }\n        if (this.exitStatus) {\n            this.onTermDidClose.fire(this);\n        }\n        if (this.enhancedPreviewNode) {\n            // don't use preview node anymore. rendered markdown will be disposed on super call\n            this.enhancedPreviewNode = undefined;\n        }\n        this.styleElement?.remove();\n        super.dispose();\n    }\n\n    protected resizeTerminal = debounce(() => this.doResizeTerminal(), 50);\n\n    protected doResizeTerminal(): void {\n        if (this.isDisposed) {\n            return;\n        }\n        const geo = this.fitAddon.proposeDimensions();\n        if (geo) {\n            const cols = geo.cols;\n            const rows = geo.rows - 1; // subtract one row for margin\n            this.term.resize(cols, rows);\n\n            this.resizeTerminalProcess();\n        }\n    }\n\n    protected resizeTerminalProcess(): void {\n        if (this.options.isPseudoTerminal) {\n            return;\n        }\n        if (!IBaseTerminalServer.validateId(this.terminalId)\n            || this.exitStatus\n            || !this.terminalService.getById(this.id)\n        ) {\n            return;\n        }\n        const { cols, rows } = this.term;\n        this.shellTerminalServer.resize(this.terminalId, cols, rows);\n    }\n\n    protected get enableCopy(): boolean {\n        return this.preferences['terminal.enableCopy'];\n    }\n\n    protected get enablePaste(): boolean {\n        return this.preferences['terminal.enablePaste'];\n    }\n\n    protected get shellPreferences(): IShellTerminalPreferences {\n        return {\n            shell: {\n                Windows: this.preferences['terminal.integrated.shell.windows'] ?? undefined,\n                Linux: this.preferences['terminal.integrated.shell.linux'] ?? undefined,\n                OSX: this.preferences['terminal.integrated.shell.osx'] ?? undefined,\n            },\n            shellArgs: {\n                Windows: this.preferences['terminal.integrated.shellArgs.windows'],\n                Linux: this.preferences['terminal.integrated.shellArgs.linux'],\n                OSX: this.preferences['terminal.integrated.shellArgs.osx'],\n            }\n        };\n    }\n\n    protected customKeyHandler(event: KeyboardEvent): boolean {\n        const keyBindings = KeyCode.createKeyCode(event).toString();\n        const ctrlCmdCopy = (isOSX && keyBindings === 'meta+c') || (!isOSX && keyBindings === 'ctrl+c');\n        const ctrlCmdPaste = (isOSX && keyBindings === 'meta+v') || (!isOSX && keyBindings === 'ctrl+v');\n        if (ctrlCmdCopy && this.enableCopy && this.term.hasSelection()) {\n            return false;\n        }\n        if (ctrlCmdPaste && this.enablePaste) {\n            return false;\n        }\n        return true;\n    }\n\n    protected get copyOnSelection(): boolean {\n        return this.preferences['terminal.integrated.copyOnSelection'];\n    }\n\n    protected attachCustomKeyEventHandler(): void {\n        this.term.attachCustomKeyEventHandler(e => this.customKeyHandler(e));\n    }\n\n    setTitle(title: string): void {\n        this.title.caption = title;\n        this.title.label = title;\n    }\n\n    waitOnExit(waitOnExit?: boolean | string): void {\n        if (waitOnExit) {\n            if (typeof waitOnExit === 'string') {\n                let message = waitOnExit;\n                // Bold the message and add an extra new line to make it stand out from the rest of the output\n                message = `\\r\\n\\x1b[1m${message}\\x1b[0m`;\n                this.write(message);\n            }\n            this.attachPressEnterKeyToCloseListener(this.term);\n            return;\n        }\n        this.dispose();\n    }\n\n    private attachPressEnterKeyToCloseListener(term: Terminal): void {\n        if (term.textarea) {\n            this.isAttachedCloseListener = true;\n            this.addKeyListener(term.textarea, Key.ENTER, (event: KeyboardEvent) => {\n                this.dispose();\n                this.isAttachedCloseListener = false;\n            });\n        }\n    }\n\n    private disableEnterWhenAttachCloseListener(): boolean {\n        return this.isAttachedCloseListener;\n    }\n\n    getEnhancedPreviewNode(): Node | undefined {\n        if (this.enhancedPreviewNode) {\n            return this.enhancedPreviewNode;\n        }\n\n        this.enhancedPreviewNode = document.createElement('div');\n\n        Promise.all([this.envVarCollectionDescriptionsByExtension, this.processId, this.processInfo])\n            .then((values: [Map<string, (string | MarkdownString | undefined)[]>, number, TerminalProcessInfo]) => {\n                const extensions = values[0];\n                const processId = values[1];\n                const processInfo = values[2];\n\n                const markdown = new MarkdownStringImpl();\n                markdown.appendMarkdown('Process ID: ' + processId + '\\\\\\n');\n                markdown.appendMarkdown('Command line: ' +\n                    processInfo.executable +\n                    ' ' +\n                    processInfo.arguments.join(' ') +\n                    '\\n\\n---\\n\\n');\n                markdown.appendMarkdown('The following extensions have contributed to this terminal\\'s environment:\\n');\n                extensions.forEach((arr, key) => {\n                    arr.forEach(value => {\n                        if (value === undefined) {\n                            markdown.appendMarkdown('* ' + key + '\\n');\n                        } else if (typeof value === 'string') {\n                            markdown.appendMarkdown('* ' + key + ': ' + value + '\\n');\n                        } else {\n                            markdown.appendMarkdown('* ' + key + ': ' + value.value + '\\n');\n                        }\n                    });\n                });\n\n                const enhancedPreviewNode = this.enhancedPreviewNode;\n                if (!this.isDisposed && enhancedPreviewNode) {\n                    const result = this.markdownRenderer.render(markdown);\n                    this.toDispose.push(result);\n                    enhancedPreviewNode.appendChild(result.element);\n                }\n            });\n\n        return this.enhancedPreviewNode;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { RpcServer } from '@theia/core/lib/common/messaging/proxy-factory';\nimport { Disposable } from '@theia/core';\n\nexport interface TerminalProcessInfo {\n    executable: string\n    arguments: string[]\n}\n\nexport interface IBaseTerminalServerOptions { }\n\nexport interface IBaseTerminalServer extends RpcServer<IBaseTerminalClient> {\n    create(IBaseTerminalServerOptions: object): Promise<number>;\n    getProcessId(id: number): Promise<number>;\n    getProcessInfo(id: number): Promise<TerminalProcessInfo>;\n    getCwdURI(id: number): Promise<string>;\n    resize(id: number, cols: number, rows: number): Promise<void>;\n    attach(id: number): Promise<number>;\n    onAttachAttempted(id: number): Promise<void>;\n    close(id: number): Promise<void>;\n    getDefaultShell(): Promise<string>;\n}\nexport namespace IBaseTerminalServer {\n    export function validateId(id?: number): boolean {\n        return typeof id === 'number' && id !== -1;\n    }\n}\n\nexport interface IBaseTerminalExitEvent {\n    terminalId: number;\n\n    // Either code and reason will be set or signal.\n    code?: number;\n    reason?: TerminalExitReason;\n    signal?: string;\n\n    attached?: boolean;\n}\n\nexport enum TerminalExitReason {\n    Unknown = 0,\n    Shutdown = 1,\n    Process = 2,\n    User = 3,\n    Extension = 4,\n}\n\nexport interface IBaseTerminalErrorEvent {\n    terminalId: number;\n    error: Error;\n    attached?: boolean;\n}\n\nexport interface IBaseTerminalClient {\n    onTerminalExitChanged(event: IBaseTerminalExitEvent): void;\n    onTerminalError(event: IBaseTerminalErrorEvent): void;\n    updateTerminalEnvVariables(): void;\n    storeTerminalEnvVariables(data: string): void;\n}\n\nexport class DispatchingBaseTerminalClient {\n\n    protected readonly clients = new Set<IBaseTerminalClient>();\n\n    push(client: IBaseTerminalClient): Disposable {\n        this.clients.add(client);\n        return Disposable.create(() => this.clients.delete(client));\n    }\n\n    onTerminalExitChanged(event: IBaseTerminalExitEvent): void {\n        this.clients.forEach(c => {\n            try {\n                c.onTerminalExitChanged(event);\n            } catch (e) {\n                console.error(e);\n            }\n        });\n    }\n\n    onTerminalError(event: IBaseTerminalErrorEvent): void {\n\n        this.clients.forEach(c => {\n            try {\n                c.onTerminalError(event);\n            } catch (e) {\n                console.error(e);\n            }\n        });\n    }\n\n    updateTerminalEnvVariables(): void {\n        this.clients.forEach(c => {\n            try {\n                c.updateTerminalEnvVariables();\n            } catch (e) {\n                console.error(e);\n            }\n        });\n    }\n\n    storeTerminalEnvVariables(data: string): void {\n        this.clients.forEach(c => {\n            try {\n                c.storeTerminalEnvVariables(data);\n            } catch (e) {\n                console.error(e);\n            }\n        });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2025 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { OS } from '@theia/core';\nimport * as path from 'path';\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// code copied and modified from https://github.com/microsoft/vscode/blob/1.99.0/src/vs/platform/terminal/common/terminal.ts#L135-L155\n\nexport const enum GeneralShellType {\n    Bash = 'bash',\n    Csh = 'csh',\n    Fish = 'fish',\n    Julia = 'julia',\n    Ksh = 'ksh',\n    Node = 'node',\n    NuShell = 'nu',\n    PowerShell = 'pwsh',\n    Python = 'python',\n    Sh = 'sh',\n    Zsh = 'zsh',\n}\n\nexport const enum WindowsShellType {\n    CommandPrompt = 'cmd',\n    GitBash = 'gitbash',\n    Wsl = 'wsl'\n}\n\nexport type ShellType = GeneralShellType | WindowsShellType;\n\nexport const windowShellTypesToRegex: Map<string, RegExp> = new Map([\n    [WindowsShellType.CommandPrompt, /^cmd$/],\n    [WindowsShellType.GitBash, /^bash$/],\n    [WindowsShellType.Wsl, /^wsl$/]\n]);\n\nexport const shellTypesToRegex: Map<string, RegExp> = new Map([\n    [GeneralShellType.Bash, /^bash$/],\n    [GeneralShellType.Csh, /^csh$/],\n    [GeneralShellType.Fish, /^fish$/],\n    [GeneralShellType.Julia, /^julia$/],\n    [GeneralShellType.Ksh, /^ksh$/],\n    [GeneralShellType.Node, /^node$/],\n    [GeneralShellType.NuShell, /^nu$/],\n    [GeneralShellType.PowerShell, /^pwsh(-preview)?|powershell$/],\n    [GeneralShellType.Python, /^py(?:thon)?(?:\\d+)?$/],\n    [GeneralShellType.Sh, /^sh$/],\n    [GeneralShellType.Zsh, /^zsh$/]\n]);\n\nexport function guessShellTypeFromExecutable(executable: string | undefined): string | undefined {\n    if (!executable) {\n        return undefined;\n    }\n\n    if (OS.backend.isWindows) {\n        const windowsExecutableName = path.basename(executable, '.exe');\n        for (const [shellType, pattern] of windowShellTypesToRegex) {\n            if (windowsExecutableName.match(pattern)) {\n                return shellType;\n            }\n        }\n        // check also for generic ones as python\n        for (const [shellType, pattern] of shellTypesToRegex) {\n            if (windowsExecutableName.match(pattern)) {\n                return shellType;\n            }\n        }\n    }\n\n    const executableName = path.basename(executable);\n    for (const [shellType, pattern] of shellTypesToRegex) {\n        if (executableName.match(pattern)) {\n            return shellType;\n        }\n    }\n    return undefined;\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { IBaseTerminalServer, IBaseTerminalServerOptions } from './base-terminal-protocol';\n\nexport const ITerminalServer = Symbol('ITerminalServer');\n\nexport const terminalPath = '/services/terminal';\nexport const terminalsPath = '/services/terminals';\n\nexport interface ITerminalServer extends IBaseTerminalServer {\n    create(ITerminalServerOptions: object): Promise<number>;\n}\n\nexport interface ITerminalServerOptions extends IBaseTerminalServerOptions {\n    command: string,\n    args?: string[],\n    options?: object\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport {\n    IBaseTerminalClient,\n    IBaseTerminalExitEvent,\n    IBaseTerminalErrorEvent\n} from './base-terminal-protocol';\n\n@injectable()\nexport class TerminalWatcher {\n\n    getTerminalClient(): IBaseTerminalClient {\n        const exitEmitter = this.onTerminalExitEmitter;\n        const errorEmitter = this.onTerminalErrorEmitter;\n        const storeTerminalEnvVariablesEmitter = this.onStoreTerminalEnvVariablesRequestedEmitter;\n        const updateTerminalEnvVariablesEmitter = this.onUpdateTerminalEnvVariablesRequestedEmitter;\n        return {\n            storeTerminalEnvVariables(data: string): void {\n                storeTerminalEnvVariablesEmitter.fire(data);\n            },\n            updateTerminalEnvVariables(): void {\n                updateTerminalEnvVariablesEmitter.fire(undefined);\n            },\n            onTerminalExitChanged(event: IBaseTerminalExitEvent): void {\n                exitEmitter.fire(event);\n            },\n            onTerminalError(event: IBaseTerminalErrorEvent): void {\n                errorEmitter.fire(event);\n            }\n        };\n    }\n\n    private onTerminalExitEmitter = new Emitter<IBaseTerminalExitEvent>();\n    private onTerminalErrorEmitter = new Emitter<IBaseTerminalErrorEvent>();\n    private onStoreTerminalEnvVariablesRequestedEmitter = new Emitter<string>();\n    private onUpdateTerminalEnvVariablesRequestedEmitter = new Emitter<undefined>();\n\n    get onTerminalExit(): Event<IBaseTerminalExitEvent> {\n        return this.onTerminalExitEmitter.event;\n    }\n\n    get onTerminalError(): Event<IBaseTerminalErrorEvent> {\n        return this.onTerminalErrorEmitter.event;\n    }\n\n    get onStoreTerminalEnvVariablesRequested(): Event<string> {\n        return this.onStoreTerminalEnvVariablesRequestedEmitter.event;\n    }\n\n    get onUpdateTerminalEnvVariablesRequested(): Event<undefined> {\n        return this.onUpdateTerminalEnvVariablesRequestedEmitter.event;\n    }\n}\n","import api from \"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../css-loader/dist/cjs.js!./terminal-search.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/********************************************************************************\n * Copyright (C) 2019 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.theia-search-terminal-widget-parent {\n  background: var(--theia-sideBar-background);\n  position: absolute;\n  margin: 0px;\n  border: var(--theia-border-width) solid transparent;\n  padding: 0px;\n  top: 1px;\n  right: 19px;\n\n  z-index: 10;\n}\n\n.theia-search-terminal-widget-parent .theia-search-elem-box {\n  display: flex;\n  margin: 0px;\n  border: var(--theia-border-width) solid transparent;\n  padding: 0px;\n  align-items: center;\n  color: var(--theia-input-foreground);\n  background: var(--theia-input-background);\n}\n\n.theia-search-terminal-widget-parent .theia-search-elem-box input {\n  margin-left: 5px;\n  padding: 0px;\n  width: 100px;\n  height: 18px;\n  color: inherit;\n  background-color: inherit;\n  border: var(--theia-border-width) solid transparent;\n  outline: none;\n}\n\n.theia-search-terminal-widget-parent\n  .theia-search-elem-box\n  .search-elem.codicon {\n  height: 16px;\n  width: 18px;\n}\n\n.theia-search-terminal-widget-parent .search-elem.codicon {\n  border: var(--theia-border-width) solid transparent;\n  height: 20px;\n  width: 20px;\n  opacity: 0.7;\n  outline: none;\n  color: var(--theia-input-foreground);\n  padding: 0px;\n  margin-left: 3px;\n}\n\n.theia-search-terminal-widget-parent .search-elem:hover {\n  opacity: 1;\n}\n\n.theia-search-terminal-widget-parent .theia-search-elem-box.focused {\n  border: var(--theia-border-width) solid var(--theia-focusBorder);\n}\n\n.theia-search-terminal-widget-parent\n  .theia-search-elem-box\n  .search-elem.option-enabled {\n  border: var(--theia-border-width) solid var(--theia-inputOption-activeBorder);\n  background-color: var(--theia-inputOption-activeBackground);\n}\n\n.theia-search-terminal-widget-parent .theia-search-terminal-widget {\n  margin: 2px;\n  display: flex;\n  align-items: center;\n  font: var(--theia-content-font-size);\n  color: var(--theia-input-foreground);\n}\n\n.theia-search-terminal-widget-parent .theia-search-terminal-widget button {\n  background-color: transparent;\n}\n\n.theia-search-terminal-widget-parent\n  .theia-search-terminal-widget\n  button:focus {\n  border: var(--theia-border-width) var(--theia-focusBorder) solid;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@theia/terminal/src/browser/style/terminal-search.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;EACE,2CAA2C;EAC3C,kBAAkB;EAClB,WAAW;EACX,mDAAmD;EACnD,YAAY;EACZ,QAAQ;EACR,WAAW;;EAEX,WAAW;AACb;;AAEA;EACE,aAAa;EACb,WAAW;EACX,mDAAmD;EACnD,YAAY;EACZ,mBAAmB;EACnB,oCAAoC;EACpC,yCAAyC;AAC3C;;AAEA;EACE,gBAAgB;EAChB,YAAY;EACZ,YAAY;EACZ,YAAY;EACZ,cAAc;EACd,yBAAyB;EACzB,mDAAmD;EACnD,aAAa;AACf;;AAEA;;;EAGE,YAAY;EACZ,WAAW;AACb;;AAEA;EACE,mDAAmD;EACnD,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,aAAa;EACb,oCAAoC;EACpC,YAAY;EACZ,gBAAgB;AAClB;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,gEAAgE;AAClE;;AAEA;;;EAGE,6EAA6E;EAC7E,2DAA2D;AAC7D;;AAEA;EACE,WAAW;EACX,aAAa;EACb,mBAAmB;EACnB,oCAAoC;EACpC,oCAAoC;AACtC;;AAEA;EACE,6BAA6B;AAC/B;;AAEA;;;EAGE,gEAAgE;AAClE\",\"sourcesContent\":[\"/********************************************************************************\\n * Copyright (C) 2019 Red Hat, Inc. and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-search-terminal-widget-parent {\\n  background: var(--theia-sideBar-background);\\n  position: absolute;\\n  margin: 0px;\\n  border: var(--theia-border-width) solid transparent;\\n  padding: 0px;\\n  top: 1px;\\n  right: 19px;\\n\\n  z-index: 10;\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box {\\n  display: flex;\\n  margin: 0px;\\n  border: var(--theia-border-width) solid transparent;\\n  padding: 0px;\\n  align-items: center;\\n  color: var(--theia-input-foreground);\\n  background: var(--theia-input-background);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box input {\\n  margin-left: 5px;\\n  padding: 0px;\\n  width: 100px;\\n  height: 18px;\\n  color: inherit;\\n  background-color: inherit;\\n  border: var(--theia-border-width) solid transparent;\\n  outline: none;\\n}\\n\\n.theia-search-terminal-widget-parent\\n  .theia-search-elem-box\\n  .search-elem.codicon {\\n  height: 16px;\\n  width: 18px;\\n}\\n\\n.theia-search-terminal-widget-parent .search-elem.codicon {\\n  border: var(--theia-border-width) solid transparent;\\n  height: 20px;\\n  width: 20px;\\n  opacity: 0.7;\\n  outline: none;\\n  color: var(--theia-input-foreground);\\n  padding: 0px;\\n  margin-left: 3px;\\n}\\n\\n.theia-search-terminal-widget-parent .search-elem:hover {\\n  opacity: 1;\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box.focused {\\n  border: var(--theia-border-width) solid var(--theia-focusBorder);\\n}\\n\\n.theia-search-terminal-widget-parent\\n  .theia-search-elem-box\\n  .search-elem.option-enabled {\\n  border: var(--theia-border-width) solid var(--theia-inputOption-activeBorder);\\n  background-color: var(--theia-inputOption-activeBackground);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-terminal-widget {\\n  margin: 2px;\\n  display: flex;\\n  align-items: center;\\n  font: var(--theia-content-font-size);\\n  color: var(--theia-input-foreground);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-terminal-widget button {\\n  background-color: transparent;\\n}\\n\\n.theia-search-terminal-widget-parent\\n  .theia-search-terminal-widget\\n  button:focus {\\n  border: var(--theia-border-width) var(--theia-focusBorder) solid;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SearchAddon\"] = factory();\n\telse\n\t\troot[\"SearchAddon\"] = factory();\n})(self, () => {\nreturn ","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    this.clearListeners();\n    this._disposed = true;\n  }\n\n  public clearListeners(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n  private _value?: T;\n  private _isDisposed = false;\n\n  /**\n   * Gets the value if it exists.\n   */\n  public get value(): T | undefined {\n    return this._isDisposed ? undefined : this._value;\n  }\n\n  /**\n   * Sets the value, disposing of the old value if it exists.\n   */\n  public set value(value: T | undefined) {\n    if (this._isDisposed || value === this._value) {\n      return;\n    }\n    this._value?.dispose();\n    this._value = value;\n  }\n\n  /**\n   * Resets the stored value and disposes of the previously stored value.\n   */\n  public clear(): void {\n    this.value = undefined;\n  }\n\n  public dispose(): void {\n    this._isDisposed = true;\n    this._value?.dispose();\n    this._value = undefined;\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, IDisposable, ITerminalAddon, IDecoration } from 'xterm';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable, disposeArray, MutableDisposable } from 'common/Lifecycle';\n\nexport interface ISearchOptions {\n  regex?: boolean;\n  wholeWord?: boolean;\n  caseSensitive?: boolean;\n  incremental?: boolean;\n  decorations?: ISearchDecorationOptions;\n  noScroll?: boolean;\n}\n\ninterface ISearchDecorationOptions {\n  matchBackground?: string;\n  matchBorder?: string;\n  matchOverviewRuler: string;\n  activeMatchBackground?: string;\n  activeMatchBorder?: string;\n  activeMatchColorOverviewRuler: string;\n}\n\nexport interface ISearchPosition {\n  startCol: number;\n  startRow: number;\n}\n\nexport interface ISearchAddonOptions {\n  highlightLimit: number;\n}\n\nexport interface ISearchResult {\n  term: string;\n  col: number;\n  row: number;\n  size: number;\n}\n\ntype LineCacheEntry = [\n  /**\n   * The string representation of a line (as opposed to the buffer cell representation).\n   */\n  lineAsString: string,\n  /**\n   * The offsets where each line starts when the entry describes a wrapped line.\n   */\n  lineOffsets: number[]\n];\n\ninterface IHighlight extends IDisposable {\n  decoration: IDecoration;\n  match: ISearchResult;\n}\n\nconst NON_WORD_CHARACTERS = ' ~!@#$%^&*()+`-=[]{}|\\\\;:\"\\',./<>?';\nconst LINES_CACHE_TIME_TO_LIVE = 15 * 1000; // 15 secs\nconst DEFAULT_HIGHLIGHT_LIMIT = 1000;\n\nexport class SearchAddon extends Disposable implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n  private _cachedSearchTerm: string | undefined;\n  private _highlightedLines: Set<number> = new Set();\n  private _highlightDecorations: IHighlight[] = [];\n  private _selectedDecoration: MutableDisposable<IHighlight> = this.register(new MutableDisposable());\n  private _highlightLimit: number;\n  private _lastSearchOptions: ISearchOptions | undefined;\n  private _highlightTimeout: number | undefined;\n  /**\n   * translateBufferLineToStringWithWrap is a fairly expensive call.\n   * We memoize the calls into an array that has a time based ttl.\n   * _linesCache is also invalidated when the terminal cursor moves.\n   */\n  private _linesCache: LineCacheEntry[] | undefined;\n  private _linesCacheTimeoutId = 0;\n  private _cursorMoveListener: IDisposable | undefined;\n  private _resizeListener: IDisposable | undefined;\n\n  private readonly _onDidChangeResults = this.register(new EventEmitter<{ resultIndex: number, resultCount: number }>());\n  public readonly onDidChangeResults = this._onDidChangeResults.event;\n\n  constructor(options?: Partial<ISearchAddonOptions>) {\n    super();\n\n    this._highlightLimit = options?.highlightLimit ?? DEFAULT_HIGHLIGHT_LIMIT;\n  }\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n    this.register(this._terminal.onWriteParsed(() => this._updateMatches()));\n    this.register(this._terminal.onResize(() => this._updateMatches()));\n    this.register(toDisposable(() => this.clearDecorations()));\n  }\n\n  private _updateMatches(): void {\n    if (this._highlightTimeout) {\n      window.clearTimeout(this._highlightTimeout);\n    }\n    if (this._cachedSearchTerm && this._lastSearchOptions?.decorations) {\n      this._highlightTimeout = setTimeout(() => {\n        const term = this._cachedSearchTerm;\n        this._cachedSearchTerm = undefined;\n        this.findPrevious(term!, { ...this._lastSearchOptions, incremental: true, noScroll: true });\n      }, 200);\n    }\n  }\n\n  public clearDecorations(retainCachedSearchTerm?: boolean): void {\n    this._selectedDecoration.clear();\n    disposeArray(this._highlightDecorations);\n    this._highlightDecorations = [];\n    this._highlightedLines.clear();\n    if (!retainCachedSearchTerm) {\n      this._cachedSearchTerm = undefined;\n    }\n  }\n\n  /**\n   * Find the next instance of the term, then scroll to and select it. If it\n   * doesn't exist, do nothing.\n   * @param term The search term.\n   * @param searchOptions Search options.\n   * @returns Whether a result was found.\n   */\n  public findNext(term: string, searchOptions?: ISearchOptions): boolean {\n    if (!this._terminal) {\n      throw new Error('Cannot use addon until it has been loaded');\n    }\n    this._lastSearchOptions = searchOptions;\n    if (searchOptions?.decorations) {\n      if (this._cachedSearchTerm === undefined || term !== this._cachedSearchTerm) {\n        this._highlightAllMatches(term, searchOptions);\n      }\n    }\n\n    const found = this._findNextAndSelect(term, searchOptions);\n    this._fireResults(searchOptions);\n    this._cachedSearchTerm = term;\n\n    return found;\n  }\n\n  private _highlightAllMatches(term: string, searchOptions: ISearchOptions): void {\n    if (!this._terminal) {\n      throw new Error('Cannot use addon until it has been loaded');\n    }\n    if (!term || term.length === 0) {\n      this.clearDecorations();\n      return;\n    }\n    searchOptions = searchOptions || {};\n\n    // new search, clear out the old decorations\n    this.clearDecorations(true);\n\n    const searchResultsWithHighlight: ISearchResult[] = [];\n    let prevResult: ISearchResult | undefined = undefined;\n    let result = this._find(term, 0, 0, searchOptions);\n    while (result && (prevResult?.row !== result.row || prevResult?.col !== result.col)) {\n      if (searchResultsWithHighlight.length >= this._highlightLimit) {\n        break;\n      }\n      prevResult = result;\n      searchResultsWithHighlight.push(prevResult);\n      result = this._find(\n        term,\n        prevResult.col + prevResult.term.length >= this._terminal.cols ? prevResult.row + 1 : prevResult.row,\n        prevResult.col + prevResult.term.length >= this._terminal.cols ? 0 : prevResult.col + 1,\n        searchOptions\n      );\n    }\n    for (const match of searchResultsWithHighlight) {\n      const decoration = this._createResultDecoration(match, searchOptions.decorations!);\n      if (decoration) {\n        this._highlightedLines.add(decoration.marker.line);\n        this._highlightDecorations.push({ decoration, match, dispose() { decoration.dispose(); } });\n      }\n    }\n  }\n\n  private _find(term: string, startRow: number, startCol: number, searchOptions?: ISearchOptions): ISearchResult | undefined {\n    if (!this._terminal || !term || term.length === 0) {\n      this._terminal?.clearSelection();\n      this.clearDecorations();\n      return undefined;\n    }\n    if (startCol > this._terminal.cols) {\n      throw new Error(`Invalid col: ${startCol} to search in terminal of ${this._terminal.cols} cols`);\n    }\n\n    let result: ISearchResult | undefined = undefined;\n\n    this._initLinesCache();\n\n    const searchPosition: ISearchPosition = {\n      startRow,\n      startCol\n    };\n\n    // Search startRow\n    result = this._findInLine(term, searchPosition, searchOptions);\n    // Search from startRow + 1 to end\n    if (!result) {\n\n      for (let y = startRow + 1; y < this._terminal.buffer.active.baseY + this._terminal.rows; y++) {\n        searchPosition.startRow = y;\n        searchPosition.startCol = 0;\n        // If the current line is wrapped line, increase index of column to ignore the previous scan\n        // Otherwise, reset beginning column index to zero with set new unwrapped line index\n        result = this._findInLine(term, searchPosition, searchOptions);\n        if (result) {\n          break;\n        }\n      }\n    }\n    return result;\n  }\n\n  private _findNextAndSelect(term: string, searchOptions?: ISearchOptions): boolean {\n    if (!this._terminal || !term || term.length === 0) {\n      this._terminal?.clearSelection();\n      this.clearDecorations();\n      return false;\n    }\n\n    const prevSelectedPos = this._terminal.getSelectionPosition();\n    this._terminal.clearSelection();\n\n    let startCol = 0;\n    let startRow = 0;\n    if (prevSelectedPos) {\n      if (this._cachedSearchTerm === term) {\n        startCol = prevSelectedPos.end.x;\n        startRow = prevSelectedPos.end.y;\n      } else {\n        startCol = prevSelectedPos.start.x;\n        startRow = prevSelectedPos.start.y;\n      }\n    }\n\n    this._initLinesCache();\n\n    const searchPosition: ISearchPosition = {\n      startRow,\n      startCol\n    };\n\n    // Search startRow\n    let result = this._findInLine(term, searchPosition, searchOptions);\n    // Search from startRow + 1 to end\n    if (!result) {\n\n      for (let y = startRow + 1; y < this._terminal.buffer.active.baseY + this._terminal.rows; y++) {\n        searchPosition.startRow = y;\n        searchPosition.startCol = 0;\n        // If the current line is wrapped line, increase index of column to ignore the previous scan\n        // Otherwise, reset beginning column index to zero with set new unwrapped line index\n        result = this._findInLine(term, searchPosition, searchOptions);\n        if (result) {\n          break;\n        }\n      }\n    }\n    // If we hit the bottom and didn't search from the very top wrap back up\n    if (!result && startRow !== 0) {\n      for (let y = 0; y < startRow; y++) {\n        searchPosition.startRow = y;\n        searchPosition.startCol = 0;\n        result = this._findInLine(term, searchPosition, searchOptions);\n        if (result) {\n          break;\n        }\n      }\n    }\n\n    // If there is only one result, wrap back and return selection if it exists.\n    if (!result && prevSelectedPos) {\n      searchPosition.startRow = prevSelectedPos.start.y;\n      searchPosition.startCol = 0;\n      result = this._findInLine(term, searchPosition, searchOptions);\n    }\n\n    // Set selection and scroll if a result was found\n    return this._selectResult(result, searchOptions?.decorations, searchOptions?.noScroll);\n  }\n  /**\n   * Find the previous instance of the term, then scroll to and select it. If it\n   * doesn't exist, do nothing.\n   * @param term The search term.\n   * @param searchOptions Search options.\n   * @returns Whether a result was found.\n   */\n  public findPrevious(term: string, searchOptions?: ISearchOptions): boolean {\n    if (!this._terminal) {\n      throw new Error('Cannot use addon until it has been loaded');\n    }\n    this._lastSearchOptions = searchOptions;\n    if (searchOptions?.decorations) {\n      if (this._cachedSearchTerm === undefined || term !== this._cachedSearchTerm) {\n        this._highlightAllMatches(term, searchOptions);\n      }\n    }\n\n    const found = this._findPreviousAndSelect(term, searchOptions);\n    this._fireResults(searchOptions);\n    this._cachedSearchTerm = term;\n\n    return found;\n  }\n\n  private _fireResults(searchOptions?: ISearchOptions): void {\n    if (searchOptions?.decorations) {\n      let resultIndex = -1;\n      if (this._selectedDecoration.value) {\n        const selectedMatch = this._selectedDecoration.value.match;\n        for (let i = 0; i < this._highlightDecorations.length; i++) {\n          const match = this._highlightDecorations[i].match;\n          if (match.row === selectedMatch.row && match.col === selectedMatch.col && match.size === selectedMatch.size) {\n            resultIndex = i;\n            break;\n          }\n        }\n      }\n      this._onDidChangeResults.fire({ resultIndex, resultCount: this._highlightDecorations.length });\n    }\n  }\n\n  private _findPreviousAndSelect(term: string, searchOptions?: ISearchOptions): boolean {\n    if (!this._terminal) {\n      throw new Error('Cannot use addon until it has been loaded');\n    }\n    if (!this._terminal || !term || term.length === 0) {\n      this._terminal?.clearSelection();\n      this.clearDecorations();\n      return false;\n    }\n\n    const prevSelectedPos = this._terminal.getSelectionPosition();\n    this._terminal.clearSelection();\n\n    let startRow = this._terminal.buffer.active.baseY + this._terminal.rows - 1;\n    let startCol = this._terminal.cols;\n    const isReverseSearch = true;\n\n    this._initLinesCache();\n    const searchPosition: ISearchPosition = {\n      startRow,\n      startCol\n    };\n\n    let result: ISearchResult | undefined;\n    if (prevSelectedPos) {\n      searchPosition.startRow = startRow = prevSelectedPos.start.y;\n      searchPosition.startCol = startCol = prevSelectedPos.start.x;\n      if (this._cachedSearchTerm !== term) {\n        // Try to expand selection to right first.\n        result = this._findInLine(term, searchPosition, searchOptions, false);\n        if (!result) {\n          // If selection was not able to be expanded to the right, then try reverse search\n          searchPosition.startRow = startRow = prevSelectedPos.end.y;\n          searchPosition.startCol = startCol = prevSelectedPos.end.x;\n        }\n      }\n    }\n\n    if (!result) {\n      result = this._findInLine(term, searchPosition, searchOptions, isReverseSearch);\n    }\n\n    // Search from startRow - 1 to top\n    if (!result) {\n      searchPosition.startCol = Math.max(searchPosition.startCol, this._terminal.cols);\n      for (let y = startRow - 1; y >= 0; y--) {\n        searchPosition.startRow = y;\n        result = this._findInLine(term, searchPosition, searchOptions, isReverseSearch);\n        if (result) {\n          break;\n        }\n      }\n    }\n    // If we hit the top and didn't search from the very bottom wrap back down\n    if (!result && startRow !== (this._terminal.buffer.active.baseY + this._terminal.rows - 1)) {\n      for (let y = (this._terminal.buffer.active.baseY + this._terminal.rows - 1); y >= startRow; y--) {\n        searchPosition.startRow = y;\n        result = this._findInLine(term, searchPosition, searchOptions, isReverseSearch);\n        if (result) {\n          break;\n        }\n      }\n    }\n\n    // Set selection and scroll if a result was found\n    return this._selectResult(result, searchOptions?.decorations, searchOptions?.noScroll);\n  }\n\n  /**\n   * Sets up a line cache with a ttl\n   */\n  private _initLinesCache(): void {\n    const terminal = this._terminal!;\n    if (!this._linesCache) {\n      this._linesCache = new Array(terminal.buffer.active.length);\n      this._cursorMoveListener = terminal.onCursorMove(() => this._destroyLinesCache());\n      this._resizeListener = terminal.onResize(() => this._destroyLinesCache());\n    }\n\n    window.clearTimeout(this._linesCacheTimeoutId);\n    this._linesCacheTimeoutId = window.setTimeout(() => this._destroyLinesCache(), LINES_CACHE_TIME_TO_LIVE);\n  }\n\n  private _destroyLinesCache(): void {\n    this._linesCache = undefined;\n    if (this._cursorMoveListener) {\n      this._cursorMoveListener.dispose();\n      this._cursorMoveListener = undefined;\n    }\n    if (this._resizeListener) {\n      this._resizeListener.dispose();\n      this._resizeListener = undefined;\n    }\n    if (this._linesCacheTimeoutId) {\n      window.clearTimeout(this._linesCacheTimeoutId);\n      this._linesCacheTimeoutId = 0;\n    }\n  }\n\n  /**\n   * A found substring is a whole word if it doesn't have an alphanumeric character directly\n   * adjacent to it.\n   * @param searchIndex starting indext of the potential whole word substring\n   * @param line entire string in which the potential whole word was found\n   * @param term the substring that starts at searchIndex\n   */\n  private _isWholeWord(searchIndex: number, line: string, term: string): boolean {\n    return ((searchIndex === 0) || (NON_WORD_CHARACTERS.includes(line[searchIndex - 1]))) &&\n      (((searchIndex + term.length) === line.length) || (NON_WORD_CHARACTERS.includes(line[searchIndex + term.length])));\n  }\n\n  /**\n   * Searches a line for a search term. Takes the provided terminal line and searches the text line,\n   * which may contain subsequent terminal lines if the text is wrapped. If the provided line number\n   * is part of a wrapped text line that started on an earlier line then it is skipped since it will\n   * be properly searched when the terminal line that the text starts on is searched.\n   * @param term The search term.\n   * @param searchPosition The position to start the search.\n   * @param searchOptions Search options.\n   * @param isReverseSearch Whether the search should start from the right side of the terminal and\n   * search to the left.\n   * @returns The search result if it was found.\n   */\n  protected _findInLine(term: string, searchPosition: ISearchPosition, searchOptions: ISearchOptions = {}, isReverseSearch: boolean = false): ISearchResult | undefined {\n    const terminal = this._terminal!;\n    const row = searchPosition.startRow;\n    const col = searchPosition.startCol;\n\n    // Ignore wrapped lines, only consider on unwrapped line (first row of command string).\n    const firstLine = terminal.buffer.active.getLine(row);\n    if (firstLine?.isWrapped) {\n      if (isReverseSearch) {\n        searchPosition.startCol += terminal.cols;\n        return;\n      }\n\n      // This will iterate until we find the line start.\n      // When we find it, we will search using the calculated start column.\n      searchPosition.startRow--;\n      searchPosition.startCol += terminal.cols;\n      return this._findInLine(term, searchPosition, searchOptions);\n    }\n    let cache = this._linesCache?.[row];\n    if (!cache) {\n      cache = this._translateBufferLineToStringWithWrap(row, true);\n      if (this._linesCache) {\n        this._linesCache[row] = cache;\n      }\n    }\n    const [stringLine, offsets] = cache;\n\n    const offset = this._bufferColsToStringOffset(row, col);\n    const searchTerm = searchOptions.caseSensitive ? term : term.toLowerCase();\n    const searchStringLine = searchOptions.caseSensitive ? stringLine : stringLine.toLowerCase();\n\n    let resultIndex = -1;\n    if (searchOptions.regex) {\n      const searchRegex = RegExp(searchTerm, 'g');\n      let foundTerm: RegExpExecArray | null;\n      if (isReverseSearch) {\n        // This loop will get the resultIndex of the _last_ regex match in the range 0..offset\n        while (foundTerm = searchRegex.exec(searchStringLine.slice(0, offset))) {\n          resultIndex = searchRegex.lastIndex - foundTerm[0].length;\n          term = foundTerm[0];\n          searchRegex.lastIndex -= (term.length - 1);\n        }\n      } else {\n        foundTerm = searchRegex.exec(searchStringLine.slice(offset));\n        if (foundTerm && foundTerm[0].length > 0) {\n          resultIndex = offset + (searchRegex.lastIndex - foundTerm[0].length);\n          term = foundTerm[0];\n        }\n      }\n    } else {\n      if (isReverseSearch) {\n        if (offset - searchTerm.length >= 0) {\n          resultIndex = searchStringLine.lastIndexOf(searchTerm, offset - searchTerm.length);\n        }\n      } else {\n        resultIndex = searchStringLine.indexOf(searchTerm, offset);\n      }\n    }\n\n    if (resultIndex >= 0) {\n      if (searchOptions.wholeWord && !this._isWholeWord(resultIndex, searchStringLine, term)) {\n        return;\n      }\n\n      // Adjust the row number and search index if needed since a \"line\" of text can span multiple\n      // rows\n      let startRowOffset = 0;\n      while (startRowOffset < offsets.length - 1 && resultIndex >= offsets[startRowOffset + 1]) {\n        startRowOffset++;\n      }\n      let endRowOffset = startRowOffset;\n      while (endRowOffset < offsets.length - 1 && resultIndex + term.length >= offsets[endRowOffset + 1]) {\n        endRowOffset++;\n      }\n      const startColOffset = resultIndex - offsets[startRowOffset];\n      const endColOffset = resultIndex + term.length - offsets[endRowOffset];\n      const startColIndex = this._stringLengthToBufferSize(row + startRowOffset, startColOffset);\n      const endColIndex = this._stringLengthToBufferSize(row + endRowOffset, endColOffset);\n      const size = endColIndex - startColIndex + terminal.cols * (endRowOffset - startRowOffset);\n\n      return {\n        term,\n        col: startColIndex,\n        row: row + startRowOffset,\n        size\n      };\n    }\n  }\n\n  private _stringLengthToBufferSize(row: number, offset: number): number {\n    const line = this._terminal!.buffer.active.getLine(row);\n    if (!line) {\n      return 0;\n    }\n    for (let i = 0; i < offset; i++) {\n      const cell = line.getCell(i);\n      if (!cell) {\n        break;\n      }\n      // Adjust the searchIndex to normalize emoji into single chars\n      const char = cell.getChars();\n      if (char.length > 1) {\n        offset -= char.length - 1;\n      }\n      // Adjust the searchIndex for empty characters following wide unicode\n      // chars (eg. CJK)\n      const nextCell = line.getCell(i + 1);\n      if (nextCell && nextCell.getWidth() === 0) {\n        offset++;\n      }\n    }\n    return offset;\n  }\n\n  private _bufferColsToStringOffset(startRow: number, cols: number): number {\n    const terminal = this._terminal!;\n    let lineIndex = startRow;\n    let offset = 0;\n    let line = terminal.buffer.active.getLine(lineIndex);\n    while (cols > 0 && line) {\n      for (let i = 0; i < cols && i < terminal.cols; i++) {\n        const cell = line.getCell(i);\n        if (!cell) {\n          break;\n        }\n        if (cell.getWidth()) {\n          // Treat null characters as whitespace to align with the translateToString API\n          offset += cell.getCode() === 0 ? 1 : cell.getChars().length;\n        }\n      }\n      lineIndex++;\n      line = terminal.buffer.active.getLine(lineIndex);\n      if (line && !line.isWrapped) {\n        break;\n      }\n      cols -= terminal.cols;\n    }\n    return offset;\n  }\n\n  /**\n   * Translates a buffer line to a string, including subsequent lines if they are wraps.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param lineIndex The index of the line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   */\n  private _translateBufferLineToStringWithWrap(lineIndex: number, trimRight: boolean): LineCacheEntry {\n    const terminal = this._terminal!;\n    const strings = [];\n    const lineOffsets = [0];\n    let line = terminal.buffer.active.getLine(lineIndex);\n    while (line) {\n      const nextLine = terminal.buffer.active.getLine(lineIndex + 1);\n      const lineWrapsToNext = nextLine ? nextLine.isWrapped : false;\n      let string = line.translateToString(!lineWrapsToNext && trimRight);\n      if (lineWrapsToNext && nextLine) {\n        const lastCell = line.getCell(line.length - 1);\n        const lastCellIsNull = lastCell && lastCell.getCode() === 0 && lastCell.getWidth() === 1;\n        // a wide character wrapped to the next line\n        if (lastCellIsNull && nextLine.getCell(0)?.getWidth() === 2) {\n          string = string.slice(0, -1);\n        }\n      }\n      strings.push(string);\n      if (lineWrapsToNext) {\n        lineOffsets.push(lineOffsets[lineOffsets.length - 1] + string.length);\n      } else {\n        break;\n      }\n      lineIndex++;\n      line = nextLine;\n    }\n    return [strings.join(''), lineOffsets];\n  }\n\n  /**\n   * Selects and scrolls to a result.\n   * @param result The result to select.\n   * @returns Whether a result was selected.\n   */\n  private _selectResult(result: ISearchResult | undefined, options?: ISearchDecorationOptions, noScroll?: boolean): boolean {\n    const terminal = this._terminal!;\n    this._selectedDecoration.clear();\n    if (!result) {\n      terminal.clearSelection();\n      return false;\n    }\n    terminal.select(result.col, result.row, result.size);\n    if (options) {\n      const marker = terminal.registerMarker(-terminal.buffer.active.baseY - terminal.buffer.active.cursorY + result.row);\n      if (marker) {\n        const decoration = terminal.registerDecoration({\n          marker,\n          x: result.col,\n          width: result.size,\n          backgroundColor: options.activeMatchBackground,\n          layer: 'top',\n          overviewRulerOptions: {\n            color: options.activeMatchColorOverviewRuler\n          }\n        });\n        if (decoration) {\n          const disposables: IDisposable[] = [];\n          disposables.push(marker);\n          disposables.push(decoration.onRender((e) => this._applyStyles(e, options.activeMatchBorder, true)));\n          disposables.push(decoration.onDispose(() => disposeArray(disposables)));\n          this._selectedDecoration.value = { decoration, match: result, dispose() { decoration.dispose(); } };\n        }\n      }\n    }\n\n    if (!noScroll) {\n      // If it is not in the viewport then we scroll else it just gets selected\n      if (result.row >= (terminal.buffer.active.viewportY + terminal.rows) || result.row < terminal.buffer.active.viewportY) {\n        let scroll = result.row - terminal.buffer.active.viewportY;\n        scroll -= Math.floor(terminal.rows / 2);\n        terminal.scrollLines(scroll);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Applies styles to the decoration when it is rendered.\n   * @param element The decoration's element.\n   * @param borderColor The border color to apply.\n   * @param isActiveResult Whether the element is part of the active search result.\n   * @returns\n   */\n  private _applyStyles(element: HTMLElement, borderColor: string | undefined, isActiveResult: boolean): void {\n    if (!element.classList.contains('xterm-find-result-decoration')) {\n      element.classList.add('xterm-find-result-decoration');\n      if (borderColor) {\n        element.style.outline = `1px solid ${borderColor}`;\n      }\n    }\n    if (isActiveResult) {\n      element.classList.add('xterm-find-active-result-decoration');\n    }\n  }\n\n  /**\n   * Creates a decoration for the result and applies styles\n   * @param result the search result for which to create the decoration\n   * @param options the options for the decoration\n   * @returns the {@link IDecoration} or undefined if the marker has already been disposed of\n   */\n  private _createResultDecoration(result: ISearchResult, options: ISearchDecorationOptions): IDecoration | undefined {\n    const terminal = this._terminal!;\n    const marker = terminal.registerMarker(-terminal.buffer.active.baseY - terminal.buffer.active.cursorY + result.row);\n    if (!marker) {\n      return undefined;\n    }\n    const findResultDecoration = terminal.registerDecoration({\n      marker,\n      x: result.col,\n      width: result.size,\n      backgroundColor: options.matchBackground,\n      overviewRulerOptions: this._highlightedLines.has(marker.line) ? undefined : {\n        color: options.matchOverviewRuler,\n        position: 'center'\n      }\n    });\n    if (findResultDecoration) {\n      const disposables: IDisposable[] = [];\n      disposables.push(marker);\n      disposables.push(findResultDecoration.onRender((e) => this._applyStyles(e, options.matchBorder, false)));\n      disposables.push(findResultDecoration.onDispose(() => disposeArray(disposables)));\n    }\n    return findResultDecoration;\n  }\n}\n"],"names":["root","factory","exports","module","define","amd","self","_listeners","_disposed","event","this","_event","listener","push","dispose","i","length","splice","fire","arg1","arg2","queue","call","undefined","clearListeners","from","to","e","disposeArray","disposables","d","_disposables","_isDisposed","register","unregister","index","indexOf","value","_value","clear","f","array","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","NON_WORD_CHARACTERS","SearchAddon","Disposable","constructor","options","super","_highlightedLines","Set","_highlightDecorations","_selectedDecoration","MutableDisposable","_linesCacheTimeoutId","_onDidChangeResults","EventEmitter","onDidChangeResults","_highlightLimit","highlightLimit","activate","terminal","_terminal","onWriteParsed","_updateMatches","onResize","toDisposable","clearDecorations","_highlightTimeout","window","clearTimeout","_cachedSearchTerm","_lastSearchOptions","decorations","setTimeout","term","findPrevious","incremental","noScroll","retainCachedSearchTerm","findNext","searchOptions","Error","_highlightAllMatches","found","_findNextAndSelect","_fireResults","searchResultsWithHighlight","prevResult","result","_find","row","col","cols","match","decoration","_createResultDecoration","add","marker","line","startRow","startCol","clearSelection","_initLinesCache","searchPosition","_findInLine","y","buffer","active","baseY","rows","prevSelectedPos","getSelectionPosition","end","x","start","_selectResult","_findPreviousAndSelect","resultIndex","selectedMatch","size","resultCount","isReverseSearch","Math","max","_linesCache","Array","_cursorMoveListener","onCursorMove","_destroyLinesCache","_resizeListener","_isWholeWord","searchIndex","includes","firstLine","getLine","isWrapped","cache","_translateBufferLineToStringWithWrap","stringLine","offsets","offset","_bufferColsToStringOffset","searchTerm","caseSensitive","toLowerCase","searchStringLine","regex","searchRegex","RegExp","foundTerm","exec","slice","lastIndex","lastIndexOf","wholeWord","startRowOffset","endRowOffset","startColOffset","endColOffset","startColIndex","_stringLengthToBufferSize","cell","getCell","char","getChars","nextCell","getWidth","lineIndex","getCode","trimRight","strings","lineOffsets","nextLine","lineWrapsToNext","string","translateToString","lastCell","join","select","registerMarker","cursorY","registerDecoration","width","backgroundColor","activeMatchBackground","layer","overviewRulerOptions","color","activeMatchColorOverviewRuler","onRender","_applyStyles","activeMatchBorder","onDispose","viewportY","scroll","floor","scrollLines","element","borderColor","isActiveResult","classList","contains","style","outline","findResultDecoration","matchBackground","has","matchOverviewRuler","position","matchBorder"],"sourceRoot":""}