{"version":3,"file":"vendors-node_modules_theia_callhierarchy_lib_browser_index_js-node_modules_theia_core_shared_-c5ac22.js","mappings":"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","sources":["webpack:///./node_modules/@theia/callhierarchy/src/browser/index.ts?","webpack:///./node_modules/@theia/core/shared/@lumino/coreutils/index.js?","webpack:///./node_modules/@theia/output/src/browser/output-commands.ts?","webpack:///./node_modules/@theia/plugin-ext/src/main/browser/output-channel-registry-main.ts?","webpack:///./node_modules/@theia/plugin-metrics/src/browser/plugin-metrics-creator.ts?","webpack:///./node_modules/@theia/plugin-metrics/src/browser/plugin-metrics-frontend-module.ts?","webpack:///./node_modules/@theia/plugin-metrics/src/browser/plugin-metrics-languages-main.ts?","webpack:///./node_modules/@theia/plugin-metrics/src/browser/plugin-metrics-output-registry.ts?","webpack:///./node_modules/@theia/plugin-metrics/src/browser/plugin-metrics-resolver.ts?","webpack:///./node_modules/@theia/plugin-metrics/src/common/metrics-protocol.ts?","webpack:///./node_modules/@theia/plugin-metrics/src/common/plugin-metrics-types.ts?","webpack:///./node_modules/@theia/typehierarchy/src/browser/index.ts?","webpack:///./node_modules/@theia/typehierarchy/src/browser/typehierarchy.ts?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport * from './callhierarchy';\nexport * from './callhierarchy-contribution';\nexport * from './callhierarchy-frontend-module';\nexport * from './callhierarchy-service';\n","module.exports = require('@lumino/coreutils');\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { codicon } from '@theia/core/lib/browser';\nimport { Command, nls } from '@theia/core/lib/common';\n\nexport namespace OutputCommands {\n\n    const OUTPUT_CATEGORY = 'Output';\n    const OUTPUT_CATEGORY_KEY = nls.getDefaultKey(OUTPUT_CATEGORY);\n\n    /* #region VS Code `OutputChannel` API */\n    // Based on: https://github.com/theia-ide/vscode/blob/standalone/0.19.x/src/vs/vscode.d.ts#L4692-L4745\n\n    export const APPEND: Command = {\n        id: 'output:append'\n    };\n\n    export const APPEND_LINE: Command = {\n        id: 'output:appendLine'\n    };\n\n    export const CLEAR: Command = {\n        id: 'output:clear'\n    };\n\n    export const SHOW: Command = {\n        id: 'output:show'\n    };\n\n    export const HIDE: Command = {\n        id: 'output:hide'\n    };\n\n    export const DISPOSE: Command = {\n        id: 'output:dispose'\n    };\n\n    /* #endregion VS Code `OutputChannel` API */\n\n    export const CLEAR__WIDGET = Command.toLocalizedCommand({\n        id: 'output:widget:clear',\n        category: OUTPUT_CATEGORY,\n        iconClass: codicon('clear-all')\n    }, '', OUTPUT_CATEGORY_KEY);\n\n    export const LOCK__WIDGET = Command.toLocalizedCommand({\n        id: 'output:widget:lock',\n        category: OUTPUT_CATEGORY,\n        iconClass: codicon('unlock')\n    }, '', OUTPUT_CATEGORY_KEY);\n\n    export const UNLOCK__WIDGET = Command.toLocalizedCommand({\n        id: 'output:widget:unlock',\n        category: OUTPUT_CATEGORY,\n        iconClass: codicon('lock')\n    }, '', OUTPUT_CATEGORY_KEY);\n\n    export const CLEAR__QUICK_PICK = Command.toLocalizedCommand({\n        id: 'output:pick-clear',\n        label: 'Clear Output Channel...',\n        category: OUTPUT_CATEGORY\n    }, 'theia/output/clearOutputChannel', OUTPUT_CATEGORY_KEY);\n\n    export const SHOW__QUICK_PICK = Command.toLocalizedCommand({\n        id: 'output:pick-show',\n        label: 'Show Output Channel...',\n        category: OUTPUT_CATEGORY\n    }, 'theia/output/showOutputChannel', OUTPUT_CATEGORY_KEY);\n\n    export const HIDE__QUICK_PICK = Command.toLocalizedCommand({\n        id: 'output:pick-hide',\n        label: 'Hide Output Channel...',\n        category: OUTPUT_CATEGORY\n    }, 'theia/output/hideOutputChannel', OUTPUT_CATEGORY_KEY);\n\n    export const DISPOSE__QUICK_PICK = Command.toLocalizedCommand({\n        id: 'output:pick-dispose',\n        label: 'Close Output Channel...',\n        category: OUTPUT_CATEGORY\n    }, 'theia/output/closeOutputChannel', OUTPUT_CATEGORY_KEY);\n\n    export const COPY_ALL: Command = {\n        id: 'output:copy-all',\n    };\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { CommandService } from '@theia/core/lib/common/command';\nimport { OutputCommands } from '@theia/output/lib/browser/output-commands';\nimport { OutputChannelRegistryMain, PluginInfo } from '../../common/plugin-api-rpc';\n\n@injectable()\nexport class OutputChannelRegistryMainImpl implements OutputChannelRegistryMain {\n\n    @inject(CommandService)\n    protected readonly commandService: CommandService;\n\n    $append(name: string, text: string, pluginInfo: PluginInfo): PromiseLike<void> {\n        this.commandService.executeCommand(OutputCommands.APPEND.id, { name, text });\n        return Promise.resolve();\n    }\n\n    $clear(name: string): PromiseLike<void> {\n        this.commandService.executeCommand(OutputCommands.CLEAR.id, { name });\n        return Promise.resolve();\n    }\n\n    $dispose(name: string): PromiseLike<void> {\n        this.commandService.executeCommand(OutputCommands.DISPOSE.id, { name });\n        return Promise.resolve();\n    }\n\n    async $reveal(name: string, preserveFocus: boolean): Promise<void> {\n        const options = { preserveFocus };\n        this.commandService.executeCommand(OutputCommands.SHOW.id, { name, options });\n    }\n\n    $close(name: string): PromiseLike<void> {\n        this.commandService.executeCommand(OutputCommands.HIDE.id, { name });\n        return Promise.resolve();\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { PluginMetrics, METRICS_TIMEOUT } from '../common/metrics-protocol';\nimport { AnalyticsFromRequests, DataFromRequest, createRequestData, createDefaultAnalytics, MetricsMap } from '../common/plugin-metrics-types';\n\n@injectable()\nexport class PluginMetricsCreator {\n\n    @inject(PluginMetrics)\n    private pluginMetrics: PluginMetrics;\n\n    private _extensionIDAnalytics: MetricsMap;\n\n    private NODE_BASED_REGEX = /Request(.*?)failed/;\n\n    constructor() {\n        this.setPluginMetrics();\n        this._extensionIDAnalytics = {};\n    }\n\n    /**\n     * Create an error metric for requestData.pluginID by attempting to extract the erroring\n     * language server method from the requestData.errorContentsOrMethod. If it cannot extract the\n     * error language server method from requestData.errorContentsOrMethod then it will not\n     * create a metric.\n     *\n     * @param pluginID The id of the plugin\n     * @param errorContents The contents that the language server error has produced\n     */\n    async createErrorMetric(requestData: DataFromRequest): Promise<void> {\n        if (!requestData.pluginID) {\n            return;\n        }\n\n        const method = this.extractMethodFromValue(requestData.errorContentsOrMethod);\n\n        // only log the metric if we can find the method that it occurred in\n        if (method) {\n            const createdMetric = createRequestData(requestData.pluginID, method, requestData.timeTaken);\n            this.createMetric(createdMetric, false);\n\n            this.decreaseExtensionRequests(requestData.pluginID, method);\n        }\n    }\n\n    /**\n     * Decreases the total requests and the successful responses for pluginID with method by 1.\n     *\n     * This is needed because an error and a successful language server request aren't currently\n     * associated together because of https://github.com/microsoft/vscode-languageserver-node/issues/517.\n     * That means that every language server request that resolves counts as a successful language server request.\n     * Therefore, we need to decrease the extension requests for pluginID when we know there is an error.\n     * Otherwise, for every language server request that errors we would count it as both a success and a failure.\n     *\n     * @param pluginID The id of the plugin that should have the decreased requests\n     */\n    private decreaseExtensionRequests(pluginID: string, method: string): void {\n        const thisExtension = this._extensionIDAnalytics[pluginID];\n        if (thisExtension) {\n            const currentAnalytics = thisExtension[method];\n            if (currentAnalytics) {\n                currentAnalytics.totalRequests -= 1;\n                currentAnalytics.successfulResponses -= 1;\n            }\n        }\n    }\n\n    /**\n     * Update the internal metrics structure for pluginID with method when a request is made\n     *\n     * @param requestData The data from the request that was made\n     * @param isRequestSuccessful If the language server request was successful or not\n     */\n    async createMetric(requestData: DataFromRequest, isRequestSuccessful: boolean): Promise<void> {\n        if (!requestData.pluginID) {\n            return;\n        }\n\n        // When we are in this function we know its a method so we can make it clearer\n        const method = requestData.errorContentsOrMethod;\n        const defaultAnalytic = createDefaultAnalytics(requestData.timeTaken, isRequestSuccessful);\n\n        this.createExtensionIDAnalyticIfNotFound(requestData, defaultAnalytic);\n        this.createExtensionIDMethodIfNotFound(requestData, defaultAnalytic);\n\n        const thisExtension = this._extensionIDAnalytics[requestData.pluginID];\n        if (thisExtension) {\n            const currentAnalytic = thisExtension[method];\n            if (currentAnalytic) {\n                currentAnalytic.totalRequests += 1;\n                if (isRequestSuccessful) {\n                    currentAnalytic.successfulResponses += 1;\n                }\n                if (isRequestSuccessful) {\n                    currentAnalytic.sumOfTimeForSuccess = currentAnalytic.sumOfTimeForSuccess + requestData.timeTaken;\n                } else {\n                    currentAnalytic.sumOfTimeForFailure = currentAnalytic.sumOfTimeForFailure + requestData.timeTaken;\n                }\n            }\n        }\n    }\n\n    /**\n     * Create an entry in _extensionIDAnalytics with createdAnalytic if there does not exist one\n     *\n     * @param requestData data that we will turn into metrics\n     * @param createdAnalytic the analytic being created\n     */\n    private createExtensionIDAnalyticIfNotFound(requestData: DataFromRequest, createdAnalytic: AnalyticsFromRequests): void {\n        const method = requestData.errorContentsOrMethod; // We know its a metric if this is being called\n\n        if (!this._extensionIDAnalytics[requestData.pluginID]) {\n            this._extensionIDAnalytics[requestData.pluginID] = {\n                [method]: createdAnalytic\n            };\n        }\n    }\n\n    /**\n     * Create an entry in _extensionIDAnalytics for requestData.pluginID with requestData.errorContentsOrMethod as the method\n     * if there does not exist one\n     *\n     * @param requestData data that we will turn into metrics\n     * @param createdAnalytic the analytic being created\n     */\n    private createExtensionIDMethodIfNotFound(requestData: DataFromRequest, createdAnalytic: AnalyticsFromRequests): void {\n        const method = requestData.errorContentsOrMethod; // We know its a metric if this is being called\n\n        if (this._extensionIDAnalytics[requestData.pluginID]) {\n            const methodToAnalyticMap = this._extensionIDAnalytics[requestData.pluginID];\n            if (!methodToAnalyticMap[method]) {\n                methodToAnalyticMap[method] = createdAnalytic;\n            }\n        }\n    }\n\n    /**\n     * setPluginMetrics is a constant running function that sets\n     * pluginMetrics every {$METRICS_TIMEOUT} seconds so that it doesn't\n     * update /metrics on every request\n     */\n    private setPluginMetrics(): void {\n        const self = this;\n        setInterval(() => {\n            if (Object.keys(self._extensionIDAnalytics).length !== 0) {\n                self.pluginMetrics.setMetrics(JSON.stringify(self._extensionIDAnalytics));\n            }\n        }, METRICS_TIMEOUT);\n    }\n\n    // Map of plugin extension id to method to analytic\n    get extensionIDAnalytics(): MetricsMap {\n        return this._extensionIDAnalytics;\n    }\n\n    /**\n     * Attempts to extract the method name from the current errorContents using the\n     * vscode-languageclient matching regex.\n     *\n     * If it cannot find a match in the errorContents it returns undefined\n     *\n     * @param errorContents The contents of the current error or undefined\n     */\n    private extractMethodFromValue(errorContents: string | undefined): string | undefined {\n        if (!errorContents) {\n            return undefined;\n        }\n        const matches = errorContents.match(this.NODE_BASED_REGEX);\n        if (matches) {\n            return matches[1].trim();\n        }\n        return undefined;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { LanguagesMainPluginMetrics } from './plugin-metrics-languages-main';\nimport { PluginMetrics, metricsJsonRpcPath } from '../common/metrics-protocol';\nimport { WebSocketConnectionProvider } from '@theia/core/lib/browser/messaging/ws-connection-provider';\nimport { PluginMetricsCreator } from './plugin-metrics-creator';\nimport { PluginMetricsResolver } from './plugin-metrics-resolver';\nimport { PluginMetricsOutputChannelRegistry } from './plugin-metrics-output-registry';\nimport { LanguagesMainImpl } from '@theia/plugin-ext/lib/main/browser/languages-main';\nimport { OutputChannelRegistryMainImpl } from '@theia/plugin-ext/lib/main/browser/output-channel-registry-main';\n\nexport default new ContainerModule((bind, unbind, isBound, rebind) => {\n    bind(PluginMetricsResolver).toSelf().inSingletonScope();\n    bind(PluginMetricsCreator).toSelf().inSingletonScope();\n\n    rebind(LanguagesMainImpl).to(LanguagesMainPluginMetrics).inTransientScope();\n    rebind(OutputChannelRegistryMainImpl).to(PluginMetricsOutputChannelRegistry).inTransientScope();\n\n    bind(PluginMetrics).toDynamicValue(ctx => {\n        const connection = ctx.container.get(WebSocketConnectionProvider);\n        return connection.createProxy<PluginMetrics>(metricsJsonRpcPath);\n    }).inSingletonScope();\n});\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { CodeActionProviderDocumentation, Range, SerializedDocumentFilter, WorkspaceSymbolParams } from '@theia/plugin-ext/lib/common/plugin-api-rpc-model';\nimport { PluginMetricsResolver } from './plugin-metrics-resolver';\nimport { LanguagesMainImpl } from '@theia/plugin-ext/lib/main/browser/languages-main';\nimport { SymbolInformation } from '@theia/core/shared/vscode-languageserver-protocol';\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport * as vst from '@theia/core/shared/vscode-languageserver-protocol';\nimport { PluginInfo } from '@theia/plugin-ext/lib/common/plugin-api-rpc';\nimport * as theia from '@theia/plugin';\nimport * as monaco from '@theia/monaco-editor-core';\n\n@injectable()\nexport class LanguagesMainPluginMetrics extends LanguagesMainImpl {\n\n    @inject(PluginMetricsResolver)\n    private pluginMetricsResolver: PluginMetricsResolver;\n\n    // Map of handle to extension id\n    protected readonly handleToExtensionID = new Map<number, string>();\n\n    override $unregister(handle: number): void {\n        this.handleToExtensionID.delete(handle);\n        super.$unregister(handle);\n    }\n\n    protected override provideCompletionItems(handle: number, model: monaco.editor.ITextModel, position: monaco.Position,\n        context: monaco.languages.CompletionContext, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.CompletionRequest.type.method,\n            super.provideCompletionItems(handle, model, position, context, token));\n    }\n\n    protected override resolveCompletionItem(handle: number,\n        item: monaco.languages.CompletionItem, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionItem> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.CompletionRequest.type.method,\n            super.resolveCompletionItem(handle, item, token));\n    }\n\n    protected override provideReferences(handle: number, model: monaco.editor.ITextModel, position: monaco.Position,\n        context: monaco.languages.ReferenceContext, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.Location[]> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.ReferencesRequest.type.method,\n            super.provideReferences(handle, model, position, context, token));\n    }\n\n    protected override provideImplementation(handle: number, model: monaco.editor.ITextModel,\n        position: monaco.Position, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.Definition> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.ImplementationRequest.type.method,\n            super.provideImplementation(handle, model, position, token));\n    }\n\n    protected override provideTypeDefinition(handle: number, model: monaco.editor.ITextModel,\n        position: monaco.Position, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.Definition> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.TypeDefinitionRequest.type.method,\n            super.provideTypeDefinition(handle, model, position, token));\n    }\n\n    protected override provideHover(handle: number, model: monaco.editor.ITextModel, position: monaco.Position,\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.Hover> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.HoverRequest.type.method,\n            super.provideHover(handle, model, position, token));\n    }\n\n    protected override provideDocumentHighlights(handle: number, model: monaco.editor.ITextModel, position: monaco.Position,\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.DocumentHighlight[]> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.DocumentHighlightRequest.type.method,\n            super.provideDocumentHighlights(handle, model, position, token));\n    }\n\n    protected override provideWorkspaceSymbols(handle: number, params: WorkspaceSymbolParams, token: monaco.CancellationToken): Thenable<SymbolInformation[]> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.WorkspaceSymbolRequest.type.method,\n            super.provideWorkspaceSymbols(handle, params, token));\n    }\n\n    protected override resolveWorkspaceSymbol(handle: number, symbol: SymbolInformation, token: monaco.CancellationToken): Thenable<SymbolInformation> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.WorkspaceSymbolRequest.type.method,\n            super.resolveWorkspaceSymbol(handle, symbol, token));\n    }\n\n    protected override async provideLinks(handle: number, model: monaco.editor.ITextModel,\n        token: monaco.CancellationToken): Promise<monaco.languages.ProviderResult<monaco.languages.ILinksList>> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.DocumentLinkRequest.type.method,\n            super.provideLinks(handle, model, token));\n    }\n\n    protected override async resolveLink(handle: number, link: monaco.languages.ILink,\n        token: monaco.CancellationToken): Promise<monaco.languages.ProviderResult<monaco.languages.ILink>> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.DocumentLinkRequest.type.method,\n            super.resolveLink(handle, link, token));\n    }\n\n    protected override async provideCodeLenses(handle: number, model: monaco.editor.ITextModel,\n        token: monaco.CancellationToken): Promise<monaco.languages.ProviderResult<monaco.languages.CodeLensList>> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.CodeLensRequest.type.method,\n            super.provideCodeLenses(handle, model, token));\n    }\n\n    protected override resolveCodeLens(handle: number, model: monaco.editor.ITextModel,\n        codeLens: monaco.languages.CodeLens, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CodeLens> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.CodeLensResolveRequest.type.method,\n            super.resolveCodeLens(handle, model, codeLens, token));\n    }\n\n    protected override provideDocumentSymbols(handle: number, model: monaco.editor.ITextModel,\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.DocumentSymbol[]> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.DocumentSymbolRequest.type.method,\n            super.provideDocumentSymbols(handle, model, token));\n    }\n\n    protected override provideDefinition(handle: number, model: monaco.editor.ITextModel,\n        position: monaco.Position, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.Definition> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.DefinitionRequest.type.method,\n            super.provideDefinition(handle, model, position, token));\n    }\n\n    protected override async provideSignatureHelp(handle: number, model: monaco.editor.ITextModel,\n        position: monaco.Position, token: monaco.CancellationToken,\n        context: monaco.languages.SignatureHelpContext): Promise<monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult>> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.SignatureHelpRequest.type.method,\n            super.provideSignatureHelp(handle, model, position, token, context));\n    }\n\n    protected override provideDocumentFormattingEdits(handle: number, model: monaco.editor.ITextModel,\n        options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.DocumentFormattingRequest.type.method,\n            super.provideDocumentFormattingEdits(handle, model, options, token));\n    }\n\n    protected override provideDocumentRangeFormattingEdits(handle: number, model: monaco.editor.ITextModel,\n        range: Range, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.DocumentRangeFormattingRequest.type.method,\n            super.provideDocumentRangeFormattingEdits(handle, model, range, options, token));\n    }\n\n    protected override provideOnTypeFormattingEdits(handle: number, model: monaco.editor.ITextModel, position: monaco.Position,\n        ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.DocumentOnTypeFormattingRequest.type.method,\n            super.provideOnTypeFormattingEdits(handle, model, position, ch, options, token));\n    }\n\n    protected override provideFoldingRanges(handle: number, model: monaco.editor.ITextModel,\n        context: monaco.languages.FoldingContext, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.FoldingRange[]> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.FoldingRangeRequest.type.method,\n            super.provideFoldingRanges(handle, model, context, token));\n    }\n\n    protected override provideDocumentColors(handle: number, model: monaco.editor.ITextModel,\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.IColorInformation[]> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.DocumentColorRequest.type.method,\n            super.provideDocumentColors(handle, model, token));\n    }\n\n    protected override provideColorPresentations(handle: number, model: monaco.editor.ITextModel,\n        colorInfo: monaco.languages.IColorInformation, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.IColorPresentation[]> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.ColorPresentationRequest.type.method,\n            super.provideColorPresentations(handle, model, colorInfo, token));\n    }\n\n    protected override async provideCodeActions(handle: number, model: monaco.editor.ITextModel,\n        rangeOrSelection: Range, context: monaco.languages.CodeActionContext,\n        token: monaco.CancellationToken): Promise<monaco.languages.CodeActionList | monaco.languages.CodeActionList> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.CodeActionRequest.type.method,\n            super.provideCodeActions(handle, model, rangeOrSelection, context, token));\n    }\n\n    protected override provideRenameEdits(handle: number, model: monaco.editor.ITextModel,\n        position: monaco.Position, newName: string, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.WorkspaceEdit & monaco.languages.Rejection> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.RenameRequest.type.method,\n            super.provideRenameEdits(handle, model, position, newName, token));\n    }\n\n    protected override resolveRenameLocation(handle: number, model: monaco.editor.ITextModel,\n        position: monaco.Position, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.RenameLocation> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.RenameRequest.type.method,\n            super.resolveRenameLocation(handle, model, position, token));\n    }\n\n    override $registerCompletionSupport(handle: number, pluginInfo: PluginInfo,\n        selector: SerializedDocumentFilter[], triggerCharacters: string[], supportsResolveDetails: boolean): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerCompletionSupport(handle, pluginInfo, selector, triggerCharacters, supportsResolveDetails);\n    }\n\n    override $registerDefinitionProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerDefinitionProvider(handle, pluginInfo, selector);\n    }\n\n    override $registerDeclarationProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerDeclarationProvider(handle, pluginInfo, selector);\n    }\n\n    override $registerReferenceProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerReferenceProvider(handle, pluginInfo, selector);\n    }\n\n    override $registerSignatureHelpProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[], metadata: theia.SignatureHelpProviderMetadata): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerSignatureHelpProvider(handle, pluginInfo, selector, metadata);\n    }\n\n    override $registerImplementationProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerImplementationProvider(handle, pluginInfo, selector);\n    }\n\n    override $registerTypeDefinitionProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerTypeDefinitionProvider(handle, pluginInfo, selector);\n    }\n\n    override $registerHoverProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerHoverProvider(handle, pluginInfo, selector);\n    }\n\n    override $registerDocumentHighlightProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerDocumentHighlightProvider(handle, pluginInfo, selector);\n    }\n\n    override $registerWorkspaceSymbolProvider(handle: number, pluginInfo: PluginInfo): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerWorkspaceSymbolProvider(handle, pluginInfo);\n    }\n\n    override $registerDocumentLinkProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerDocumentLinkProvider(handle, pluginInfo, selector);\n    }\n\n    override $registerCodeLensSupport(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[], eventHandle: number): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerCodeLensSupport(handle, pluginInfo, selector, eventHandle);\n    }\n\n    override $registerOutlineSupport(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[], displayName?: string): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerOutlineSupport(handle, pluginInfo, selector, displayName);\n    }\n\n    override $registerDocumentFormattingSupport(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerDocumentFormattingSupport(handle, pluginInfo, selector);\n    }\n\n    override $registerRangeFormattingSupport(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerRangeFormattingSupport(handle, pluginInfo, selector);\n    }\n\n    override $registerOnTypeFormattingProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[], autoFormatTriggerCharacters: string[]): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerOnTypeFormattingProvider(handle, pluginInfo, selector, autoFormatTriggerCharacters);\n    }\n\n    override $registerFoldingRangeProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[], eventHandle: number): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerFoldingRangeProvider(handle, pluginInfo, selector, eventHandle);\n    }\n\n    override $registerDocumentColorProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerDocumentColorProvider(handle, pluginInfo, selector);\n    }\n\n    override $registerQuickFixProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[], codeActionKinds?: string[],\n        documentation?: CodeActionProviderDocumentation): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerQuickFixProvider(handle, pluginInfo, selector, codeActionKinds, documentation);\n    }\n\n    override $registerRenameProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[], supportsResolveLocation: boolean): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerRenameProvider(handle, pluginInfo, selector, supportsResolveLocation);\n    }\n\n    private registerPluginWithFeatureHandle(handle: number, pluginID: string): void {\n        this.handleToExtensionID.set(handle, pluginID);\n    }\n\n    private handleToExtensionName(handle: number): string {\n        return this.handleToExtensionID.get(handle) as string;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { OutputChannelRegistryMainImpl } from '@theia/plugin-ext/lib/main/browser/output-channel-registry-main';\nimport { PluginMetricsCreator } from './plugin-metrics-creator';\nimport { createDefaultRequestData } from '../common/plugin-metrics-types';\nimport { PluginInfo } from '@theia/plugin-ext/lib/common/plugin-api-rpc';\n\n@injectable()\nexport class PluginMetricsOutputChannelRegistry extends OutputChannelRegistryMainImpl {\n\n    @inject(PluginMetricsCreator)\n    protected readonly pluginMetricsCreator: PluginMetricsCreator;\n\n    override $append(channelName: string, errorOrValue: string, pluginInfo: PluginInfo): PromiseLike<void> {\n        if (errorOrValue.startsWith('[Error')) {\n            const createdMetric = createDefaultRequestData(pluginInfo.id, errorOrValue);\n            this.pluginMetricsCreator.createErrorMetric(createdMetric);\n        }\n        return super.$append(channelName, errorOrValue, pluginInfo);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { PluginMetricsCreator } from './plugin-metrics-creator';\nimport { createRequestData } from '../common/plugin-metrics-types';\n\n/**\n * This class helps resolve language server requests into successes or failures\n * and sends the data to the metricsExtractor\n */\n@injectable()\nexport class PluginMetricsResolver {\n\n    @inject(PluginMetricsCreator)\n    private metricsCreator: PluginMetricsCreator;\n\n    /**\n     * Resolve a request for pluginID and create a metric based on whether or not\n     * the language server errored.\n     *\n     * @param pluginID the ID of the plugin that made the request\n     * @param method  the method that was request\n     * @param request the result of the language server request\n     */\n    async resolveRequest(pluginID: string, method: string, request: PromiseLike<any> | Promise<any> | Thenable<any> | any): Promise<any> {\n        const currentTime = performance.now();\n        try {\n            const value = await request;\n            this.createAndSetMetric(pluginID, method, performance.now() - currentTime, true);\n            return value;\n        } catch (error) {\n            this.createAndSetMetric(pluginID, method, performance.now() - currentTime, false);\n            return Promise.reject(error);\n        }\n    }\n\n    private createAndSetMetric(pluginID: string, method: string, time: number, successful: boolean): void {\n        const createdSuccessMetric = createRequestData(pluginID, method, time);\n        this.metricsCreator.createMetric(createdSuccessMetric, successful);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/**\n * The JSON-RPC interface for plugin metrics\n */\nexport const metricsJsonRpcPath = '/services/plugin-ext/metrics';\nexport const PluginMetrics = Symbol('PluginMetrics');\nexport interface PluginMetrics {\n    setMetrics(metrics: string): void;\n    getMetrics(): string;\n}\n\nexport const METRICS_TIMEOUT = 10000;\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n// Define common interfaces that multiple classes can use\n\nexport interface MetricsMap {\n    [extensionID: string]: MethodToAnalytics\n}\n\nexport interface MethodToAnalytics {\n    [methodID: string]: AnalyticsFromRequests;\n}\n\nexport interface AnalyticsFromRequests {\n    totalRequests: number;\n    successfulResponses: number;\n    sumOfTimeForSuccess: number;\n    sumOfTimeForFailure: number;\n}\n\nexport interface DataFromRequest {\n    pluginID: string;\n    errorContentsOrMethod: string;\n    timeTaken: number;\n}\n\nexport interface MetricOutput {\n    header: string;\n    createMetricOutput(pluginID: string, method: string, requestAnalytics: AnalyticsFromRequests): string;\n}\n\n/**\n * Helper functions for creating an object that corresponds to the DataFromRequest interface\n */\nexport function createRequestData(pluginID: string, errorContentsOrMethod: string, timeTaken: number): DataFromRequest {\n    return {\n        pluginID,\n        errorContentsOrMethod,\n        timeTaken\n    };\n}\n\nexport function createDefaultRequestData(pluginID: string, errorContentsOrMethod: string): DataFromRequest {\n    return {\n        pluginID,\n        errorContentsOrMethod,\n        timeTaken: 0\n    };\n}\n\nexport function createDefaultAnalytics(timeTaken: number, isRequestSuccessful: boolean): AnalyticsFromRequests {\n    if (isRequestSuccessful) {\n        return {\n            sumOfTimeForSuccess: timeTaken,\n            sumOfTimeForFailure: 0,\n            successfulResponses: 0,\n            totalRequests: 0\n        };\n    } else {\n        return {\n            sumOfTimeForSuccess: 0,\n            sumOfTimeForFailure: timeTaken,\n            successfulResponses: 0,\n            totalRequests: 0\n        };\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport * from './typehierarchy';\nexport * from './typehierarchy-contribution';\nexport * from './typehierarchy-frontend-module';\nexport * from './typehierarchy-service';\n","// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { UriComponents } from '@theia/core/lib/common/uri';\nimport { Range, SymbolKind, SymbolTag } from '@theia/core/shared/vscode-languageserver-protocol';\n\nexport interface TypeHierarchyItem {\n    _sessionId?: string;\n    _itemId?: string;\n\n    kind: SymbolKind;\n    tags?: readonly SymbolTag[];\n    name: string;\n    detail?: string;\n    uri: UriComponents;\n    range: Range;\n    selectionRange: Range;\n}\n"],"names":[],"sourceRoot":""}