{"version":3,"file":"vendors-node_modules_theia_output_lib_browser_output-frontend-module_js.js","mappings":"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","sources":["webpack:///./node_modules/@theia/output/src/browser/output-editor-factory.ts?","webpack:///./node_modules/@theia/output/src/browser/output-editor-model-factory.ts?","webpack:///./node_modules/@theia/output/src/browser/output-frontend-module.ts?","webpack:///./node_modules/@theia/output/src/browser/output-toolbar-contribution.tsx?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { MonacoEditorModel } from '@theia/monaco/lib/browser/monaco-editor-model';\nimport { MonacoEditorFactory } from '@theia/monaco/lib/browser/monaco-editor-provider';\nimport { MonacoContextMenuService } from '@theia/monaco/lib/browser/monaco-context-menu';\nimport { EditorServiceOverrides, MonacoEditor, MonacoEditorServices } from '@theia/monaco/lib/browser/monaco-editor';\nimport { OutputUri } from '../common/output-uri';\nimport { OutputContextMenuService } from './output-context-menu';\nimport { IContextMenuService } from '@theia/monaco-editor-core/esm/vs/platform/contextview/browser/contextView';\n\n@injectable()\nexport class OutputEditorFactory implements MonacoEditorFactory {\n\n    @inject(MonacoEditorServices)\n    protected readonly services: MonacoEditorServices;\n\n    @inject(OutputContextMenuService)\n    protected readonly contextMenuService: MonacoContextMenuService;\n\n    readonly scheme: string = OutputUri.SCHEME;\n\n    create(model: MonacoEditorModel, defaultsOptions: MonacoEditor.IOptions): Promise<MonacoEditor> {\n        const uri = new URI(model.uri);\n        const options = this.createOptions(model, defaultsOptions);\n        const overrides = this.createOverrides(model);\n        return MonacoEditor.create(uri, model, document.createElement('div'), this.services, options, overrides);\n    }\n\n    protected createOptions(model: MonacoEditorModel, defaultOptions: MonacoEditor.IOptions): MonacoEditor.IOptions {\n        return {\n            ...defaultOptions,\n            overviewRulerLanes: 3,\n            lineNumbersMinChars: 3,\n            fixedOverflowWidgets: true,\n            wordWrap: 'off',\n            lineNumbers: 'off',\n            glyphMargin: false,\n            lineDecorationsWidth: 20,\n            rulers: [],\n            folding: false,\n            scrollBeyondLastLine: false,\n            readOnly: true,\n            renderLineHighlight: 'none',\n            minimap: { enabled: false },\n            matchBrackets: 'never'\n        };\n    }\n\n    protected *createOverrides(model: MonacoEditorModel): EditorServiceOverrides {\n        yield [IContextMenuService, this.contextMenuService];\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { Resource } from '@theia/core/lib/common/resource';\nimport { MonacoEditorModel } from '@theia/monaco/lib/browser/monaco-editor-model';\nimport { OutputUri } from '../common/output-uri';\nimport { MonacoEditorModelFactory } from '@theia/monaco/lib/browser/monaco-text-model-service';\nimport { MonacoToProtocolConverter } from '@theia/monaco/lib/browser/monaco-to-protocol-converter';\nimport { ProtocolToMonacoConverter } from '@theia/monaco/lib/browser/protocol-to-monaco-converter';\n\n@injectable()\nexport class OutputEditorModelFactory implements MonacoEditorModelFactory {\n\n    @inject(MonacoToProtocolConverter)\n    protected readonly m2p: MonacoToProtocolConverter;\n\n    @inject(ProtocolToMonacoConverter)\n    protected readonly p2m: ProtocolToMonacoConverter;\n\n    readonly scheme: string = OutputUri.SCHEME;\n\n    createModel(\n        resource: Resource\n    ): MonacoEditorModel {\n        return new OutputEditorModel(resource, this.m2p, this.p2m);\n    }\n\n}\n\nexport class OutputEditorModel extends MonacoEditorModel {\n\n    override get readOnly(): boolean {\n        return true;\n    }\n\n    protected override setDirty(dirty: boolean): void {\n        // NOOP\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { OutputWidget } from './output-widget';\nimport { TabBarToolbarContribution } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { ResourceResolver } from '@theia/core/lib/common';\nimport { WidgetFactory, bindViewContribution, OpenHandler } from '@theia/core/lib/browser';\nimport { OutputChannelManager } from './output-channel';\nimport { bindOutputPreferences } from './output-preferences';\nimport { OutputToolbarContribution } from './output-toolbar-contribution';\nimport { OutputContribution } from './output-contribution';\nimport { MonacoEditorFactory } from '@theia/monaco/lib/browser/monaco-editor-provider';\nimport { OutputContextMenuService } from './output-context-menu';\nimport { OutputEditorFactory } from './output-editor-factory';\nimport { MonacoEditorModelFactory } from '@theia/monaco/lib/browser/monaco-text-model-service';\nimport { OutputEditorModelFactory } from './output-editor-model-factory';\n\nexport default new ContainerModule(bind => {\n    bind(OutputChannelManager).toSelf().inSingletonScope();\n    bind(ResourceResolver).toService(OutputChannelManager);\n    bind(OutputEditorFactory).toSelf().inSingletonScope();\n    bind(MonacoEditorFactory).toService(OutputEditorFactory);\n    bind(OutputEditorModelFactory).toSelf().inSingletonScope();\n    bind(MonacoEditorModelFactory).toService(OutputEditorModelFactory);\n    bind(OutputContextMenuService).toSelf().inSingletonScope();\n\n    bindOutputPreferences(bind);\n\n    bind(OutputWidget).toSelf();\n    bind(WidgetFactory).toDynamicValue(context => ({\n        id: OutputWidget.ID,\n        createWidget: () => context.container.get<OutputWidget>(OutputWidget)\n    }));\n    bindViewContribution(bind, OutputContribution);\n    bind(OpenHandler).to(OutputContribution).inSingletonScope();\n\n    bind(OutputToolbarContribution).toSelf().inSingletonScope();\n    bind(TabBarToolbarContribution).toService(OutputToolbarContribution);\n});\n","// *****************************************************************************\n// Copyright (C) 2019 Arm and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as React from '@theia/core/shared/react';\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { Emitter } from '@theia/core/lib/common/event';\nimport { TabBarToolbarContribution, TabBarToolbarRegistry } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { SelectComponent, SelectOption } from '@theia/core/lib/browser/widgets/select-component';\nimport { OutputWidget } from './output-widget';\nimport { OutputCommands } from './output-commands';\nimport { OutputContribution } from './output-contribution';\nimport { OutputChannelManager } from './output-channel';\nimport { nls } from '@theia/core/lib/common/nls';\n\n@injectable()\nexport class OutputToolbarContribution implements TabBarToolbarContribution {\n\n    @inject(OutputChannelManager)\n    protected readonly outputChannelManager: OutputChannelManager;\n\n    @inject(OutputContribution)\n    protected readonly outputContribution: OutputContribution;\n\n    protected readonly onOutputWidgetStateChangedEmitter = new Emitter<void>();\n    protected readonly onOutputWidgetStateChanged = this.onOutputWidgetStateChangedEmitter.event;\n\n    protected readonly onChannelsChangedEmitter = new Emitter<void>();\n    protected readonly onChannelsChanged = this.onChannelsChangedEmitter.event;\n\n    @postConstruct()\n    protected init(): void {\n        this.outputContribution.widget.then(widget => {\n            widget.onStateChanged(() => this.onOutputWidgetStateChangedEmitter.fire());\n        });\n        const fireChannelsChanged = () => this.onChannelsChangedEmitter.fire();\n        this.outputChannelManager.onSelectedChannelChanged(fireChannelsChanged);\n        this.outputChannelManager.onChannelAdded(fireChannelsChanged);\n        this.outputChannelManager.onChannelDeleted(fireChannelsChanged);\n        this.outputChannelManager.onChannelWasShown(fireChannelsChanged);\n        this.outputChannelManager.onChannelWasHidden(fireChannelsChanged);\n    }\n\n    registerToolbarItems(toolbarRegistry: TabBarToolbarRegistry): void {\n        toolbarRegistry.registerItem({\n            id: 'channels',\n            render: () => this.renderChannelSelector(),\n            isVisible: widget => widget instanceof OutputWidget,\n            onDidChange: this.onChannelsChanged\n        });\n        toolbarRegistry.registerItem({\n            id: OutputCommands.CLEAR__WIDGET.id,\n            command: OutputCommands.CLEAR__WIDGET.id,\n            tooltip: nls.localizeByDefault('Clear Output'),\n            priority: 1,\n        });\n        toolbarRegistry.registerItem({\n            id: OutputCommands.LOCK__WIDGET.id,\n            command: OutputCommands.LOCK__WIDGET.id,\n            tooltip: nls.localizeByDefault('Turn Auto Scrolling Off'),\n            onDidChange: this.onOutputWidgetStateChanged,\n            priority: 2\n        });\n        toolbarRegistry.registerItem({\n            id: OutputCommands.UNLOCK__WIDGET.id,\n            command: OutputCommands.UNLOCK__WIDGET.id,\n            tooltip: nls.localizeByDefault('Turn Auto Scrolling On'),\n            onDidChange: this.onOutputWidgetStateChanged,\n            priority: 2\n        });\n    }\n\n    protected readonly NONE = '<no channels>';\n    protected readonly OUTPUT_CHANNEL_LIST_ID = 'outputChannelList';\n\n    protected renderChannelSelector(): React.ReactNode {\n        const channelOptionElements: SelectOption[] = [];\n        this.outputChannelManager.getVisibleChannels().forEach((channel, i) => {\n            channelOptionElements.push({\n                value: channel.name\n            });\n        });\n        if (channelOptionElements.length === 0) {\n            channelOptionElements.push({\n                value: this.NONE\n            });\n        }\n        return <div id={this.OUTPUT_CHANNEL_LIST_ID} key={this.OUTPUT_CHANNEL_LIST_ID}>\n            <SelectComponent\n                key={this.outputChannelManager.selectedChannel?.name}\n                options={channelOptionElements}\n                defaultValue={this.outputChannelManager.selectedChannel?.name}\n                onChange={option => this.changeChannel(option)}\n            />\n        </div>;\n    }\n\n    protected changeChannel = (option: SelectOption) => {\n        const channelName = option.value;\n        if (channelName !== this.NONE && channelName) {\n            this.outputChannelManager.getChannel(channelName).show();\n        }\n    };\n}\n"],"names":[],"sourceRoot":""}