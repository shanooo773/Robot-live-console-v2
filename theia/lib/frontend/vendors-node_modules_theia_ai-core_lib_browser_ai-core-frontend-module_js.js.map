{"version":3,"file":"vendors-node_modules_theia_ai-core_lib_browser_ai-core-frontend-module_js.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;AAEhF,oIAAkE;AAClE,oJAAwE;AACxE,wJAAwE;AACxE,4KAAmF;AACnF,oHAAiD;AACjD,mJAE+B;AAC/B,wIAAuD;AACvD,iJAA+D;AAC/D,+JAAkE;AAClE,sJAA4D;AAC5D,uJAMsC;AAG/B,IAAM,kCAAkC,GAAxC,MAAM,kCAAkC;IAsB3C;;;;;OAKG;IACH,KAAK,CAAC,0BAA0B,CAC5B,OAAe,EACf,eAAwB;QAExB,MAAM,gBAAgB,GAClB,MAAM,IAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC,CAAC;QAEpD,IAAI,gBAAgB,KAAK,0CAAqB,IAAI,IAAI,CAAC,mBAAmB,EAAE,EAAE,CAAC;YAC3E,OAAO;QACX,CAAC;QAED,IAAI,CAAC;YACD,MAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;YACjD,MAAM,IAAI,CAAC,uBAAuB,CAC9B,SAAS,EACT,eAAe,EACf,gBAAgB,CACnB,CAAC;QACN,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,OAAO,CAAC,KAAK,CACT,+CAA+C,EAC/C,KAAK,CACR,CAAC;QACN,CAAC;IACL,CAAC;IAED;;;;;OAKG;IACO,gBAAgB,CAAC,OAAe;QACtC,IAAI,CAAC;YACD,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;YAChD,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,OAAO,CAAC,CAAC;YACjD,OAAO,MAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,IAAI,KAAI,OAAO,CAAC;QAClC,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,OAAO,CAAC,IAAI,CACR,wCAAwC,OAAO,IAAI,EACnD,KAAK,CACR,CAAC;YACF,OAAO,OAAO,CAAC;QACnB,CAAC;IACL,CAAC;IAED;;;OAGG;IACO,KAAK,CAAC,2BAA2B,CACvC,OAAe;QAEf,MAAM,aAAa,GACf,MAAM,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;QACzD,MAAM,qBAAqB,GAAG,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,sBAA0C,CAAC;QAExF,2DAA2D;QAC3D,IAAI,CAAC,qBAAqB,EAAE,CAAC;YACzB,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAC7B,+DAAyC,EACzC,0CAAqB,CACxB,CAAC;QACN,CAAC;QAED,OAAO,qBAAqB,CAAC;IACjC,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,uBAAuB,CACjC,SAAiB,EACjB,eAAmC,EACnC,IAAsB;QAEtB,QAAQ,IAAI,EAAE,CAAC;YACX,KAAK,sDAAiC;gBAClC,MAAM,IAAI,CAAC,kBAAkB,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;gBAC1D,MAAM;YACV,KAAK,8CAAyB;gBAC1B,MAAM,IAAI,CAAC,8BAA8B,CACrC,SAAS,EACT,eAAe,CAClB,CAAC;gBACF,MAAM;YACV,KAAK,4CAAuB;gBACxB,MAAM,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC;gBAC5C,MAAM;YACV;gBACI,MAAM,IAAI,KAAK,CAAC,8BAA8B,IAAI,EAAE,CAAC,CAAC;QAC9D,CAAC;IACL,CAAC;IAED;;OAEG;IACO,KAAK,CAAC,kBAAkB,CAC9B,SAAiB,EACjB,eAAwB;QAExB,MAAM,MAAM,GACR,MAAM,IAAI,CAAC,qBAAqB,CAAC,+BAA+B,CAC5D,SAAS,EACT,eAAe,CAClB,CAAC;QACN,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;YAClB,MAAM,IAAI,KAAK,CAAC,2BAA2B,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;QAC/D,CAAC;IACL,CAAC;IAED;;OAEG;IACO,KAAK,CAAC,8BAA8B,CAC1C,SAAiB,EACjB,eAAwB;QAExB,MAAM,OAAO,GAAG,eAAe;YAC3B,CAAC,CAAC,SAAG,CAAC,QAAQ,CACV,uCAAuC,EACvC,yCAAyC,EACzC,SAAS,EACT,eAAe,CAClB;YACD,CAAC,CAAC,SAAG,CAAC,QAAQ,CACV,sCAAsC,EACtC,qCAAqC,EACrC,SAAS,CACZ,CAAC;QACN,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACtC,CAAC;IAED;;OAEG;IACO,KAAK,CAAC,qBAAqB,CAAC,SAAiB;QACnD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QACpE,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;YAClB,MAAM,IAAI,KAAK,CACX,qCAAqC,MAAM,CAAC,KAAK,EAAE,CACtD,CAAC;QACN,CAAC;IACL,CAAC;IAED;;OAEG;IACH,yBAAyB;QACrB,OAAO,IAAI,CAAC,qBAAqB,CAAC,uBAAuB,EAAE,CAAC;IAChE,CAAC;IAED;;OAEG;IACH,2BAA2B;QACvB,OAAO,IAAI,CAAC,qBAAqB,CAAC,mBAAmB,EAAE,CAAC;IAC5D,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,+BAA+B;QACjC,OAAO,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,EAAE,CAAC;IAC1D,CAAC;IAED;;OAEG;IACO,mBAAmB;QACzB,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;QAC7C,IAAI,CAAC,YAAY,EAAE,CAAC;YAChB,OAAO,KAAK,CAAC;QACjB,CAAC;QACD,OAAO,YAAY,CAAC,EAAE,KAAK,kBAAkB,CAAC;IAClD,CAAC;CACJ;AA5MY,gFAAkC;AAExB;IADlB,sBAAM,EAAC,+BAAiB,CAAC;;6EAC8B;AAGrC;IADlB,sBAAM,EAAC,4BAAY,CAAC;;wEACyB;AAG3B;IADlB,sBAAM,EAAC,oCAAiB,CAAC;;2EAC4B;AAGnC;IADlB,sBAAM,EAAC,+CAAqB,CAAC;sCACY,+CAAqB;iFAAC;AAG7C;IADlB,sBAAM,EAAC,gCAAc,CAAC;sCACY,gCAAc;0EAAC;AAG/B;IADlB,sBAAM,EAAC,yCAAkB,CAAC;sCACY,yCAAkB;8EAAC;AAGvC;IADlB,sBAAM,EAAC,oCAAgB,CAAC;sCACC,oCAAgB;iEAAC;6CApBlC,kCAAkC;IAD9C,0BAAU,GAAE;GACA,kCAAkC,CA4M9C;;;;;;;;;;;;;;;ACjPD,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;AAChF,oIAAkE;AAClE,wGAA8C;AAE9C,sKAAgF;AAEnE,2BAAmB,GAAG,MAAM,CAAC,qBAAqB,CAAC,CAAC;AASjE;;GAEG;AACU,6BAAqB,GAAG,+BAA+B,CAAC;AAErE;;;;;;;GAOG;AAEI,IAAM,uBAAuB,GAA7B,MAAM,uBAAuB;IAA7B;QAKH,aAAQ,GAAY,IAAI,CAAC;QAEf,yBAAoB,GAAG,IAAI,cAAO,EAAW,CAAC;IAQ5D,CAAC;IAPG,IAAI,uBAAuB;QACvB,OAAO,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC;IAC3C,CAAC;IAED,UAAU;QACN,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,6BAAqB,EAAE,IAAI,CAAC,CAAC;IAClE,CAAC;CACJ;AAfY,0DAAuB;AAGb;IADlB,sBAAM,EAAC,uCAAiB,CAAC;;kEAC8B;kCAH/C,uBAAuB;IADnC,0BAAU,GAAE;GACA,uBAAuB,CAenC;;;;;;;;;;;;AC1DD,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;AAKnE,+BAAuB,GAAG,MAAM,CAAC,yBAAyB,CAAC,CAAC;;;;;;;;;;;;ACnBzE,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;AAEhF,wGAA4E;AAC5E,wHAAkE;AAClE,wKAAuE;AACvE,oIAAkE;AAErD,gCAAwB,GAAY,cAAO,CAAC,kBAAkB,CAAC;IACxE,EAAE,EAAE,0BAA0B;IAC9B,KAAK,EAAE,kBAAkB;IACzB,SAAS,EAAE,qBAAO,EAAC,eAAe,CAAC;CACtC,CAAC,CAAC;AAGI,IAAM,yBAAyB,GAA/B,MAAM,yBAAyB;IAGlC,gBAAgB,CAAC,QAAyB;QACtC,QAAQ,CAAC,eAAe,CAAC,gCAAwB,EAAE,IAAI,CAAC,cAAc,CAAC;YACnE,OAAO,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,cAAc,CAAC,wBAAc,CAAC,gBAAgB,CAAC,EAAE,EAAE,aAAa,CAAC;SAC5F,CAAC,CAAC,CAAC;IACR,CAAC;CACJ;AARY,8DAAyB;AACkB;IAAnD,sBAAM,EAAC,oDAAuB,CAAC;;iEAA4D;oCADnF,yBAAyB;IADrC,0BAAU,GAAE;GACA,yBAAyB,CAQrC;;;;;;;;;;;;ACpCD,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;AAGhF,oIAAyE;AACzE,2GAAkC;AAClC,wIAAuD;AACvD,0KAAoF;AAG7E,IAAM,qCAAqC,GAA3C,MAAM,qCAAqC;IAO9C,OAAO;QACH,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACnD,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,MAAM;IACN,CAAC;CACJ;AAfY,sFAAqC;AAE7B;IADhB,sBAAM,EAAC,4BAAY,CAAC;;2EACuB;AAGzB;IADlB,sBAAM,EAAC,4CAAoB,CAAC;IAAE,qBAAK,EAAC,cAAK,CAAC;;6EACoB;gDALtD,qCAAqC;IADjD,0BAAU,GAAE;GACA,qCAAqC,CAejD;;;;;;;;;;;;ACtCD,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;AAEhF,wGAA8G;AAC9G,kNAGuE;AACvE,oIAA+D;AAC/D,4MAA6F;AAC7F,6JAA4E;AAC5E,2GAwBmB;AACnB,0LAG4C;AAC5C,wHAAqG;AACrG,4KAA0F;AAC1F,+IAA2F;AAC3F,qNAAoG;AACpG,mJAA8D;AAC9D,mJAA8D;AAC9D,yMAAoG;AACpG,qKAAsG;AACtG,2KAA2E;AAC3E,wKAAwE;AACxE,2KAA0E;AAC1E,kLAAkF;AAClF,qLAAoF;AACpF,gMAAuF;AACvF,yJAAuF;AACvF,wIAAyE;AACzE,wKAAuE;AACvE,iJAA+D;AAC/D,8KAA2E;AAC3E,qLAAoF;AACpF,mKAAwE;AACxE,uLAAqF;AACrF,8KAA2E;AAC3E,6LAAiH;AACjH,oLAA8E;AAC9E,yMAA6F;AAC7F,+JAAkE;AAClE,sJAA4D;AAE5D,qBAAe,IAAI,2BAAe,CAAC,IAAI,CAAC,EAAE;IACtC,mCAAwB,EAAC,IAAI,EAAE,cAAK,CAAC,CAAC;IACtC,mCAAwB,EAAC,IAAI,EAAE,8BAAqB,CAAC,CAAC;IAEtD,IAAI,CAAC,oEAAiC,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACpE,IAAI,CAAC,sCAA6B,CAAC,CAAC,SAAS,CAAC,oEAAiC,CAAC,CAAC;IACjF,IAAI,CAAC,8BAAqB,CAAC,CAAC,SAAS,CAAC,oEAAiC,CAAC,CAAC;IAEzE,IAAI,CAAC,kEAA+B,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAClE,IAAI,CAAC,oCAA2B,CAAC,CAAC,SAAS,CAAC,kEAA+B,CAAC,CAAC;IAC7E,IAAI,CAAC,oCAA2B,CAAC,CAAC,SAAS,CAAC,oCAA2B,CAAC,CAAC;IAEzE,IAAI,CAAC,8CAAqC,CAAC,CAAC,cAAc,CACtD,GAAG,CAAC,EAAE;QACF,MAAM,UAAU,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAA4B,sDAAwB,CAAC,CAAC;QAC1F,MAAM,MAAM,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAA8B,oCAA2B,CAAC,CAAC;QAC3F,OAAO,UAAU,CAAC,WAAW,CAAwC,0CAAiC,EAAE,MAAM,CAAC,CAAC;IACpH,CAAC,CACJ,CAAC;IAEF,IAAI,CAAC,sCAA6B,CAAC;SAC9B,cAAc,CAAC,GAAG,CAAC,EAAE;QAClB,MAAM,UAAU,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAA4B,sDAAwB,CAAC,CAAC;QAC1F,MAAM,MAAM,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAA8B,oCAA2B,CAAC,CAAC;QAC3F,OAAO,UAAU,CAAC,WAAW,CAAgC,kCAAyB,EAAE,MAAM,CAAC,CAAC;IACpG,CAAC,CAAC;SACD,gBAAgB,EAAE,CAAC;IAExB,+CAAqB,EAAC,IAAI,CAAC,CAAC;IAE5B,IAAI,CAAC,iFAAyC,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAC5E,IAAI,CAAC,2CAAkC,CAAC,CAAC,SAAS,CAAC,iFAAyC,CAAC,CAAC;IAC9F,IAAI,CAAC,0BAAiB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACpD,IAAI,CAAC,sBAAa,CAAC,CAAC,SAAS,CAAC,0BAAiB,CAAC,CAAC;IAEjD,IAAI,CAAC,wDAA0B,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAC7D,IAAI,CAAC,gDAAqC,CAAC,CAAC,SAAS,CAAC,wDAA0B,CAAC,CAAC;IAClF,IAAI,CAAC,0BAAmB,CAAC,CAAC,SAAS,CAAC,wDAA0B,CAAC,CAAC;IAChE,IAAI,CAAC,2CAAyB,CAAC,CAAC,SAAS,CAAC,wDAA0B,CAAC,CAAC;IAEtE,IAAI,CAAC,2CAAqB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACxD,IAAI,CAAC,oCAAiB,CAAC,CAAC,SAAS,CAAC,2CAAqB,CAAC,CAAC;IACzD,mCAAwB,EAAC,IAAI,EAAE,+BAAsB,CAAC,CAAC;IACvD,IAAI,CAAC,0DAA8B,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACjE,IAAI,CAAC,mDAAuB,CAAC,CAAC,SAAS,CAAC,0DAA8B,CAAC,CAAC;IACxE,IAAI,CAAC,0BAAiB,CAAC,CAAC,SAAS,CAAC,mDAAuB,CAAC,CAAC;IAC3D,IAAI,CAAC,yCAA+B,CAAC,CAAC,SAAS,CAAC,mDAAuB,CAAC,CAAC;IAEzE,IAAI,CAAC,uDAAyB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAC5D,IAAI,CAAC,+BAAsB,CAAC,CAAC,SAAS,CAAC,uDAAyB,CAAC,CAAC;IAElE,IAAI,CAAC,+BAAsB,CAAC,CAAC,EAAE,CAAC,yDAA0B,CAAC,CAAC,gBAAgB,EAAE,CAAC;IAC/E,IAAI,CAAC,+BAAsB,CAAC,CAAC,EAAE,CAAC,uDAAyB,CAAC,CAAC,gBAAgB,EAAE,CAAC;IAC9E,IAAI,CAAC,+BAAsB,CAAC,CAAC,EAAE,CAAC,qDAAwB,CAAC,CAAC,gBAAgB,EAAE,CAAC;IAC7E,IAAI,CAAC,+BAAsB,CAAC,CAAC,EAAE,CAAC,yDAA0B,CAAC,CAAC,gBAAgB,EAAE,CAAC;IAC/E,IAAI,CAAC,+BAAsB,CAAC,CAAC,EAAE,CAAC,oEAA+B,CAAC,CAAC,gBAAgB,EAAE,CAAC;IAEpF,IAAI,CAAC,yCAA+B,CAAC,CAAC,EAAE,CAAC,iFAAqC,CAAC,CAAC,gBAAgB,EAAE,CAAC;IAEnG,IAAI,CAAC,+BAAsB,CAAC,CAAC,EAAE,CAAC,mCAA0B,CAAC,CAAC,gBAAgB,EAAE,CAAC;IAC/E,mCAAwB,EAAC,IAAI,EAAE,qBAAY,CAAC,CAAC;IAE7C,IAAI,CAAC,+CAAuB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAC1D,IAAI,CAAC,2CAAmB,CAAC,CAAC,SAAS,CAAC,+CAAuB,CAAC,CAAC;IAC7D,IAAI,CAAC,yCAA+B,CAAC,CAAC,SAAS,CAAC,2CAAmB,CAAC,CAAC;IAErE,IAAI,CAAC,gCAAgB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACnD,IAAI,CAAC,4BAAY,CAAC,CAAC,SAAS,CAAC,gCAAgB,CAAC,CAAC;IAE/C,IAAI,CAAC,oDAAuB,CAAC,CAAC,SAAS,CAAiB,OAAO,CAAC,EAAE,CAAC,CAAC,OAAuB,EAAE,EAAE;QAC3F,MAAM,iBAAiB,GAAG,OAAO,CAAC,SAAS,CAAC,GAAG,CAAsB,2CAAmB,CAAC,CAAC;QAC1F,OAAO;YACH,OAAO,EAAE,CAAC,GAAG,IAAe,EAAE,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;YACzD,SAAS,EAAE,CAAC,GAAG,IAAe,EAAE,EAAE,eAAC,wBAAiB,CAAC,QAAQ,IAAI,CAAC,mBAAO,CAAC,SAAS,wDAAG,GAAG,IAAI,CAAC,mCAAI,IAAI,CAAC;YACvG,SAAS,EAAE,CAAC,GAAG,IAAe,EAAE,EAAE,eAAC,wBAAiB,CAAC,QAAQ,IAAI,CAAC,mBAAO,CAAC,SAAS,wDAAG,GAAG,IAAI,CAAC,mCAAI,IAAI,CAAC;YACvG,SAAS,EAAE,OAAO,CAAC,SAAS;SAC/B,CAAC;IACN,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,wDAAyB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAC5D,IAAI,CAAC,0BAAmB,CAAC,CAAC,SAAS,CAAC,wDAAyB,CAAC,CAAC;IAC/D,IAAI,CAAC,kEAAgC,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACnE,IAAI,CAAC,6CAAoB,CAAC,CAAC,SAAS,CAAC,kEAAgC,CAAC,CAAC;IAEvE,IAAI,CAAC,wDAAyB,CAAC,CAAC,EAAE,CAAC,iEAA6B,CAAC,CAAC,gBAAgB,EAAE,CAAC;IACrF,IAAI,CAAC,gCAAuB,CAAC,CAAC,EAAE,CAAC,+DAA2B,CAAC,CAAC,gBAAgB,EAAE,CAAC;IAEjF,IAAI,CAAC,0EAAiC,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACpE,IAAI,CAAC,iDAA0B,CAAC,CAAC,SAAS,CAAC,0EAAiC,CAAC,CAAC;IAE9E,IAAI,CAAC,0BAAiB,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;QACzC,MAAM,UAAU,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAA4B,sDAAwB,CAAC,CAAC;QAC1F,MAAM,MAAM,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAA0B,gCAAuB,CAAC,CAAC;QACnF,OAAO,UAAU,CAAC,WAAW,CAAoB,iCAAwB,EAAE,MAAM,CAAC,CAAC;IACvF,CAAC,CAAC,CAAC,gBAAgB,EAAE,CAAC;IACtB,IAAI,CAAC,mCAA0B,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAC7D,IAAI,CAAC,uBAAgB,CAAC,CAAC,SAAS,CAAC,mCAA0B,CAAC,CAAC;IAC7D,IAAI,CAAC,2DAA0B,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAC7D,IAAI,CAAC,mCAAyB,CAAC,CAAC,SAAS,CAAC,2DAA0B,CAAC,CAAC;IAEtE,IAAI,CAAC,0EAAkC,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACrE,IAAI,CAAC,+CAAqB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACxD,IAAI,CAAC,yCAAkB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACrD,IAAI,CAAC,sCAA6B,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAChE,IAAI,CAAC,uBAAgB,CAAC,CAAC,SAAS,CAAC,sCAA6B,CAAC,CAAC;AACpE,CAAC,CAAC,CAAC;;;;;;;;;;;;AC3LH,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;AAEhF,wGAAkC;AAElC,sNAAyG;AAEzG,uJAIsC;AAEzB,iCAAyB,GAAG,UAAG,CAAC,QAAQ,CAAC,2BAA2B,EAAE,sBAAsB,CAAC,CAAC;AAC9F,wCAAgC,GAAG,mDAAmD,CAAC;AACvF,wCAAgC,GAAG,2CAA2C,CAAC;AAC/E,mCAA2B,GAAG,sCAAsC,CAAC;AACrE,iDAAyC,GAAG,mCAAmC,CAAC;AAEhF,yCAAiC,GAAG,kCAAkC,CAAC;AAEvE,8BAAsB,GAAqB;IACpD,IAAI,EAAE,QAAQ;IACd,UAAU,EAAE;QACR,CAAC,wCAAgC,CAAC,EAAE;YAChC,KAAK,EAAE,iCAAyB;YAChC,WAAW,EAAE,UAAG,CAAC,QAAQ,CAAC,2CAA2C,EACjE;+EAC+D,CAAC;YACpE,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,EAAE;YACX,WAAW,EAAE;gBACT,UAAU,EAAE,IAAI;gBAChB,cAAc,EAAE;oBACZ,SAAS,EAAE,eAAe;oBAC1B,cAAc,EAAE,KAAK;oBACrB,gBAAgB,EAAE,IAAI;oBACtB,aAAa,EAAE,KAAK;iBACvB;aACJ;SACJ;QACD,CAAC,wCAAgC,CAAC,EAAE;YAChC,KAAK,EAAE,UAAG,CAAC,QAAQ,CAAC,qCAAqC,EAAE,yBAAyB,CAAC;YACrF,mBAAmB,EAAE,UAAG,CAAC,QAAQ,CAAC,6CAA6C,EAAE;;;;;;;;;;;4HAW+B,CAAC;YACjH,IAAI,EAAE,OAAO;YACb,KAAK,EAAE;gBACH,IAAI,EAAE,QAAQ;gBACd,UAAU,EAAE;oBACR,KAAK,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,UAAU,EAAE;4BACR,OAAO,EAAE;gCACL,IAAI,EAAE,QAAQ;gCACd,WAAW,EAAE,yBAAyB;6BACzC;4BACD,UAAU,EAAE;gCACR,IAAI,EAAE,QAAQ;gCACd,WAAW,EAAE,sDAAsD;6BACtE,EAAE,OAAO,EAAE;gCACR,IAAI,EAAE,QAAQ;gCACd,WAAW,EAAE,mDAAmD;6BACnE;yBACJ;qBACJ;oBACD,eAAe,EAAE;wBACb,IAAI,EAAE,QAAQ;wBACd,oBAAoB,EAAE,IAAI;wBAC1B,WAAW,EAAE,qCAAqC;qBACrD;oBACD,cAAc,EAAE;wBACZ,IAAI,EAAE,QAAQ;wBACd,oBAAoB,EAAE,KAAK;wBAC3B,WAAW,EAAE,2EAA2E;wBACxF,UAAU,EAAE;4BACR,aAAa,EAAE;gCACX,IAAI,EAAE,SAAS;gCACf,OAAO,EAAE,IAAI;gCACb,WAAW,EAAE;mGACsD;6BACtE;4BACD,YAAY,EAAE;gCACV,IAAI,EAAE,SAAS;gCACf,OAAO,EAAE,IAAI;gCACb,WAAW,EAAE,0HAA0H;6BAC1I;yBACJ;qBACJ;iBACJ;gBACD,oBAAoB,EAAE,KAAK;aAC9B;YACD,OAAO,EAAE,EAAE;SACd;QACD,CAAC,mCAA2B,CAAC,EAAE;YAC3B,KAAK,EAAE,UAAG,CAAC,QAAQ,CAAC,gCAAgC,EAAE,iBAAiB,CAAC;YACxE,mBAAmB,EAAE,UAAG,CAAC,QAAQ,CAAC,wCAAwC,EACtE,6GAA6G,CAAC;YAClH,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,CAAC;YACV,OAAO,EAAE,CAAC;SACb;QACD,CAAC,iDAAyC,CAAC,EAAE;YACzC,KAAK,EAAE,UAAG,CAAC,QAAQ,CAAC,yCAAyC,EAAE,2BAA2B,CAAC;YAC3F,mBAAmB,EAAE,UAAG,CAAC,QAAQ,CAAC,iDAAiD,EAC/E;;;;mDAImC,CAAC;YACxC,IAAI,EAAE,QAAQ;YACd,IAAI,EAAE,CAAC,GAAG,uCAAkB,CAAC;YAC7B,OAAO,EAAE,0CAAqB;SACjC;QACD,CAAC,yCAAiC,CAAC,EAAE;YACjC,KAAK,EAAE,UAAG,CAAC,QAAQ,CAAC,qDAAqD,EAAE,wBAAwB,CAAC;YACpG,mBAAmB,EAAE,UAAG,CAAC,QAAQ,CAAC,2DAA2D,EAAE;;;;;QAKnG,EACQ,8BAA8B,CACjC;YACD,IAAI,EAAE,QAAQ;YACd,oBAAoB,EAAE;gBAClB,IAAI,EAAE,QAAQ;gBACd,UAAU,EAAE;oBACR,aAAa,EAAE;wBACX,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE,UAAG,CAAC,QAAQ,CAAC,6DAA6D,EAAE,yCAAyC,CAAC;qBACtI;iBACJ;gBACD,QAAQ,EAAE,CAAC,eAAe,CAAC;gBAC3B,oBAAoB,EAAE,KAAK;aAC9B;YACD,OAAO,EAAE,EAAE;SACd;KACJ;CACJ,CAAC;AAqBW,yBAAiB,GAAG,MAAM,CAAC,mBAAmB,CAAC,CAAC;AAG7D,SAAgB,qBAAqB,CAAC,IAAqB;IACvD,IAAI,CAAC,yBAAiB,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;QACzC,MAAM,OAAO,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAyB,oDAAsB,CAAC,CAAC;QAClF,OAAO,OAAO,CAAC,8BAAsB,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC,gBAAgB,EAAE,CAAC;AAC1B,CAAC;AALD,sDAKC;AAED;;;;;;;;;;GAUG;AACI,MAAM,4BAA4B,GAAG,CAAC,OAAuB,EAAE,KAAa,EAAU,EAAE;IAC3F,oEAAoE;IACpE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QACjB,OAAO,CAAC,CAAC;IACb,CAAC;IAED,+EAA+E;IAC/E,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;QAChF,OAAO,CAAC,CAAC;IACb,CAAC;IAED,6CAA6C;IAC7C,IAAI,MAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,KAAI,OAAO,CAAC,KAAK,CAAC,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC,OAAO,KAAK,KAAK,CAAC,OAAO,EAAE,CAAC;QACrF,OAAO,CAAC,CAAC,CAAC;IACd,CAAC;IAED,IAAI,MAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,UAAU,KAAI,OAAO,CAAC,KAAK,CAAC,UAAU,IAAI,OAAO,CAAC,KAAK,CAAC,UAAU,KAAK,KAAK,CAAC,UAAU,EAAE,CAAC;QACjG,OAAO,CAAC,CAAC,CAAC;IACd,CAAC;IAED,IAAI,MAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,KAAI,OAAO,CAAC,KAAK,CAAC,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC,OAAO,KAAK,KAAK,CAAC,OAAO,EAAE,CAAC;QACrF,OAAO,CAAC,CAAC,CAAC;IACd,CAAC;IAED,IAAI,WAAW,GAAG,CAAC,CAAC;IAEpB,iCAAiC;IACjC,IAAI,MAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,UAAU,KAAI,OAAO,CAAC,KAAK,CAAC,UAAU,KAAK,KAAK,CAAC,UAAU,EAAE,CAAC;QACrE,WAAW,IAAI,CAAC,CAAC;IACrB,CAAC;IAED,gCAAgC;IAChC,IAAI,MAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,KAAI,OAAO,CAAC,KAAK,CAAC,OAAO,KAAK,KAAK,CAAC,OAAO,EAAE,CAAC;QAC5D,WAAW,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,iCAAiC;IACjC,IAAI,MAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,KAAI,OAAO,CAAC,KAAK,CAAC,OAAO,KAAK,KAAK,CAAC,OAAO,EAAE,CAAC;QAC5D,WAAW,IAAI,GAAG,CAAC;IACvB,CAAC;IAED,OAAO,WAAW,CAAC;AACvB,CAAC,CAAC;AA1CW,oCAA4B,gCA0CvC;;;;;;;;;;;;;;;;ACrPF,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;AAChF,wGAA4E;AAC5E,wHAA6E;AAC7E,oIAAiF;AAK1E,IAAM,qBAAqB,6BAA3B,MAAM,qBAAqB;IAA3B;QAQO,cAAS,GAAG,IAAI,2BAAoB,EAAE,CAAC;QAE9B,uBAAkB,GAAG,IAAI,cAAO,EAAQ,CAAC;QAC5D,gBAAW,GAAgB,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;IAmC7D,CAAC;IAhCa,IAAI;QACV,IAAI,CAAC,SAAS,CAAC,IAAI,CACf,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,KAAK,CAAC,EAAE;YAC/C,IAAI,KAAK,CAAC,cAAc,KAAK,uBAAqB,CAAC,eAAe,EAAE,CAAC;gBACjE,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;YACnC,CAAC;QACL,CAAC,CAAC,CACL,CAAC;IACN,CAAC;IAED,KAAK,CAAC,mBAAmB,CAAC,KAAa,EAAE,aAAqC;QAC1E,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;QAC1C,MAAM,gBAAgB,GAAG,EAAE,GAAG,QAAQ,CAAC,KAAK,CAAC,EAAE,GAAG,aAAa,EAAE,CAAC;QAClE,QAAQ,CAAC,KAAK,CAAC,GAAG,gBAAgB,CAAC;QACnC,IAAI,CAAC;YACD,MAAM,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,uBAAqB,CAAC,eAAe,EAAE,QAAQ,EAAE,yBAAe,CAAC,IAAI,CAAC,CAAC;QAC5G,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACT,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;YAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,6CAA6C,GAAG,CAAC,CAAC,CAAC;QACxE,CAAC;IACL,CAAC;IAED,KAAK,CAAC,gBAAgB,CAAC,KAAa;QAChC,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;QAC1C,OAAO,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IAED,KAAK,CAAC,WAAW;QACb,MAAM,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;QACnC,MAAM,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAA0B,uBAAqB,CAAC,eAAe,CAAC,CAAC;QAC5G,OAAO,KAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,KAAK,EAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;IACzC,CAAC;;AA7CQ,sDAAqB;AAMd,qCAAe,GAAG,2BAA2B,CAAC;AAH3C;IADlB,sBAAM,EAAC,cAAO,CAAC;;qDACmB;AAEE;IAApC,sBAAM,EAAC,2BAAiB,CAAC;;gEAAgD;AAShE;IADT,6BAAa,GAAE;;;;iDASf;gCAtBQ,qBAAqB;IADjC,0BAAU,GAAE;GACA,qBAAqB,CA8CjC;;;;;;;;;;;;ACpED,gFAAgF;AAChF,8CAA8C;AAC9C,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;AAEhF,oIAAkE;AAClE,wGAAkC;AAClC,wHAAmF;AACnF,6JAAyG;AACzG,iJAA4F;AAGrF,IAAM,0BAA0B,GAAhC,MAAM,0BAA0B;IAMzB,MAAM,CAAC,OAAe;QAC5B,OAAO,OAAO,YAAY,UAAG,IAAI,OAAO,CAAC,MAAM,KAAK,kDAA2B,CAAC;IACpF,CAAC;IAED,SAAS,CAAC,OAAe;QACrB,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,OAAO,CAAC,OAAe;QACnB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC;YAAC,OAAO,SAAS,CAAC;QAAC,CAAC;QAChD,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAE,CAAC,CAAC;IAC3E,CAAC;IAED,OAAO,CAAC,OAAe;QACnB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC;YAAC,OAAO,SAAS,CAAC;QAAC,CAAC;QAChD,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAE,CAAC,CAAC;IAC3E,CAAC;IAED,WAAW,CAAC,OAAe;QACvB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC;YAAC,OAAO,SAAS,CAAC;QAAC,CAAC;QAChD,OAAO,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAE,CAAC,CAAC;IAC/E,CAAC;IAED,UAAU,CAAC,OAAe;QACtB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC;YAAC,OAAO,SAAS,CAAC;QAAC,CAAC;QAChD,OAAO,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAE,CAAC,CAAC;IAC9E,CAAC;IAES,oBAAoB,CAAC,OAAe;QAC1C,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC;YAAC,OAAO,SAAS,CAAC;QAAC,CAAC;QAChD,MAAM,QAAQ,GAAG,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAChE,IAAI,CAAC,QAAQ,EAAE,CAAC;YAAC,OAAO,SAAS,CAAC;QAAC,CAAC;QACpC,MAAM,EAAE,YAAY,EAAE,GAAG,EAAE,GAAG,QAAQ,CAAC;QACvC,MAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QAChE,OAAO,QAAQ,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC;IACzC,CAAC;CACJ;AA1CY,gEAA0B;AAEO;IAAzC,sBAAM,EAAC,uBAAa,CAAC;sCAAmC,uBAAa;iEAAC;AACzB;IAA7C,sBAAM,EAAC,iDAA0B,CAAC;sCAAqC,iDAA0B;4EAAC;AACrD;IAA7C,sBAAM,EAAC,oCAAiB,CAAC;;mEAAuD;qCAJxE,0BAA0B;IADtC,0BAAU,GAAE;GACA,0BAA0B,CA0CtC;;;;;;;;;;;;ACjED,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;AAEhF,wGAAwC;AACxC,wHAA4E;AAC5E,oIAAkE;AAClE,6JAAyE;AACzE,0KAAkF;AAYlF,IAAiB,gBAAgB,CAEhC;AAFD,WAAiB,gBAAgB;IAChB,oBAAG,GAAG,KAAK,CAAC;AAC7B,CAAC,EAFgB,gBAAgB,gCAAhB,gBAAgB,QAEhC;AAEY,qBAAa,GAAe;IACrC,EAAE,EAAE,eAAe;IACnB,WAAW,EAAE,iCAAiC;IAC9C,IAAI,EAAE,MAAM;IACZ,KAAK,EAAE,MAAM;IACb,WAAW,EAAE,0BAAY,EAAC,MAAM,CAAC;IACjC,iBAAiB,EAAE,IAAI;IACvB,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,gBAAgB,CAAC,GAAG,EAAE,WAAW,EAAE,gCAAgC,EAAE,CAAC;CACxF,CAAC;AAGK,IAAM,wBAAwB,GAA9B,MAAM,wBAAwB;IAUjC,iBAAiB,CAAC,OAAgC;QAC9C,OAAO,CAAC,gBAAgB,CAAC,qBAAa,EAAE,IAAI,CAAC,CAAC;QAC9C,OAAO,CAAC,cAAc,CAAC,qBAAa,EAAE,IAAI,CAAC,CAAC;IAChD,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,OAAoC,EAAE,CAAoB;QACvE,OAAO,OAAO,CAAC,QAAQ,CAAC,IAAI,KAAK,qBAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,OAAoC,EAAE,CAAoB;QACpE,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAEtC,IAAI,CAAC,GAAG,EAAE,CAAC;YAAC,OAAO,SAAS,CAAC;QAAC,CAAC;QAE/B,IAAI,CAAC;YACD,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACrD,OAAO;gBACH,QAAQ,EAAE,OAAO,CAAC,QAAQ;gBAC1B,KAAK,EAAE,MAAM,IAAI,CAAC,SAAS,CAAC,wBAAwB,CAAC,GAAG,CAAC;gBACzD,YAAY,EAAE,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE;aACzC,CAAC;QACN,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,OAAO,SAAS,CAAC;QACrB,CAAC;IACL,CAAC;IAES,KAAK,CAAC,KAAK,CAAC,OAAoC;QACtD,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,KAAK,qBAAa,CAAC,IAAI,IAAI,OAAO,CAAC,GAAG,KAAK,SAAS,EAAE,CAAC;YAC5E,OAAO,SAAS,CAAC;QACrB,CAAC;QAED,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC;QACzB,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IAED,OAAO,CAAC,OAAoC,EAAE,OAA0B;QACpE,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAC7C,CAAC;IAED,KAAK,CAAC,IAAI,CAAC,OAAoC,EAAE,OAA0B;QACvE,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACtC,IAAI,CAAC,GAAG,EAAE,CAAC;YACP,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;QAC1D,CAAC;QACD,MAAM,kBAAI,EAAC,IAAI,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;IACxC,CAAC;IAES,KAAK,CAAC,YAAY,CAAC,OAAe;QACxC,MAAM,IAAI,GAAG,IAAI,WAAI,CAAC,WAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC,CAAC;QAC5D,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;YACnB,MAAM,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;YACpD,MAAM,MAAM,GAAG,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;YACvE,KAAK,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;gBACvB,IAAI,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC;oBACrC,OAAO,GAAG,CAAC;gBACf,CAAC;YACL,CAAC;QACL,CAAC;QACD,MAAM,MAAM,GAAG,IAAI,UAAG,CAAC,OAAO,CAAC,CAAC;QAChC,IAAI,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC;YACxC,OAAO,MAAM,CAAC;QAClB,CAAC;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;CACJ;AA1EY,4DAAwB;AAEd;IADlB,sBAAM,EAAC,0BAAW,CAAC;sCACY,0BAAW;6DAAC;AAGzB;IADlB,sBAAM,EAAC,oCAAgB,CAAC;sCACK,oCAAgB;2DAAC;AAG5B;IADlB,sBAAM,EAAC,uBAAa,CAAC;;+DAC0B;mCARvC,wBAAwB;IADpC,0BAAU,GAAE;GACA,wBAAwB,CA0EpC;;;;;;;;;;;;ACzHD,gFAAgF;AAChF,8CAA8C;AAC9C,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;AAEhF,oIAAiF;AACjF,wGAA6C;AAE7C,wHAA6E;AAC7E,mJAA0E;AAC1E,+IAA+D;AAGxD,IAAM,iCAAiC,GAAvC,MAAM,iCAAiC;IAAvC;QAEO,YAAO,GAAyB;YACtC;gBACI,EAAE,EAAE,cAAc;gBAClB,eAAe,EAAE;oBACb,oCAAoC;oBACpC,gBAAgB;oBAChB,iCAAiC;iBACpC;gBACD,WAAW,EAAE,wDAAwD;aACxE;YACD;gBACI,EAAE,EAAE,mBAAmB;gBACvB,eAAe,EAAE;oBACb,eAAe;oBACf,oCAAoC;oBACpC,iCAAiC;iBACpC;gBACD,WAAW,EAAE,uDAAuD;aACvE;YACD;gBACI,EAAE,EAAE,yBAAyB;gBAC7B,eAAe,EAAE;oBACb,gBAAgB;oBAChB,oCAAoC;oBACpC,iCAAiC;iBACpC;gBACD,WAAW,EAAE,gDAAgD;aAChE;YACD;gBACI,EAAE,EAAE,mBAAmB;gBACvB,eAAe,EAAE;oBACb,gBAAgB;oBAChB,oCAAoC;oBACpC,iCAAiC;iBACpC;gBACD,WAAW,EAAE,mEAAmE;aACnF;SACJ,CAAC;QACiB,uBAAkB,GAAG,IAAI,cAAO,EAAQ,CAAC;QACnD,gBAAW,GAAgB,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;QAK/C,WAAM,GAAG,IAAI,uBAAQ,EAAQ,CAAC;IA8FrD,CAAC;IA7FG,IAAI,KAAK;QACL,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;IAC/B,CAAC;IAGS,IAAI;QACV,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE;YACnC,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,EAAE,CAAC,EAAE;gBAC5C,IAAI,EAAE,CAAC,cAAc,KAAK,uDAAiC,EAAE,CAAC;oBAC1D,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC9B,CAAC;YACL,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QAC1B,CAAC,EAAE,GAAG,CAAC,EAAE;YACL,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,QAAQ,CAAC,KAAyB;QAC9B,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,CAAC,CAAC;QAC3D,IAAI,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC;YACb,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QAC9B,CAAC;aAAM,CAAC;YACJ,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC;QACD,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;IACnC,CAAC;IAED,WAAW,CAAC,EAAU;QAClB,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QACrD,IAAI,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC;YACb,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;QACnC,CAAC;IACL,CAAC;IAED,UAAU;QACN,OAAO,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;IAC7B,CAAC;IAED,YAAY,CAAC,EAAU;QACnB,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QAClD,IAAI,CAAC,KAAK,EAAE,CAAC;YACT,OAAO,SAAS,CAAC;QACrB,CAAC;QACD,IAAI,KAAK,CAAC,eAAe,EAAE,CAAC;YACxB,OAAO,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;QACnC,CAAC;QACD,OAAO,KAAK,CAAC,eAAe,CAAC;IACjC,CAAC;IAED;;;OAGG;IACH,mBAAmB,CAAC,OAAe,EAAE,OAAe;QAChD,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,OAAO,CAAC,CAAC;QACvD,IAAI,KAAK,EAAE,CAAC;YACR,KAAK,CAAC,eAAe,GAAG,OAAO,CAAC;YAChC,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;QACnC,CAAC;IACL,CAAC;IAED;;OAEG;IACO,kBAAkB;QACxB,MAAM,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAgD,uDAAiC,CAAC,IAAI,EAAE,CAAC;QAClI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACzB,IAAI,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,aAAa,EAAE,CAAC;gBACrD,KAAK,CAAC,eAAe,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC;YAC3D,CAAC;iBAAM,CAAC;gBACJ,OAAO,KAAK,CAAC,eAAe,CAAC;YACjC,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACO,gBAAgB;QACtB,MAAM,GAAG,GAAkD,EAAE,CAAC;QAC9D,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;YAC/B,IAAI,KAAK,CAAC,eAAe,EAAE,CAAC;gBACxB,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,aAAa,EAAE,KAAK,CAAC,eAAe,EAAE,CAAC;YAC7D,CAAC;QACL,CAAC;QACD,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,uDAAiC,EAAE,GAAG,EAAE,yBAAe,CAAC,IAAI,CAAC,CAAC;IAC7F,CAAC;CACJ;AA5IY,8EAAiC;AA4CvB;IADlB,sBAAM,EAAC,2BAAiB,CAAC;;4EAC8B;AAQ9C;IADT,6BAAa,GAAE;;;;6DAaf;4CAhEQ,iCAAiC;IAD7C,0BAAU,GAAE;GACA,iCAAiC,CA4I7C;;;;;;;;;;;;;;;;ACpKD,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;AAChF,wGAAyD;AACzD,oIAIsC;AACtC,2JAIkD;AAClD,2GAqBmB;AAGZ,IAAM,+BAA+B,GAArC,MAAM,+BAA+B;IAExC,sBAAsB,CAAC,EAAU;QAC7B,IAAI,CAAC,QAAQ,CAAC,sBAAsB,CAAC,EAAE,CAAC,CAAC;IAC7C,CAAC;IAGD,WAAW,CAAC,QAA2C;QACnD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IAED,IAAI,CAAC,EAAU,EAAE,KAAkD;QAC/D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IAClC,CAAC;IAED,QAAQ,CAAC,SAAiB,EAAE,MAAc,EAAE,WAAmB;QAC3D,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;IAClE,CAAC;IAED,KAAK,CAAC,EAAU,EAAE,KAAY;QAC1B,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IACnC,CAAC;IAED,kBAAkB,CAAC,QAA+B;QAC9C,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;IAC/C,CAAC;IAED,oBAAoB,CAAC,EAAU;QAC3B,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC;IAC3C,CAAC;CACJ;AA9BY,0EAA+B;0CAA/B,+BAA+B;IAD3C,0BAAU,GAAE;GACA,+BAA+B,CA8B3C;AAUM,IAAM,iCAAiC,yCAAvC,MAAM,iCACT,SAAQ,yCAAgC;IADrC;;QAmLO,YAAO,GAAG,IAAI,GAAG,EAAuB,CAAC;QACzC,aAAQ,GAAG,IAAI,GAAG,EAAgC,CAAC;IAuGjE,CAAC;IApRG,oBAAoB;IACpB,kBAAkB,CAAC,QAA+B;QAC9C,IAAI,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACvC,CAAC;IACD,oBAAoB;IACpB,oBAAoB,CAAC,EAAU;QAC3B,IAAI,CAAC,oBAAoB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,4CAA4C;IAC5C,sBAAsB,CAAC,EAAU;QAC7B,IAAI,CAAC,8BAA8B,CAAC,EAAE,CAAC,CAAC;IAC5C,CAAC;IAED;;OAEG;IACO,KAAK,CAAC,8BAA8B,CAAC,EAAU;QACrD,IAAI,CAAC;YACD,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,4BAA4B,EAAE,CAAC;YACjF,MAAM,OAAO,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC,CAAiB,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;YACvE,IAAI,OAAO,EAAE,CAAC;gBACV,+CAA+C;gBAC/C,IAAI,CAAC,oBAAoB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAChC,IAAI,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACtC,CAAC;QACL,CAAC;QAAC,OAAO,GAAG,EAAE,CAAC;YACX,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,8CAA8C,EAAE,GAAG,CAAC,CAAC;QAC3E,CAAC;IACL,CAAC;IAqBQ,iBAAiB,CAAC,MAAiD;QACxE,IAAI,UAAU,GAAG,KAAK,CAAC;QACvB,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE,CAAC;YACzB,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC;gBACnD,OAAO,CAAC,IAAI,CAAC,kCAAkC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;gBAC3D,SAAS;YACb,CAAC;YACD,IAAI,sBAAa,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;gBAC1B,IAAI,CAAC,cAAc,CAAC,IAAI,CACpB,IAAI,KAAK,CACL,KAAK,EACL,0BAA0B,CACtB,GAAG,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,UAAU,CACtC,KAAK,CAAC,EAAE,CACX,CACJ,CACJ,CACJ,CAAC;gBACF,UAAU,GAAG,IAAI,CAAC;YACtB,CAAC;iBAAM,CAAC;gBACJ,IAAI,CAAC,cAAc,CAAC,IAAI,CACpB,IAAI,KAAK,CACL,IAAI,CAAC,2BAA2B,CAC5B,KAAK,CACR,EACD,0BAA0B,CACtB,GAAG,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,UAAU,CACtC,KAAK,CAAC,EAAE,CACX,CACJ,CACJ,CACJ,CAAC;gBACF,UAAU,GAAG,IAAI,CAAC;YACtB,CAAC;QACL,CAAC;QACD,IAAI,UAAU,EAAE,CAAC;YACb,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;QAC7D,CAAC;IACL,CAAC;IAGkB,IAAI;QACnB,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAE9B,MAAM,aAAa,GACf,IAAI,CAAC,0BAA0B,CAAC,gBAAgB,EAAE,CAAC;QACvD,MAAM,QAAQ,GAAG,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC3D,MAAM,mBAAmB,GACrB,IAAI,CAAC,gBAAgB,CAAC,4BAA4B,EAAE,CAAC;QAEzD,OAAO,CAAC,UAAU,CAAC,CAAC,mBAAmB,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,CACvD,OAAO,CAAC,EAAE;YACN,MAAM,yBAAyB,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YAC7C,IAAI,yBAAyB,CAAC,MAAM,KAAK,WAAW,EAAE,CAAC;gBACnD,IAAI,CAAC,iBAAiB,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC;YAC5D,CAAC;iBAAM,CAAC;gBACJ,IAAI,CAAC,MAAM,CAAC,KAAK,CACb,4DAA4D,EAC5D,yBAAyB,CAAC,MAAM,CACnC,CAAC;YACN,CAAC;YACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACtC,sDAAsD;gBACtD,MAAM,mBAAmB,GAAG,OAAO,CAAC,CAAC,CAEQ,CAAC;gBAC9C,IAAI,mBAAmB,CAAC,MAAM,KAAK,WAAW,EAAE,CAAC;oBAC7C,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;gBACtD,CAAC;qBAAM,CAAC;oBACJ,IAAI,CAAC,MAAM,CAAC,KAAK,CACb,qCAAqC,EACrC,mBAAmB,CAAC,MAAM,CAC7B,CAAC;gBACN,CAAC;YACL,CAAC;YACD,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC,CACJ,CAAC;IACN,CAAC;IAED,2BAA2B,CACvB,WAAkC;QAElC,OAAO;YACH,GAAG,WAAW;YACd,OAAO,EAAE,KAAK,EAAE,OAA6B,EAAE,iBAAqC,EAAE,EAAE;gBACpF,MAAM,SAAS,GAAG,GAAG,mCAAiC,CAAC,cAAc,EAAE,EAAE,CAAC;gBAC1E,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;gBACtC,iBAAiB,aAAjB,iBAAiB,uBAAjB,iBAAiB,CAAE,uBAAuB,CAAC,GAAG,EAAE;oBAC5C,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBAC5C,CAAC,CAAC,CAAC;gBACH,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAChD,WAAW,CAAC,EAAE,EACd,OAAO,EACP,SAAS,EACT,iBAAiB,CACpB,CAAC;gBACF,IAAI,wCAA2B,EAAC,QAAQ,CAAC,IAAI,0CAA6B,EAAC,QAAQ,CAAC,EAAE,CAAC;oBACnF,OAAO,QAAQ,CAAC;gBACpB,CAAC;gBACD,IAAI,kDAAqC,EAAC,QAAQ,CAAC,EAAE,CAAC;oBAClD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;wBACvC,MAAM,cAAc,GAAG;4BACnB,EAAE,EAAE,QAAQ,CAAC,QAAQ;4BACrB,MAAM,EAAE,EAAE;yBACb,CAAC;wBACF,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;oBACxD,CAAC;oBACD,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAE,CAAC;oBACzD,OAAO;wBACH,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;qBACxC,CAAC;gBACN,CAAC;gBACD,IAAI,CAAC,MAAM,CAAC,KAAK,CACb,uEAAuE,WAAW,CAAC,EAAE,qDAAqD,EAC1I,QAAQ,CACX,CAAC;gBACF,OAAO,QAAQ,CAAC;YACpB,CAAC;SACJ,CAAC;IACN,CAAC;IAKD,KAAK,CAAC,CAAC,WAAW,CACd,KAAkB;QAElB,IAAI,OAAO,GAAG,CAAC,CAAC,CAAC;QACjB,OAAO,IAAI,EAAE,CAAC;YACV,IAAI,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBACpC,OAAO,EAAE,CAAC;gBACV,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBACpC,IAAI,KAAK,KAAK,SAAS,EAAE,CAAC;oBACtB,sBAAsB;oBACtB,MAAM;gBACV,CAAC;gBACD,IAAI,KAAK,KAAK,SAAS,EAAE,CAAC;oBACtB,MAAM,KAAK,CAAC;gBAChB,CAAC;YACL,CAAC;iBAAM,CAAC;gBACJ,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;oBAClC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;oBACxB,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;gBAC1B,CAAC,CAAC,CAAC;YACP,CAAC;QACL,CAAC;QACD,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IAClC,CAAC;IAED,8DAA8D;IAC9D,IAAI,CAAC,EAAU,EAAE,KAAkD;QAC/D,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC;YACxB,MAAM,cAAc,GAAG;gBACnB,EAAE;gBACF,MAAM,EAAE,EAAE;aACb,CAAC;YACF,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,EAAE,cAAc,CAAC,CAAC;QACzC,CAAC;QACD,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAE,CAAC;QAC1C,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/B,IAAI,WAAW,CAAC,OAAO,EAAE,CAAC;YACtB,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC/B,CAAC;IACL,CAAC;IAED,yCAAyC;IACzC,KAAK,CAAC,QAAQ,CAAC,EAAU,EAAE,MAAc,EAAE,UAAkB;;QACzD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC;YACzB,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,4BAA4B,EAAE,sDAAsD,EAAE,CAAC;QAC1H,CAAC;QACD,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAE,CAAC;QACvC,MAAM,IAAI,GAAG,aAAO,CAAC,KAAK,0CAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,MAAM,CAAC,CAAC;QACvD,IAAI,IAAI,EAAE,CAAC;YACP,IAAI,CAAC;gBACD,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YAC1C,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACb,MAAM,YAAY,GAAG,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBAC5E,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,yBAAyB,MAAM,MAAM,YAAY,EAAE,EAAE,CAAC;YACzF,CAAC;YAAA;AAAC;QACN,CAAC;QACD,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,MAAM,sDAAsD,EAAE,CAAC;IAC3G,CAAC;IAED,kFAAkF;IAClF,KAAK,CAAC,EAAU,EAAE,KAAY;;QAC1B,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC;YACxB,MAAM,cAAc,GAAG;gBACnB,EAAE;gBACF,MAAM,EAAE,EAAE;aACb,CAAC;YACF,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,EAAE,cAAc,CAAC,CAAC;QACzC,CAAC;QACD,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAE,CAAC;QAC1C,iBAAW,CAAC,MAAM,4DAAG,KAAK,CAAC,CAAC;IAChC,CAAC;IAEQ,KAAK,CAAC,oBAAoB,CAAC,OAA8B;;QAC9D,MAAM,IAAI,CAAC,WAAW,CAAC;QACvB,MAAM,YAAY,GAAG,aAAC,MAAM,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,0CAAE,yBAAyB,0CAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,KAAK,OAAO,CAAC,OAAO,CAAC,CAAC;QAC3J,MAAM,UAAU,GAAG,kBAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,UAAU,mCAAI,OAAO,CAAC,UAAU,CAAC;QAClE,IAAI,UAAU,EAAE,CAAC;YACb,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;YAC3D,IAAI,KAAK,EAAE,CAAC;gBACR,OAAO,CAAC,KAAK,CAAC,CAAC;YACnB,CAAC;QACL,CAAC;QACD,qIAAqI;QACrI,OAAO,SAAS,CAAC;IACrB,CAAC;IAED,KAAK,CAAC,qBAAqB,CAAC,SAAiB;QACzC,MAAM,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;QAC/B,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;QAC5D,IAAI,QAAQ,EAAE,CAAC;YACX,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE,CAAC;gBAC7B,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;gBACnD,IAAI,MAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,MAAM,CAAC,MAAM,MAAK,OAAO,EAAE,CAAC;oBACnC,OAAO,KAAK,CAAC;gBACjB,CAAC;YACL,CAAC;YACD,OAAO,SAAS,CAAC;QACrB,CAAC;QACD,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;QAC7D,OAAO,cAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,MAAM,CAAC,MAAM,MAAK,OAAO,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,SAAS,CAAC;IAChF,CAAC;;AA1RQ,8EAAiC;AAuD3B,gDAAc,GAAW,CAAC,CAAC;AAlDhC;IADT,sBAAM,EAAC,mCAA0B,CAAC;;wEACiB;AAiC1C;IADT,sBAAM,EAAC,8CAAqC,CAAC;;2EACoB;AAGxD;IADT,sBAAM,EAAC,sCAA6B,CAAC;;2EACoB;AAGhD;IADT,sBAAM,EAAC,+BAA+B,CAAC;sCACtB,+BAA+B;iEAAC;AAG/B;IADlB,sBAAM,EAAC,cAAO,CAAC;;iEACmB;AAGzB;IADT,sBAAM,EAAC,qCAAoB,CAAC;sCACG,qCAAoB;+EAAC;AAG3C;IADT,sBAAM,EAAC,0BAAiB,CAAC;;0EACmB;AA6C1B;IADlB,6BAAa,GAAE;;;;6DAsCf;4CAvIQ,iCAAiC;IAD7C,0BAAU,GAAE;GACA,iCAAiC,CA2R7C;AAED,MAAM,yBAAyB,GAAG,CAAC,GAAY,EAAY,EAAE;IACzD,2CAA2C;IAC3C,MAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAChD,MAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACrC,MAAM,cAAc,GAAa,EAAE,CAAC;IAEpC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;QACjB,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACnC,MAAM,KAAK,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAC5C,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QACjC,MAAM,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAClD,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE,CAAC;YACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACvC,cAAc,CAAC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9C,CAAC;QACL,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,OAAO,cAAc,CAAC;AAC1B,CAAC,CAAC;AAEF,MAAM,YAAY,GAAG,CAAC,QAAgB,EAAU,EAAE;IAC9C,MAAM,OAAO,GAAG,mBAAmB,CAAC;IACpC,MAAM,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACrC,OAAO,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC;AAEF,MAAM,0BAA0B,GAAG,CAC/B,mBAAwC,EACb,EAAE,CAAC,CAAC;IAC/B,GAAG,CACC,MAAqB,EACrB,IAAO;QAEP,MAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;QAC9B,IAAI,IAAI,KAAK,SAAS,IAAI,OAAO,QAAQ,KAAK,UAAU,EAAE,CAAC;YACvD,OAAO,KAAK,WACR,GAAG,IAA0C;gBAE7C,MAAM,aAAa,GAAG,mBAAmB,EAAE,CAAC;gBAC5C,aAAa,CAAC,UAAU,CACpB,kBAAkB,CACrB,CAAC;gBACF,MAAM,gBAAgB,GAAG,yBAAyB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5D,aAAa,CAAC,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAClD,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;oBACV,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;wBACzB,GAAG,CACC,OAA0B,EAC1B,KAAS;4BAET,IAAI,KAAK,KAAK,yBAAyB,EAAE,CAAC;gCACtC,OAAO,CAAC,GAAG,KAA+D,EAAE,EAAE,CAAC,OAAO,CAAC,uBAAuB,CAAC,GAAG,EAAE;oCAChH,aAAa,CAAC,UAAU,CAAC,oBAAoB,EAAE,sCAAqB,CAAC,OAAO,CAAC,CAAC;oCAC9E,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;gCACf,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC3B,CAAC;4BACD,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC;wBAC1B,CAAC;qBACJ,CAAC,CAAC;gBACP,CAAC;gBACD,IAAI,CAAC;oBACD,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;oBAClD,IAAI,0CAA6B,EAAC,MAAM,CAAC,EAAE,CAAC;wBACxC,aAAa,CAAC,UAAU,CAAC,4BAA4B,CAAC,CAAC;wBACvD,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;wBAC7B,MAAM,YAAY,GAAG;4BACjB,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC;gCACzB,IAAI,KAAK,EAAE,MAAM,IAAI,IAAI,MAAM,EAAE,CAAC;oCAC9B,aAAa,CAAC,MAAM,CAAC,CAAC,+BAAkB,EAAC,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;oCACvE,MAAM,IAAI,CAAC;gCACf,CAAC;gCACD,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gCAC3B,aAAa,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;4BAC9C,CAAC;yBACJ,CAAC;wBACF,OAAO;4BACH,GAAG,MAAM;4BACT,MAAM,EAAE,YAAY;yBACvB,CAAC;oBACN,CAAC;yBAAM,CAAC;wBACJ,aAAa,CAAC,UAAU,CAAC,qBAAqB,CAAC,CAAC;wBAChD,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;wBACjD,OAAO,MAAM,CAAC;oBAClB,CAAC;gBACL,CAAC;gBAAC,OAAO,GAAG,EAAE,CAAC;oBACX,aAAa,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC;oBAC9C,IAAI,GAAG,YAAY,KAAK,EAAE,CAAC;wBACvB,aAAa,CAAC,UAAU,CACpB,GAAG,CAAC,OAAO,EACX,sCAAqB,CAAC,KAAK,CAC9B,CAAC;oBACN,CAAC;oBACD,MAAM,GAAG,CAAC;gBACd,CAAC;YACL,CAAC,CAAC;QACN,CAAC;QACD,OAAO,QAAQ,CAAC;IACpB,CAAC;CACJ,CAAC,CAAC;;;;;;;;;;;;AC1dH,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;AAEhF,wHAA4D;AAC5D,oIAAkE;AAClE,qJAAuE;AAEvE,mKAA4E;AAC5E,mJAAuH;AAGhH,IAAM,gCAAgC,GAAtC,MAAM,gCAAiC,SAAQ,iDAAwB;IAKjE,KAAK,CAAC,WAAW,CACtB,aAA4B,EAC5B,oBAAiC;QAEjC,MAAM,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAmB,sDAAgC,EAAE,EAAE,CAAC,CAAC;QAE3G,MAAM,GAAG,GAAG,aAAa,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACxC,MAAM,eAAe,GAAG,gCAAoB,EAAC,eAAe,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,oBAAoB,CAAC,OAAO,CAAC,CAAC;QAC5G,IAAI,eAAe,aAAf,eAAe,uBAAf,eAAe,CAAE,eAAe,EAAE,CAAC;YACnC,0DAA0D;YAC1D,oBAAoB,CAAC,QAAQ,GAAG;gBAC5B,GAAG,eAAe,CAAC,eAAe;gBAClC,GAAG,oBAAoB,CAAC,QAAQ;aACnC,CAAC;QACN,CAAC;QACD,IAAI,eAAe,aAAf,eAAe,uBAAf,eAAe,CAAE,cAAc,EAAE,CAAC;YAClC,gEAAgE;YAChE,oBAAoB,CAAC,cAAc,GAAG;gBAClC,GAAG,eAAe,CAAC,cAAc;gBACjC,GAAG,oBAAoB,CAAC,cAAc;aACzC,CAAC;QACN,CAAC;QAED,OAAO,KAAK,CAAC,WAAW,CAAC,aAAa,EAAE,oBAAoB,CAAC,CAAC;IAClE,CAAC;CACJ;AA9BY,4EAAgC;AAG/B;IADT,sBAAM,EAAC,2BAAiB,CAAC;;2EACqB;2CAHtC,gCAAgC;IAD5C,0BAAU,GAAE;GACA,gCAAgC,CA8B5C;AAEM,MAAM,oBAAoB,GAAG,CAAC,eAAiC,EAAE,OAAe,EAAE,UAAkB,EAAE,OAAgB,EAAkB,EAAE;IAC7I,MAAM,mBAAmB,GAAG,+BAAc,CAAC,iBAAiB,CAAC,eAAe,EACxE,OAAO,CAAC,EAAE,CAAC,sDAA4B,EAAC,OAAO,EAAE;QAC7C,OAAO;QACP,UAAU;QACV,OAAO;KACV,CAAC,CAAC,CAAC;IACR,uGAAuG;IACvG,MAAM,eAAe,GAAG,mBAAmB,CAAC,WAAW,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC,EAAE,EAAoB,CAAC,CAAC;IACxH,OAAO,eAAe,CAAC;AAC3B,CAAC,CAAC;AAVW,4BAAoB,wBAU/B;;;;;;;;;;;;AClEF,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;AAEhF,wGAAwE;AACxE,wHAAwD;AACxD,oIAAiF;AACjF,2GAAiH;AACjH,6HAA6D;AAC7D,6JAAyE;AAEzE,mJAA4F;AAC5F,wJAA0E;AAC1E,wFAAqC;AACrC,2KAA0E;AAE1E;;GAEG;AACH,MAAM,mBAAmB,GAAG;IACxB,EAAE,EAAE,UAAU;IACd,IAAI,EAAE,UAAU;IAChB,WAAW,EAAE,0EAA0E;IACvF,MAAM,EAAE;;;;;;;;;;mBAUO;IACf,UAAU,EAAE,eAAe;CAC9B,CAAC;AAEF,IAAY,mBAIX;AAJD,WAAY,mBAAmB;IAC3B,yEAAc;IACd,iEAAU;IACV,6DAAQ;AACZ,CAAC,EAJW,mBAAmB,mCAAnB,mBAAmB,QAI9B;AAED,SAAgB,4BAA4B,CAAC,MAA2B;IACpE,QAAQ,MAAM,EAAE,CAAC;QACb,KAAK,mBAAmB,CAAC,IAAI;YACzB,OAAO,0BAA0B,CAAC;QACtC,KAAK,mBAAmB,CAAC,MAAM;YAC3B,OAAO,gCAAgC,CAAC;QAC5C;YACI,OAAO,yBAAyB,CAAC;IACzC,CAAC;AACL,CAAC;AATD,oEASC;AAsDM,IAAM,yCAAyC,GAA/C,MAAM,yCAAyC;IAA/C;QAaH,mGAAmG;QACzF,wBAAmB,GAAG,IAAI,GAAG,EAAU,CAAC;QAElD,iFAAiF;QACvE,yBAAoB,GAAG,IAAI,GAAG,EAAuC,CAAC;QAEhF,yFAAyF;QAC/E,sBAAiB,GAAG,IAAI,GAAG,EAAuC,CAAC;QAE7E,oEAAoE;QAC1D,2BAAsB,GAAG,IAAI,GAAG,EAAU,CAAC;QAErD,oEAAoE;QAC1D,uBAAkB,GAAG,IAAI,GAAG,CAAS,CAAC,uDAAyB,CAAC,CAAC,CAAC;QAE5E,iGAAiG;QACvF,2BAAsB,GAAG,IAAI,GAAG,EAAU,CAAC;QAErD,2FAA2F;QACjF,iBAAY,GAAG,IAAI,GAAG,EAA2B,CAAC;QAE5D,8FAA8F;QACpF,cAAS,GAAG,IAAI,2BAAoB,EAAE,CAAC;QAE9B,kDAA6C,GAAG,IAAI,cAAO,EAAY,CAAC;QAClF,2CAAsC,GAAoB,IAAI,CAAC,6CAA6C,CAAC,KAAK,CAAC;QAEzG,mCAA8B,GAAG,IAAI,cAAO,EAAQ,CAAC;QAC/D,4BAAuB,GAAgB,IAAI,CAAC,8BAA8B,CAAC,KAAK,CAAC;IA00B9F,CAAC;IAv0Ba,IAAI;QACV,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,KAAK,CAAC,EAAE;YACzC,IAAI,KAAK,CAAC,cAAc,KAAK,sDAAgC,EAAE,CAAC;gBAC5D,IAAI,CAAC,MAAM,EAAE,CAAC;YAClB,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAED;;OAEG;IACO,KAAK,CAAC,MAAM;QAClB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;QACzB,yGAAyG;QACzG,MAAM,wBAAwB,GAAG,IAAI,GAAG,EAAuC,CAAC;QAChF,MAAM,uBAAuB,GAAG,IAAI,GAAG,EAAU,CAAC;QAClD,MAAM,qBAAqB,GAAG,IAAI,GAAG,EAAuC,CAAC;QAC7E,MAAM,gBAAgB,GAAG,IAAI,GAAG,EAA2B,CAAC;QAE5D,mDAAmD;QACnD,+DAA+D;QAC/D,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAC3D,MAAM,IAAI,CAAC,wBAAwB,CAC/B,wBAAwB,EAAE,uBAAuB,EAAE,qBAAqB,EAAE,YAAY,EAAE,CAAC,EAAE,mBAAmB,CAAC,UAAU,CAAC,CAAC,CAAC,sCAAsC;QAEtK,4DAA4D;QAC5D,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAChD,MAAM,MAAM,GAAG,UAAG,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;YACzC,MAAM,IAAI,CAAC,wBAAwB,CAC/B,wBAAwB,EAAE,uBAAuB,EAAE,qBAAqB,EAAE,MAAM,EAAE,CAAC,EAAE,mBAAmB,CAAC,MAAM,CAAC,CAAC,CAAC,kCAAkC;QAC5J,CAAC;QAED,qDAAqD;QACrD,MAAM,IAAI,CAAC,oBAAoB,CAAC,wBAAwB,EAAE,uBAAuB,EAAE,qBAAqB,EAAE,gBAAgB,CAAC,CAAC;QAE5H,IAAI,CAAC,oBAAoB,GAAG,wBAAwB,CAAC;QACrD,IAAI,CAAC,mBAAmB,GAAG,uBAAuB,CAAC;QACnD,IAAI,CAAC,iBAAiB,GAAG,qBAAqB,CAAC;QAC/C,IAAI,CAAC,YAAY,GAAG,gBAAgB,CAAC;QAErC,IAAI,CAAC,8BAA8B,CAAC,IAAI,EAAE,CAAC;IAC/C,CAAC;IAED;;;;;;;;;OASG;IACO,WAAW,CACjB,wBAAkE,EAClE,EAAU,EACV,QAAgB,EAChB,SAAiB,EACjB,qBAA+D,EAC/D,QAAgB,EAChB,MAA2B;QAE3B,sEAAsE;QACtE,MAAM,eAAe,GAAG,IAAI,CAAC,uBAAuB,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;QAEpE,oGAAoG;QACpG,IAAI,SAAS,EAAE,CAAC;YACZ,qBAAqB,CAAC,GAAG,CAAC,SAAS,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,eAAe,EAAE,MAAM,EAAE,CAAC,CAAC;QACzG,CAAC;QAED,MAAM,aAAa,GAAG,wBAAwB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAEvD,IAAI,aAAa,EAAE,CAAC;YAChB,0DAA0D;YAC1D,IAAI,SAAS,IAAI,aAAa,CAAC,SAAS,KAAK,SAAS,EAAE,CAAC;gBACrD,gEAAgE;gBAChE,wBAAwB,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,eAAe,EAAE,MAAM,EAAE,CAAC,CAAC;gBACjG,OAAO;YACX,CAAC;YAED,yEAAyE;YACzE,IAAI,QAAQ,GAAG,aAAa,CAAC,QAAQ,EAAE,CAAC;gBACpC,wBAAwB,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,eAAe,EAAE,MAAM,EAAE,CAAC,CAAC;gBACjG,OAAO;YACX,CAAC;iBAAM,IAAI,QAAQ,KAAK,aAAa,CAAC,QAAQ,EAAE,CAAC;gBAC7C,8EAA8E;gBAC9E,MAAM,iBAAiB,GAAG,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,sBAAsB,aAAa,CAAC,SAAS,iBAAiB,SAAS,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;gBACpI,OAAO,CAAC,IAAI,CAAC,sCAAsC,EAAE,yBAAyB,iBAAiB,EAAE,CAAC,CAAC;YACvG,CAAC;YACD,OAAO;QACX,CAAC;QAED,4CAA4C;QAC5C,wBAAwB,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,eAAe,EAAE,MAAM,EAAE,CAAC,CAAC;IACrG,CAAC;IAED;;;;;OAKG;IACO,uBAAuB,CAAC,EAAU,EAAE,SAAiB;QAC3D,oFAAoF;QACpF,iEAAiE;QACjE,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QAC9C,OAAO,GAAG,EAAE,IAAI,UAAU,EAAE,CAAC;IACjC,CAAC;IAED;;;;OAIG;IACO,UAAU,CAAC,GAAW;QAC5B,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAClC,MAAM,IAAI,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;YACnC,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,2BAA2B;QACnD,CAAC;QACD,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACvD,CAAC;IAED;;;;;;;;OAQG;IACO,2BAA2B,CACjC,SAAiB,EACjB,qBAA+D,EAC/D,wBAAkE,EAClE,uBAAoC;QAEpC,yDAAyD;QACzD,MAAM,oBAAoB,GAAG,qBAAqB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAClE,IAAI,CAAC,oBAAoB,EAAE,CAAC;YACxB,OAAO,SAAS,CAAC;QACrB,CAAC;QACD,MAAM,UAAU,GAAG,oBAAoB,CAAC,EAAE,CAAC;QAC3C,qBAAqB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACxC,uBAAuB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAE1C,sIAAsI;QACtI,MAAM,mBAAmB,GAAG,wBAAwB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACrE,IAAI,mBAAmB,IAAI,mBAAmB,CAAC,SAAS,KAAK,SAAS,EAAE,CAAC;YACrE,wBAAwB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YAC5C,uFAAuF;YACvF,MAAM,2BAA2B,GAAG,KAAK,CAAC,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC;iBACzE,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,UAAU,CAAC;iBAChC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,mCAAmC;YAEjF,+EAA+E;YAC/E,IAAI,2BAA2B,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBACzC,MAAM,6BAA6B,GAAG,2BAA2B,CAAC,CAAC,CAAC,CAAC;gBACrE,wBAAwB,CAAC,GAAG,CAAC,UAAU,EAAE,6BAA6B,CAAC,CAAC;YAC5E,CAAC;QAEL,CAAC;QAED,OAAO,UAAU,CAAC;IACtB,CAAC;IAED;;;;;;;OAOG;IACO,KAAK,CAAC,oBAAoB,CAChC,wBAAkE,EAClE,uBAAoC,EACpC,qBAA+D,EAC/D,gBAA8C;QAE9C,MAAM,QAAQ,GAAG,CAAC,CAAC,CAAC,sCAAsC;QAE1D,MAAM,qBAAqB,GAAG,IAAI,GAAG,EAAU,CAAC;QAEhD,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,sBAAsB,EAAE,CAAC;YACjD,MAAM,OAAO,GAAG,UAAG,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;YAC3C,MAAM,UAAU,GAAG,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,CAAC;YAC5D,MAAM,SAAS,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;YACrC,MAAM,eAAe,GAAG,IAAI,CAAC,uBAAuB,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;YAE5E,gBAAgB,CAAC,GAAG,CAAC,SAAS,EAAE,EAAE,GAAG,EAAE,OAAO,EAAE,UAAU,EAAE,eAAe,EAAE,CAAC,CAAC;YAC/E,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;YAEzF,IAAI,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC;gBACzC,uBAAuB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;gBACvC,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACzD,IAAI,CAAC,WAAW,CAAC,wBAAwB,EAAE,UAAU,EAAE,WAAW,CAAC,KAAK,EAAE,SAAS,EAAE,qBAAqB,EAAE,QAAQ,EAAE,mBAAmB,CAAC,IAAI,CAAC,CAAC;gBAChJ,qBAAqB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAC1C,CAAC;QACL,CAAC;QAED,IAAI,CAAC,6CAA6C,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC;QAE3F,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,KAAK,EAAE,KAAuB,EAAE,EAAE;YACpF,0DAA0D;YAC1D,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC;gBACnF,OAAO;YACX,CAAC;YACD,yCAAyC;YACzC,MAAM,kBAAkB,GAAG,IAAI,GAAG,EAAU,CAAC;YAE7C,uBAAuB;YACvB,KAAK,MAAM,WAAW,IAAI,KAAK,CAAC,UAAU,EAAE,EAAE,CAAC;gBAC3C,MAAM,aAAa,GAAG,WAAW,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;gBACtD,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;gBAEtD,IAAI,QAAQ,EAAE,CAAC;oBACX,MAAM,iBAAiB,GAAG,IAAI,CAAC,2BAA2B,CAAC,aAAa,EAAE,qBAAqB,EAAE,wBAAwB,EAAE,uBAAuB,CAAC,CAAC;oBACpJ,IAAI,iBAAiB,EAAE,CAAC;wBACpB,kBAAkB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;oBAC9C,CAAC;gBACL,CAAC;YACL,CAAC;YAED,uBAAuB;YACvB,KAAK,MAAM,WAAW,IAAI,KAAK,CAAC,UAAU,EAAE,EAAE,CAAC;gBAC3C,MAAM,aAAa,GAAG,WAAW,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;gBACtD,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;gBAEtD,IAAI,QAAQ,EAAE,CAAC;oBACX,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;oBAC9D,IAAI,CAAC,WAAW,CACZ,IAAI,CAAC,oBAAoB,EACzB,QAAQ,CAAC,UAAU,EACnB,WAAW,CAAC,KAAK,EACjB,aAAa,EACb,IAAI,CAAC,iBAAiB,EACtB,QAAQ,EACR,mBAAmB,CAAC,IAAI,CAC3B,CAAC;oBACF,kBAAkB,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;gBAChD,CAAC;YACL,CAAC;YAED,6BAA6B;YAC7B,KAAK,MAAM,SAAS,IAAI,KAAK,CAAC,QAAQ,EAAE,EAAE,CAAC;gBACvC,MAAM,aAAa,GAAG,SAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;gBACpD,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;gBAEtD,IAAI,QAAQ,EAAE,CAAC;oBACX,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;oBAC9D,IAAI,CAAC,WAAW,CACZ,IAAI,CAAC,oBAAoB,EACzB,QAAQ,CAAC,UAAU,EACnB,WAAW,CAAC,KAAK,EACjB,aAAa,EACb,IAAI,CAAC,iBAAiB,EACtB,QAAQ,EACR,mBAAmB,CAAC,IAAI,CAC3B,CAAC;oBACF,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;oBAC5C,kBAAkB,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;gBAChD,CAAC;YACL,CAAC;YAED,MAAM,uBAAuB,GAAG,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAC/D,IAAI,uBAAuB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBACrC,IAAI,CAAC,6CAA6C,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;YACrF,CAAC;YAAA,CAAC;QACN,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAED;;;;OAIG;IACO,yBAAyB,CAAC,QAAgB;QAChD,MAAM,GAAG,GAAG,UAAG,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QACvC,OAAO,IAAI,CAAC,0BAA0B,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1D,CAAC;IAED;;;;;;;;;OASG;IACO,KAAK,CAAC,wBAAwB,CACpC,wBAAkE,EAClE,uBAAoC,EACpC,qBAA+D,EAC/D,MAAW,EACX,QAAgB,EAChB,mBAAwC;QAExC,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC;YAC3C,OAAO;QACX,CAAC;QACD,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACpD,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE,CAAC;YAC9B,OAAO;QACX,CAAC;QACD,MAAM,qBAAqB,GAAG,IAAI,GAAG,EAAU,CAAC;QAChD,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC/B,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;gBACf,SAAS;YACb,CAAC;YACD,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC9B,IAAI,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;gBACnD,uBAAuB,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAChD,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACzD,MAAM,UAAU,GAAG,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC9D,IAAI,CAAC,WAAW,CAAC,wBAAwB,EAAE,UAAU,EAAE,WAAW,CAAC,KAAK,EAAE,OAAO,CAAC,QAAQ,EAAE,EAAE,qBAAqB,EAAE,QAAQ,EAAE,mBAAmB,CAAC,CAAC;gBACpJ,qBAAqB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAC1C,CAAC;QACL,CAAC;QACD,IAAI,CAAC,6CAA6C,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC;QAC3F,IAAI,CAAC,8BAA8B,CAAC,IAAI,EAAE,CAAC;QAE3C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;QACvF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,KAAK,EAAE,KAAuB,EAAE,EAAE;YACpF,6CAA6C;YAC7C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC;gBAC1F,OAAO;YACX,CAAC;YACD,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC;gBACxF,IAAI,CAAC,8BAA8B,CAAC,IAAI,EAAE,CAAC;YAC/C,CAAC;YAED,yCAAyC;YACzC,MAAM,kBAAkB,GAAG,IAAI,GAAG,EAAU,CAAC;YAE7C,0BAA0B;YAC1B,KAAK,MAAM,WAAW,IAAI,KAAK,CAAC,UAAU,EAAE,EAAE,CAAC;gBAC3C,MAAM,SAAS,GAAG,WAAW,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;gBAClD,IAAI,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC;oBAC1C,MAAM,iBAAiB,GAAG,IAAI,CAAC,2BAA2B,CAAC,SAAS,EAAE,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBACnJ,IAAI,iBAAiB,EAAE,CAAC;wBACpB,kBAAkB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;oBAC9C,CAAC;gBACL,CAAC;YACL,CAAC;YAED,0BAA0B;YAC1B,KAAK,MAAM,WAAW,IAAI,KAAK,CAAC,UAAU,EAAE,EAAE,CAAC;gBAC3C,MAAM,SAAS,GAAG,WAAW,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;gBAClD,IAAI,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC;oBAC1C,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;oBACtE,MAAM,UAAU,GAAG,IAAI,CAAC,0BAA0B,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACnF,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,oBAAoB,EAAE,UAAU,EAAE,WAAW,CAAC,KAAK,EAAE,SAAS,EAAE,IAAI,CAAC,iBAAiB,EAAE,QAAQ,EAAE,mBAAmB,CAAC,CAAC;oBAC7I,kBAAkB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBACvC,CAAC;YACL,CAAC;YAED,sBAAsB;YACtB,KAAK,MAAM,SAAS,IAAI,KAAK,CAAC,QAAQ,EAAE,EAAE,CAAC;gBACvC,IAAI,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,KAAK,MAAM,CAAC,QAAQ,EAAE;oBAC1D,IAAI,CAAC,yBAAyB,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;oBAC9D,MAAM,SAAS,GAAG,SAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;oBAChD,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;oBACxC,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;oBACpE,MAAM,UAAU,GAAG,IAAI,CAAC,0BAA0B,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACjF,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,oBAAoB,EAAE,UAAU,EAAE,WAAW,CAAC,KAAK,EAAE,SAAS,EAAE,IAAI,CAAC,iBAAiB,EAAE,QAAQ,EAAE,mBAAmB,CAAC,CAAC;oBAC7I,kBAAkB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBACvC,CAAC;YACL,CAAC;YAED,MAAM,uBAAuB,GAAG,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAC/D,IAAI,uBAAuB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBACrC,IAAI,CAAC,6CAA6C,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;YACrF,CAAC;YAAA,CAAC;QACN,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAED;;;;OAIG;IACO,yBAAyB,CAAC,SAAiB;QACjD,OAAO,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IAClD,CAAC;IAED;;;OAGG;IACH,gCAAgC;QAC5B,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;IACnD,CAAC;IAED;;;OAGG;IACH,yBAAyB;QACrB,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IAC/C,CAAC;IAED;;;OAGG;IACH,gBAAgB;QACZ,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;IACnD,CAAC;IAED;;;;OAIG;IACH,KAAK,CAAC,mBAAmB,CAAC,UAAiD;QACvE,IAAI,UAAU,CAAC,cAAc,KAAK,SAAS,EAAE,CAAC;YAC1C,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,CAAC;YACpC,KAAK,MAAM,IAAI,IAAI,UAAU,CAAC,cAAc,EAAE,CAAC;gBAC3C,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAC1C,CAAC;QACL,CAAC;QAED,IAAI,UAAU,CAAC,UAAU,KAAK,SAAS,EAAE,CAAC;YACtC,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;YAChC,KAAK,MAAM,GAAG,IAAI,UAAU,CAAC,UAAU,EAAE,CAAC;gBACtC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACrC,CAAC;YACD,uDAAuD;YACvD,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,uDAAyB,CAAC,CAAC;QAC3D,CAAC;QAED,IAAI,UAAU,CAAC,SAAS,KAAK,SAAS,EAAE,CAAC;YACrC,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,CAAC;YACpC,KAAK,MAAM,IAAI,IAAI,UAAU,CAAC,SAAS,EAAE,CAAC;gBACtC,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAC1C,CAAC;QACL,CAAC;QAED,+EAA+E;QAC/E,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC;IACxB,CAAC;IAED;;;OAGG;IACO,KAAK,CAAC,wBAAwB;QACpC,MAAM,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,sDAAgC,CAAC,CAAC;QAC3E,IAAI,eAAe,IAAI,eAAe,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACvD,OAAO,UAAG,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;QAC7C,CAAC;QACD,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,CAAC;QACvE,OAAO,IAAI,UAAG,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;IAC/D,CAAC;IAED;;;;OAIG;IACO,KAAK,CAAC,cAAc,CAAC,UAAkB;QAC7C,OAAO,CAAC,MAAM,IAAI,CAAC,wBAAwB,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,UAAU,GAAG,uDAAyB,EAAE,CAAC,CAAC;IACxG,CAAC;IAED;;;;OAIG;IACO,0BAA0B,CAAC,QAAgB;QACjD,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;YACxC,IAAI,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC;gBACzB,OAAO,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAC1C,CAAC;QACL,CAAC;QACD,OAAO,QAAQ,CAAC;IACpB,CAAC;IAED,8DAA8D;IAE9D,0BAA0B,CAAC,EAAU;QACjC,OAAO,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC7C,CAAC;IAED,oCAAoC,CAAC,EAAU;QAC3C,MAAM,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAChD,IAAI,CAAC,KAAK,EAAE,CAAC;YACT,OAAO,SAAS,CAAC;QACrB,CAAC;QAED,OAAO;YACH,EAAE,EAAE,KAAK,CAAC,EAAE;YACZ,QAAQ,EAAE,KAAK,CAAC,QAAQ;YACxB,eAAe,EAAE,KAAK,CAAC,eAAe;YACtC,QAAQ,EAAE,KAAK,CAAC,QAAQ;SAC3B,CAAC;IACN,CAAC;IAED,oBAAoB,CAAC,EAAU;QAC3B,MAAM,SAAS,GAA+B,EAAE,CAAC;QAEjD,8CAA8C;QAC9C,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACnC,IAAI,KAAK,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC;gBAClB,SAAS,CAAC,IAAI,CAAC;oBACX,EAAE,EAAE,KAAK,CAAC,EAAE;oBACZ,QAAQ,EAAE,KAAK,CAAC,QAAQ;oBACxB,eAAe,EAAE,KAAK,CAAC,eAAe;oBACtC,QAAQ,EAAE,KAAK,CAAC,QAAQ;iBAC3B,CAAC,CAAC;YACP,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,mCAAmC;QACnC,OAAO,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;IAC7D,CAAC;IAED,8BAA8B;QAC1B,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC,CAAC;IACxD,CAAC;IAED,KAAK,CAAC,iCAAiC,CAAC,EAAU,EAAE,cAAuB;QACvE,MAAM,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,cAAc,CAAC,CAAC;IAChD,CAAC;IAED,KAAK,CAAC,wCAAwC,CAAC,EAAU,EAAE,cAAuB;QAC9E,MAAM,IAAI,CAAC,iCAAiC,CAAC,EAAE,EAAE,cAAc,CAAC,CAAC;IACrE,CAAC;IAED,KAAK,CAAC,+BAA+B,CAAC,EAAU,EAAE,eAAuB;QACrE,yDAAyD;QACzD,MAAM,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CACvE,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,eAAe,KAAK,eAAe,CACvD,CAAC;QAEF,IAAI,aAAa,EAAE,CAAC;YAChB,MAAM,GAAG,GAAG,IAAI,UAAG,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YAC7C,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAC5D,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1B,CAAC;aAAM,CAAC;YACJ,oEAAoE;YACpE,MAAM,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;QAChC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACO,KAAK,CAAC,YAAY,CAAC,EAAU,EAAE,cAAuB;QAC5D,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;QAChD,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC;YAC9C,MAAM,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,EAAE,qBAAY,CAAC,UAAU,CAAC,cAAc,aAAd,cAAc,cAAd,cAAc,GAAI,EAAE,CAAC,CAAC,CAAC;QAChG,CAAC;QACD,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QAClE,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAChC,CAAC;IAED,KAAK,CAAC,iCAAiC,CAAC,EAAU,EAAE,eAAuB;QACvE,yDAAyD;QACzD,MAAM,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CACvE,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,eAAe,KAAK,eAAe,CACvD,CAAC;QAEF,IAAI,aAAa,EAAE,CAAC;YAChB,MAAM,SAAS,GAAG,aAAa,CAAC,SAAS,CAAC;YAE1C,+BAA+B;YAC/B,MAAM,GAAG,GAAG,IAAI,UAAG,CAAC,SAAS,CAAC,CAAC;YAC/B,IAAI,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC;gBACrC,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACvC,CAAC;QACL,CAAC;IACL,CAAC;IAED,KAAK,CAAC,qCAAqC,CAAC,EAAU;QAClD,8CAA8C;QAC9C,MAAM,cAAc,GAAG,IAAI,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC;QAErD,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YAC9B,OAAO,CAAC,mBAAmB;QAC/B,CAAC;QAED,0CAA0C;QAC1C,KAAK,MAAM,aAAa,IAAI,cAAc,EAAE,CAAC;YACzC,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAClE,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,eAAe,KAAK,aAAa,CAAC,eAAe,CACrE,CAAC;YAEF,IAAI,QAAQ,EAAE,CAAC;gBACX,MAAM,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;gBACrC,+BAA+B;gBAC/B,MAAM,GAAG,GAAG,IAAI,UAAG,CAAC,SAAS,CAAC,CAAC;gBAC/B,IAAI,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC;oBACrC,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBACvC,CAAC;YACL,CAAC;QACL,CAAC;IACL,CAAC;IAED,KAAK,CAAC,oBAAoB,CAAC,EAAU,EAAE,eAAuB;QAC1D,MAAM,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CACvE,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,eAAe,KAAK,eAAe,CACvD,CAAC;QAEF,IAAI,aAAa,EAAE,CAAC;YAChB,8CAA8C;YAC9C,MAAM,cAAc,GAAG,IAAI,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC;YAErD,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBAC9B,OAAO,CAAC,mBAAmB;YAC/B,CAAC;YAED,gCAAgC;YAChC,MAAM,mBAAmB,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,eAAe,KAAK,eAAe,CAAC,CAAC;YAC5F,IAAI,CAAC,mBAAmB,EAAE,CAAC;gBACvB,OAAO,CAAC,iCAAiC;YAC7C,CAAC;YAED,0DAA0D;YAC1D,KAAK,MAAM,IAAI,IAAI,cAAc,EAAE,CAAC;gBAChC,IAAI,IAAI,CAAC,QAAQ,GAAG,mBAAmB,CAAC,QAAQ,EAAE,CAAC;oBAC/C,MAAM,gBAAgB,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAC1E,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,eAAe,KAAK,IAAI,CAAC,eAAe,CACjE,CAAC;oBACF,IAAI,gBAAgB,EAAE,CAAC;wBACnB,MAAM,SAAS,GAAG,gBAAgB,CAAC,SAAS,CAAC;wBAE7C,+BAA+B;wBAC/B,MAAM,GAAG,GAAG,IAAI,UAAG,CAAC,SAAS,CAAC,CAAC;wBAC/B,IAAI,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC;4BACrC,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;wBACvC,CAAC;oBACL,CAAC;gBACL,CAAC;YACL,CAAC;QACL,CAAC;IACL,CAAC;IAED,KAAK,CAAC,yCAAyC,CAAC,EAAU,EAAE,eAAuB;QAC/E,yDAAyD;QACzD,MAAM,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CACvE,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,eAAe,KAAK,eAAe,CACvD,CAAC;QAEF,IAAI,aAAa,EAAE,CAAC;YAChB,OAAO,aAAa,CAAC,SAAS,CAAC;QACnC,CAAC;QAED,OAAO,SAAS,CAAC;IACrB,CAAC;IAED,KAAK,CAAC,kCAAkC,CAAC,EAAU,EAAE,eAAuB;QACxE,yDAAyD;QACzD,MAAM,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CACvE,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,eAAe,KAAK,eAAe,CACvD,CAAC;QAEF,IAAI,aAAa,EAAE,CAAC;YAChB,OAAO,4BAA4B,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAC9D,CAAC;QAED,OAAO,SAAS,CAAC;IACrB,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,EAAU,EAAE,cAAc,GAAG,EAAE;QAC7C,kEAAkE;QAClE,MAAM,oBAAoB,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAC9E,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,QAAQ,KAAK,CAAC,CAClC,CAAC;QAEF,IAAI,oBAAoB,EAAE,CAAC;YACvB,2CAA2C;YAC3C,MAAM,GAAG,GAAG,IAAI,UAAG,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;YACpD,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAC5D,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1B,CAAC;aAAM,CAAC;YACJ,sCAAsC;YACtC,oEAAoE;YACpE,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;YAElD,4DAA4D;YAC5D,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC;gBAChD,MAAM,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,WAAW,EAAE,qBAAY,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC;YAC5F,CAAC;YAED,kCAAkC;YAClC,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;YACpE,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAClC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,yBAAyB,CAAC,EAAU;QACtC,wDAAwD;QACxD,MAAM,oBAAoB,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAC9E,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,QAAQ,KAAK,CAAC,CAClC,CAAC;QAEF,IAAI,CAAC,oBAAoB,EAAE,CAAC;YACxB,OAAO,CAAC,kCAAkC;QAC9C,CAAC;QAED,MAAM,SAAS,GAAG,oBAAoB,CAAC,SAAS,CAAC;QAEjD,+BAA+B;QAC/B,MAAM,GAAG,GAAG,IAAI,UAAG,CAAC,SAAS,CAAC,CAAC;QAC/B,IAAI,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC;YACrC,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACvC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,sCAAsC,CAAC,EAAU,EAAE,cAAuB;QAC5E,OAAO,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,cAAc,CAAC,CAAC;IAChD,CAAC;IAED;;;;OAIG;IACO,oBAAoB,CAAC,GAAQ;QACnC,MAAM,EAAE,GAAG,IAAI,CAAC,0BAA0B,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAI,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC;YACpC,OAAO,EAAE,CAAC;QACd,CAAC;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;IAED;;;;;OAKG;IACH,+BAA+B,CAAC,UAAmB;QAC/C,iCAAiC;QACjC,IAAI,UAAU,YAAY,UAAG,EAAE,CAAC;YAC5B,OAAO,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC;QACjD,CAAC;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;IAED,KAAK,CAAC,eAAe;QACjB,MAAM,UAAU,GAAG,IAAI,GAAG,EAAkC,CAAC;QAC7D,qFAAqF;QACrF,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAChD,MAAM,MAAM,GAAG,UAAG,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;YACzC,MAAM,IAAI,CAAC,6BAA6B,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;QACjE,CAAC;QACD,mFAAmF;QACnF,MAAM,kBAAkB,GAAG,MAAM,IAAI,CAAC,wBAAwB,EAAE,CAAC;QACjE,MAAM,IAAI,CAAC,6BAA6B,CAAC,kBAAkB,EAAE,UAAU,CAAC,CAAC;QACzE,mCAAmC;QACnC,OAAO,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC;IAC3C,CAAC;IAED;;;;OAIG;IACO,KAAK,CAAC,6BAA6B,CACzC,YAAiB,EACjB,UAA+C;QAE/C,MAAM,kBAAkB,GAAG,YAAY,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;QACpE,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;QACrE,IAAI,CAAC,UAAU,EAAE,CAAC;YACd,OAAO;QACX,CAAC;QAED,IAAI,CAAC;YACD,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,CAAC;YAC3F,MAAM,GAAG,GAAG,kBAAI,EAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAEpC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,+BAAsB,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;gBAC/E,OAAO,CAAC,KAAK,CAAC,4CAA4C,YAAY,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;gBACrF,OAAO;YACX,CAAC;YAED,MAAM,UAAU,GAAG,GAA+B,CAAC;YAEnD,oDAAoD;YACpD,KAAK,MAAM,KAAK,IAAI,UAAU,EAAE,CAAC;gBAC7B,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC;oBAC5B,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;gBACpC,CAAC;YACL,CAAC;QACL,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACT,OAAO,CAAC,KAAK,CAAC,uCAAuC,YAAY,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;QACrG,CAAC;IACL,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,wBAAwB;QAC1B,MAAM,SAAS,GAAoC,EAAE,CAAC;QACtD,mCAAmC;QACnC,MAAM,kBAAkB,GAAG,MAAM,IAAI,CAAC,wBAAwB,EAAE,CAAC;QACjE,MAAM,eAAe,GAAG,kBAAkB,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;QACvE,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QACpE,SAAS,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,eAAe,EAAE,MAAM,EAAE,YAAY,EAAE,CAAC,CAAC;QAC/D,oDAAoD;QACpD,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAChD,MAAM,MAAM,GAAG,UAAG,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;YACzC,MAAM,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;YACrD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACxD,SAAS,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;QACvD,CAAC;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;IAED;;;;OAIG;IACH,KAAK,CAAC,mBAAmB,CAAC,GAAQ;QAC9B,MAAM,OAAO,GAAG,kBAAI,EAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;QAC5C,IAAI,CAAE,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC;YACvC,MAAM,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,GAAG,EAAE,qBAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;QAC7E,CAAC;aAAM,CAAC;YACJ,MAAM,WAAW,GAAG,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC;YACjE,MAAM,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,EAAE,qBAAY,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,qBAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAChH,CAAC;QACD,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QAC5D,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC1B,CAAC;CACJ;AAn3BY,8FAAyC;AAE/B;IADlB,sBAAM,EAAC,kCAAkB,CAAC;;qFAC+B;AAGvC;IADlB,sBAAM,EAAC,uCAAiB,CAAC;;8EACwB;AAG/B;IADlB,sBAAM,EAAC,0BAAW,CAAC;sCACY,0BAAW;8EAAC;AAGzB;IADlB,sBAAM,EAAC,uBAAa,CAAC;;gFAC0B;AAiCtC;IADT,6BAAa,GAAE;;;;qEAQf;oDAnDQ,yCAAyC;IADrD,0BAAU,GAAE;GACA,yCAAyC,CAm3BrD;;;;;;;;;;;;ACz+BD,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;AAEhF,wGAAyE;AACzE,wHAA+F;AAC/F,oIAAkE;AAClE,2GAUmB;AACnB,6IAAoD;AAOnD,CAAC;AAOD,CAAC;AAWF,IAAiB,2BAA2B,CAyB3C;AAzBD,WAAiB,2BAA2B;IACxC,SAAgB,GAAG,CACf,YAAoB,EACpB,KAA+B,EAC/B,QAAyB,EACzB,WAAoB;QAEpB,MAAM,WAAW,GAAG,KAAK,CAAC,cAAc,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QAC9D,MAAM,sBAAsB,GAAG,WAAW,CAAC,WAAW,CAAC,WAAW,aAAX,WAAW,cAAX,WAAW,GAAI,mBAAU,CAAC,aAAa,EAAE,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAErH,sGAAsG;QACtG,IAAI,sBAAsB,KAAK,CAAC,CAAC,IAAI,WAAW,CAAC,SAAS,CAAC,sBAAsB,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC;YAC/F,OAAO,SAAS,CAAC;QACrB,CAAC;QAED,iGAAiG;QACjG,MAAM,2BAA2B,GAAG,WAAW,CAAC,WAAW,CAAC,mBAAU,CAAC,uBAAuB,EAAE,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACrH,MAAM,gBAAgB,GAAG,IAAI,CAAC,GAAG,CAAC,sBAAsB,EAAE,2BAA2B,CAAC,CAAC;QAEvF,MAAM,SAAS,GAAG,WAAW,CAAC,SAAS,CAAC,gBAAgB,GAAG,CAAC,EAAE,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACnF,MAAM,KAAK,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,EAAE,gBAAgB,GAAG,CAAC,EAAE,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;QAChH,MAAM,iBAAiB,GAAG,WAAW,CAAC,gBAAgB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,mBAAU,CAAC,aAAa,CAAC,CAAC;QACnH,MAAM,MAAM,GAAG,iBAAiB,CAAC,CAAC,CAAC,YAAY,GAAG,mBAAU,CAAC,uBAAuB,CAAC,CAAC,CAAC,EAAE,CAAC;QAC1F,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,CAAC;IACxC,CAAC;IAvBe,+BAAG,MAuBlB;AACL,CAAC,EAzBgB,2BAA2B,2CAA3B,2BAA2B,QAyB3C;AAEY,+BAAuB,GAAG,MAAM,CAAC,yBAAyB,CAAC,CAAC;AAqBlE,IAAM,8BAA8B,GAApC,MAAM,8BAA+B,SAAQ,iCAAwB;IAArE;;QACO,iBAAY,GAAG,IAAI,GAAG,EAAyB,CAAC;QAChD,kBAAa,GAAG,IAAI,GAAG,EAA0B,CAAC;IA+GhE,CAAC;IAzGG,OAAO;QACH,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC7B,CAAC;IAED,mBAAmB,CAAC,OAA8B;QAC9C,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAC/B,OAAO,iBAAU,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC,CAAC;IACxE,CAAC;IAED,qBAAqB,CAAC,OAA8B;QAChD,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IACtC,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,KAAgB,EAAE,OAA0B;QAC5D,IAAI,IAAI,GAAuB,SAAS,CAAC;QACzC,MAAM,SAAS,GAAkC,EAAE,CAAC;QACpD,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;YACtC,MAAM,MAAM,GAAG,MAAM,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAC7C,IAAI,MAAM,EAAE,CAAC;gBACT,SAAS,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;gBACpC,IAAI,IAAI,KAAK,SAAS,EAAE,CAAC;oBACrB,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;gBACvB,CAAC;YACL,CAAC;QACL,CAAC;QACD,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;IAC/B,CAAC;IAED,oBAAoB,CAAC,OAA+B;QAChD,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAChC,OAAO,iBAAU,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC,CAAC;IACzE,CAAC;IAED,sBAAsB,CAAC,OAA+B;QAClD,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IACvC,CAAC;IAED,KAAK,CAAC,cAAc,CAAC,KAAqB,EAAE,OAA0B;QAClE,IAAI,IAAI,GAAuB,SAAS,CAAC;QACzC,MAAM,SAAS,GAAkC,EAAE,CAAC;QACpD,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;YACvC,MAAM,MAAM,GAAG,MAAM,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAC7C,IAAI,MAAM,EAAE,CAAC;gBACT,SAAS,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;gBACpC,IAAI,IAAI,KAAK,SAAS,EAAE,CAAC;oBACrB,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;gBACvB,CAAC;YACL,CAAC;QACL,CAAC;QACD,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;IAC/B,CAAC;IAED,cAAc,CAAC,QAAoB,EAAE,MAAwB;;QACzD,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC;YAC3B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;YAClC,IAAI,CAAC,2BAA2B,CAAC,IAAI,EAAE,CAAC;QAC5C,CAAC;QACD,MAAM,OAAO,GAAG,UAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,mCAAI,EAAE,CAAC;QAC5C,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;QAC/B,OAAO,iBAAU,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;IAC5E,CAAC;IAED,gBAAgB,CAAC,QAAoB,EAAE,MAAwB;QAC3D,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACvC,MAAM,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAChD,iBAAiB,aAAjB,iBAAiB,uBAAjB,iBAAiB,CAAE,MAAM,CAAC,iBAAiB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,KAAK,CAAC,SAAS,CAAC,IAAY,EAAE,GAAuB,EAAE,UAA6B,EAAE;;QAClF,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACxC,OAAO,QAAQ,IAAI,qBAAc,CAAC,aAAa,CAC3C,UAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,mCAAI,EAAE,EACzC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE,OAAO,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CACtF;aACI,IAAI,CAAC,WAAW,CAAC,EAAE,WAAC,wBAAW,CAAC,EAAE,CAAC,CAAC,CAAC,0CAAE,KAAK,IAAC,CAAC;IACvD,CAAC;IAED,KAAK,CAAC,IAAI,CAAC,OAAsB,EAAE,OAAuC;QACtE,MAAM,EAAE,YAAY,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QACzD,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QAChD,IAAI,CAAC,QAAQ,EAAE,CAAC;YACZ,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,qCAAqC,CAAC,CAAC;YAChE,OAAO;QACX,CAAC;QACD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;QAChE,IAAI,CAAC;YACD,OAAO,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE,OAAO,aAAP,OAAO,cAAP,OAAO,GAAI,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE,OAAO,CAAC,CAAC;QAClH,CAAC;QAAC,OAAO,GAAG,EAAE,CAAC;YACX,OAAO,CAAC,KAAK,CAAC,0BAA0B,EAAE,GAAG,CAAC,CAAC;YAC/C,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;QACnE,CAAC;IACL,CAAC;IAES,KAAK,CAAC,YAAY,CAAC,OAAoC,EAAE,UAA6B,EAAE;QAC9F,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAC9D,IAAI,QAAQ,KAAK,SAAS,EAAE,CAAC;YACzB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;YACxD,OAAO;QACX,CAAC;QACD,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;QACvF,MAAM,kBAAI,EAAC,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC;QAC7C,QAAQ,CAAC,OAAO,EAAE,CAAC;IACvB,CAAC;CACJ;AAjHY,wEAA8B;AAII;IAA1C,sBAAM,EAAC,qBAAc,CAAC;sCAAoC,qBAAc;sEAAC;AACnB;IAAtD,sBAAM,EAAC,mCAA0B,CAAC;sCAAwC,mCAA0B;0EAAC;AAC5D;IAAzC,sBAAM,EAAC,uBAAa,CAAC;;qEAAiD;yCAN9D,8BAA8B;IAD1C,0BAAU,GAAE;GACA,8BAA8B,CAiH1C;;;;;;;;;;;;ACxND,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;AAEhF,wGAAgD;AAChD,oIAAkE;AAClE,4HAA0D;AAC1D,kIAAgE;AAInD,6BAAqB,GAAe;IAC7C,EAAE,EAAE,aAAa;IACjB,WAAW,EAAE,UAAG,CAAC,QAAQ,CAAC,+CAA+C,EAAE,qFAAqF,CAAC;IACjK,IAAI,EAAE,aAAa;CACtB,CAAC;AAEW,mCAA2B,GAAe;IACnD,EAAE,EAAE,kBAAkB;IACtB,WAAW,EAAE,UAAG,CAAC,QAAQ,CAAC,oDAAoD,EAAE,+EAA+E,CAAC;IAChK,IAAI,EAAE,KAAK;CACd,CAAC;AAGK,IAAM,+BAA+B,GAArC,MAAM,+BAA+B;IAQxC,iBAAiB,CAAC,OAA0B;QACxC,OAAO,CAAC,gBAAgB,CAAC,6BAAqB,EAAE,IAAI,CAAC,CAAC;QACtD,OAAO,CAAC,gBAAgB,CAAC,mCAA2B,EAAE,IAAI,CAAC,CAAC;IAChE,CAAC;IAED,UAAU,CAAC,OAAoC,EAAE,QAA2B;QACxE,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,KAAK,6BAAqB,CAAC,IAAI,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,KAAK,mCAA2B,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACzI,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,OAAoC,EAAE,QAA2B;QAC3E,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,KAAK,6BAAqB,CAAC,IAAI,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,KAAK,mCAA2B,CAAC,IAAI,EAAE,CAAC;YACrH,OAAO,SAAS,CAAC;QACrB,CAAC;QAED,MAAM,SAAS,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;QACjD,OAAO;YACH,QAAQ,EAAE,OAAO,CAAC,QAAQ;YAC1B,KAAK,EAAE,SAAS;SACnB,CAAC;IACN,CAAC;IAES,uBAAuB;QAC7B,MAAM,SAAS,GAAa,EAAE,CAAC;QAE/B,+CAA+C;QAC/C,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC;YAC1C,MAAM,GAAG,GAAG,MAAM,CAAC,cAAc,EAAE,CAAC;YACpC,IAAI,GAAG,EAAE,CAAC;gBACN,MAAM,YAAY,GAAG,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,CAAC;gBACxD,IAAI,YAAY,EAAE,CAAC;oBACf,SAAS,CAAC,IAAI,CAAC,IAAI,YAAY,GAAG,CAAC,CAAC;gBACxC,CAAC;YACL,CAAC;QACL,CAAC;QAED,OAAO,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAES,wBAAwB,CAAC,GAAQ;QACvC,MAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;QACxE,MAAM,IAAI,GAAG,gBAAgB,IAAI,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC1E,OAAO,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;IACnC,CAAC;CACJ;AAnDY,0EAA+B;AAGrB;IADlB,sBAAM,EAAC,uBAAa,CAAC;sCACY,uBAAa;sEAAC;AAG7B;IADlB,sBAAM,EAAC,0BAAgB,CAAC;sCACY,0BAAgB;yEAAC;0CAN7C,+BAA+B;IAD3C,0BAAU,GAAE;GACA,+BAA+B,CAmD3C;;;;;;;;;;;;ACvFD,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;AAEhF,oIAA0D;AAC1D,oHAAiD;AACjD,wGAA0C;AAgC1C;;;GAGG;AAEI,IAAM,qBAAqB,GAA3B,MAAM,qBAAqB;IAI9B;QACI,IAAI,CAAC,UAAU,GAAG,kBAAW,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;IAChD,CAAC;IAED;;;;;;OAMG;IACH,KAAK,CAAC,gBAAgB,CAAC,KAAa,EAAE,UAAiC,EAAE;QACrE,IAAI,CAAC;YACD,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE,EAAE,CAAC;gBAClC,OAAO;oBACH,OAAO,EAAE,KAAK;oBACd,KAAK,EAAE,qDAAqD;iBAC/D,CAAC;YACN,CAAC;YAED,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACjD,IAAI,UAAU,KAAK,SAAS,EAAE,CAAC;gBAC3B,OAAO;oBACH,OAAO,EAAE,KAAK;oBACd,KAAK,EAAE,2BAA2B,UAAU,EAAE;iBACjD,CAAC;YACN,CAAC;YAED,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YACnE,OAAO;gBACH,OAAO,EAAE,IAAI;gBACb,YAAY;aACf,CAAC;QAEN,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,OAAO,CAAC,KAAK,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;YACxD,OAAO;gBACH,OAAO,EAAE,KAAK;gBACd,KAAK,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,wBAAwB;aAC3E,CAAC;QACN,CAAC;IACL,CAAC;IAED;;;;OAIG;IACH,mBAAmB;QACf,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE,EAAE,CAAC;YAClC,OAAO,QAAQ,CAAC;QACpB,CAAC;QACD,OAAO,YAAY,CAAC,UAAU,CAAC;IACnC,CAAC;IAED;;;;OAIG;IACH,KAAK,CAAC,iBAAiB;QACnB,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE,EAAE,CAAC;YAClC,OAAO,QAAQ,CAAC;QACpB,CAAC;QAED,IAAI,YAAY,CAAC,UAAU,KAAK,SAAS,EAAE,CAAC;YACxC,OAAO,YAAY,CAAC,UAAU,CAAC;QACnC,CAAC;QAED,IAAI,CAAC;YACD,MAAM,UAAU,GAAG,MAAM,YAAY,CAAC,iBAAiB,EAAE,CAAC;YAC1D,OAAO,UAAU,CAAC;QACtB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,OAAO,CAAC,KAAK,CAAC,4CAA4C,EAAE,KAAK,CAAC,CAAC;YACnE,OAAO,QAAQ,CAAC;QACpB,CAAC;IACL,CAAC;IAED;;;;OAIG;IACH,uBAAuB;QACnB,OAAO,OAAO,MAAM,KAAK,WAAW,IAAI,cAAc,IAAI,MAAM,CAAC;IACrE,CAAC;IAED;;;;;;;OAOG;IACH,KAAK,CAAC,+BAA+B,CAAC,SAAiB,EAAE,eAAwB;QAC7E,MAAM,KAAK,GAAG,SAAG,CAAC,QAAQ,CAAC,oCAAoC,EAAE,4BAA4B,EAAE,SAAS,CAAC,CAAC;QAC1G,MAAM,IAAI,GAAG,eAAe;YACxB,CAAC,CAAC,SAAG,CAAC,QAAQ,CAAC,uCAAuC,EAClD,yCAAyC,EAAE,SAAS,EAAE,eAAe,CAAC;YAC1E,CAAC,CAAC,SAAG,CAAC,QAAQ,CAAC,sCAAsC,EACjD,qCAAqC,EAAE,SAAS,CAAC,CAAC;QAE1D,OAAO,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE;YAChC,IAAI;YACJ,IAAI,EAAE,IAAI,CAAC,sBAAsB,EAAE;YACnC,GAAG,EAAE,oBAAoB,SAAS,EAAE;YACpC,kBAAkB,EAAE,KAAK;YACzB,IAAI,EAAE;gBACF,IAAI,EAAE,kBAAkB;gBACxB,SAAS;gBACT,eAAe;gBACf,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE;aACxB;SACJ,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACK,KAAK,CAAC,gBAAgB;QAC1B,MAAM,iBAAiB,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAErD,IAAI,iBAAiB,KAAK,SAAS,EAAE,CAAC;YAClC,OAAO,iBAAiB,CAAC;QAC7B,CAAC;QAED,IAAI,iBAAiB,KAAK,QAAQ,EAAE,CAAC;YACjC,OAAO,iBAAiB,CAAC;QAC7B,CAAC;QAED,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC;IACpC,CAAC;IAED;;;;;;OAMG;IACK,KAAK,CAAC,kBAAkB,CAAC,KAAa,EAAE,OAA8B;QAC1E,OAAO,IAAI,OAAO,CAAe,CAAC,OAAO,EAAE,MAAM,EAAQ,EAAE;YACvD,IAAI,CAAC;gBACD,MAAM,mBAAmB,GAAwB;oBAC7C,IAAI,EAAE,OAAO,CAAC,IAAI;oBAClB,IAAI,EAAE,OAAO,CAAC,IAAI;oBAClB,MAAM,EAAE,OAAO,CAAC,MAAM;oBACtB,GAAG,EAAE,OAAO,CAAC,GAAG;oBAChB,kBAAkB,EAAE,OAAO,CAAC,kBAAkB;oBAC9C,IAAI,EAAE,OAAO,CAAC,IAAI;iBACrB,CAAC;gBAEF,MAAM,YAAY,GAAG,IAAI,YAAY,CAAC,KAAK,EAAE,mBAAmB,CAAC,CAAC;gBAElE,YAAY,CAAC,MAAM,GAAG,GAAG,EAAE;oBACvB,OAAO,CAAC,KAAK,CAAC,wBAAwB,EAAE,KAAK,CAAC,CAAC;gBACnD,CAAC,CAAC;gBAEF,YAAY,CAAC,OAAO,GAAG,KAAK,CAAC,EAAE;oBAC3B,OAAO,CAAC,KAAK,CAAC,wBAAwB,EAAE,KAAK,CAAC,CAAC;oBAC/C,MAAM,CAAC,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC,CAAC;gBACrD,CAAC,CAAC;gBAEF,YAAY,CAAC,OAAO,GAAG,GAAG,EAAE;oBACxB,OAAO,CAAC,KAAK,CAAC,0BAA0B,EAAE,KAAK,CAAC,CAAC;oBACjD,IAAI,CAAC,sBAAsB,EAAE,CAAC;oBAC9B,YAAY,CAAC,KAAK,EAAE,CAAC;gBACzB,CAAC,CAAC;gBAEF,YAAY,CAAC,OAAO,GAAG,GAAG,EAAE;oBACxB,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;gBACpD,CAAC,CAAC;gBAEF,OAAO,CAAC,YAAY,CAAC,CAAC;YAE1B,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACb,MAAM,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACK,sBAAsB;;QAC1B,IAAI,CAAC;YACD,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE,CAAC;gBAChC,MAAM,CAAC,KAAK,EAAE,CAAC;gBAEf,IAAI,IAAI,CAAC,UAAU,KAAI,MAAC,MAA0E,CAAC,iBAAiB,0CAAE,WAAW,GAAE,CAAC;oBAC/H,MAAwE,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;gBAC9G,CAAC;YACL,CAAC;QACL,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,OAAO,CAAC,KAAK,CAAC,qCAAqC,EAAE,KAAK,CAAC,CAAC;QAChE,CAAC;IACL,CAAC;IAED;;;;OAIG;IACK,sBAAsB;QAC1B,2CAA2C;QAC3C,iEAAiE;QACjE,OAAO,SAAS,CAAC;IACrB,CAAC;CACJ;AAvNY,sDAAqB;gCAArB,qBAAqB;IADjC,0BAAU,GAAE;;GACA,qBAAqB,CAuNjC;;;;;;;;;;;;AC9QD,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;AAEhF,oIAAkE;AAElE,6IAAoD;AACpD,wGAAiF;AAGjF,wHAA0D;AAC1D,4HAA2E;AAC3E,2GAA8E;AAE9E,iJAA+D;AAE/D,MAAM,2BAA2B,GAAG,0BAA0B,CAAC;AAC/D,MAAM,8BAA8B,GAAG,uBAAuB,CAAC;AAElD,iCAAyB,GAAG,iBAAiB,CAAC;AAE9C,8CAAsC,GAAY,cAAO,CAAC,kBAAkB,CAAC;IACtF,EAAE,EAAE,kCAAkC;IACtC,KAAK,EAAE,4BAA4B;IACnC,SAAS,EAAE,qBAAO,EAAC,SAAS,CAAC;IAC7B,QAAQ,EAAE,qBAAqB;CAClC,EAAE,6BAA6B,EAAE,gCAAgC,CAAC,CAAC;AAG7D,IAAM,0BAA0B,GAAhC,MAAM,0BAA0B;IAAhC;QAWM,WAAM,GACX;YACI,UAAU,EAAE;gBACR,CAAC,IAAI,EAAE,GAAG,CAAC;gBACX,CAAC,IAAI,EAAE,GAAG,CAAC;gBACX,CAAC,IAAI,EAAE,IAAI,CAAC;gBACZ,CAAC,KAAK,EAAE,KAAK,CAAC;aACjB;YACD,kBAAkB,EAAE;gBAChB,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE;gBAC9B,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE;gBAC9B,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE;gBAC/B,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE;aACpC;YACD,kBAAkB,EAAE;gBAChB,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE;gBAC9B,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE;gBAC9B,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE;gBAC/B,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE;aACpC;SACJ,CAAC;IAuOV,CAAC;IArOG,wBAAwB,CAAC,QAA0B;QAC/C,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,EAAE,EAAE,2BAA2B;YAC/B,SAAS,EAAE;gBACP,oBAAoB;aACvB;YACD,YAAY,EAAE;gBACV,iCAAyB;aAC5B;YACD,WAAW,EAAE,EAAE;SAClB,CAAC,CAAC;QAEH,MAAM,CAAC,SAAS,CAAC,wBAAwB,CAAC,2BAA2B,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAEpF,MAAM,CAAC,SAAS,CAAC,8BAA8B,CAAC,2BAA2B,EAAE;YACzE,2DAA2D;YAC3D,iBAAiB,EAAE,CAAC,GAAG,CAAC;YACxB,sBAAsB,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAmD,EAAE,CAAC,IAAI,CAAC,0BAA0B,CAAC,KAAK,EAAE,QAAQ,CAAC;SACnK,CAAC,CAAC;QAEH,MAAM,CAAC,SAAS,CAAC,8BAA8B,CAAC,2BAA2B,EAAE;YACzE,2DAA2D;YAC3D,iBAAiB,EAAE,CAAC,GAAG,CAAC;YACxB,sBAAsB,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAmD,EAAE,CAAC,IAAI,CAAC,0BAA0B,CAAC,KAAK,EAAE,QAAQ,CAAC;SACnK,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,8BAA8B,CAAC,2BAA2B,EAAE;YACzE,2DAA2D;YAC3D,iBAAiB,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;YAC7B,sBAAsB,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAmD,EAAE,CAAC,IAAI,CAAC,iCAAiC,CAAC,KAAK,EAAE,QAAQ,CAAC;SAC1K,CAAC,CAAC;QAEH,MAAM,eAAe,GAAG,mBAAO,CAAC,oHAA2C,CAAC,CAAC;QAC7E,MAAM,yBAAyB,GAA8B;YACzD,oBAAoB,EAAE;gBAClB,OAAO,OAAO,CAAC,OAAO,CAAC;oBACnB,MAAM,EAAE,MAAM;oBACd,OAAO,EAAE,eAAe;iBAC3B,CAAC,CAAC;YACP,CAAC;SACJ,CAAC;QACF,QAAQ,CAAC,4BAA4B,CAAC,8BAA8B,EAAE,yBAAyB,CAAC,CAAC;QAEjG,QAAQ,CAAC,8BAA8B,CAAC,2BAA2B,EAAE,8BAA8B,CAAC,CAAC;IACzG,CAAC;IAED,0BAA0B,CAAC,KAA+B,EAAE,QAAyB;QACjF,OAAO,IAAI,CAAC,cAAc,CACtB,KAAK,EACL,QAAQ,EACR,IAAI,EACJ,IAAI,CAAC,sBAAsB,CAAC,eAAe,EAAE,EAC7C,MAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,QAAQ,EAC5C,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EACf,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EACjB,IAAI,CAAC,EAAE,WAAC,iBAAI,CAAC,WAAW,mCAAI,EAAE,IACjC,CAAC;IACN,CAAC;IAED,0BAA0B,CAAC,KAA+B,EAAE,QAAyB;QACjF,OAAO,IAAI,CAAC,cAAc,CACtB,KAAK,EACL,QAAQ,EACR,IAAI,EACJ,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,EACnC,MAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,QAAQ,EAC5C,QAAQ,CAAC,EAAE,WAAC,sBAAQ,CAAC,IAAI,0CAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,EAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,GAAG,mBAAU,CAAC,uBAAuB,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,KAC5H,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EACzB,QAAQ,CAAC,EAAE,WAAC,qBAAQ,CAAC,WAAW,mCAAI,EAAE,IACzC,CAAC;IACN,CAAC;IAED,KAAK,CAAC,iCAAiC,CAAC,KAA+B,EAAE,QAAyB;QAC9F,6DAA6D;QAC7D,MAAM,iBAAiB,GAAG,KAAK,CAAC,eAAe,CAAC;YAC5C,eAAe,EAAE,QAAQ,CAAC,UAAU;YACpC,WAAW,EAAE,CAAC;YACd,aAAa,EAAE,QAAQ,CAAC,UAAU;YAClC,SAAS,EAAE,QAAQ,CAAC,MAAM;SAC7B,CAAC,CAAC;QAEH,oHAAoH;QACpH,MAAM,aAAa,GAAG,gCAAgC,CAAC;QACvD,MAAM,KAAK,GAAG,iBAAiB,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QAErD,IAAI,CAAC,KAAK,EAAE,CAAC;YACT,OAAO,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC;QAC/B,CAAC;QAED,MAAM,mBAAmB,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QACrC,MAAM,iBAAiB,GAAG,iBAAiB,CAAC,QAAQ,CAAC,GAAG,mBAAmB,GAAG,CAAC,CAAC;QAEhF,MAAM,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;QACtD,MAAM,WAAW,GAAsC,EAAE,CAAC;QAE1D,KAAK,MAAM,QAAQ,IAAI,SAAS,EAAE,CAAC;YAC/B,wEAAwE;YACxE,IAAI,iBAAiB,IAAI,QAAQ,CAAC,IAAI,KAAK,mBAAmB,EAAE,CAAC;gBAC7D,SAAS;YACb,CAAC;YAED,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,6BAA6B,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACzF,IAAI,QAAQ,EAAE,CAAC;gBACX,MAAM,KAAK,GAAG,MAAM,QAAQ,CAAC,KAAK,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC;gBACnD,IAAI,KAAK,EAAE,CAAC;oBACR,WAAW,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;wBACnC,GAAG,IAAI;qBACV,CAAC,CAAC,CAAC,CAAC;gBACT,CAAC;YACL,CAAC;QACL,CAAC;QAED,OAAO,EAAE,WAAW,EAAE,CAAC;IAC3B,CAAC;IAED,kBAAkB,CAAC,KAA+B,EAAE,QAAyB,EAAE,iBAAyB;QACpG,iFAAiF;QACjF,MAAM,WAAW,GAAG,KAAK,CAAC,cAAc,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QAC9D,MAAM,aAAa,GAAG,iBAAiB,CAAC,MAAM,CAAC;QAC/C,MAAM,gBAAgB,GAAG,WAAW,CAAC,SAAS,CAC1C,QAAQ,CAAC,MAAM,GAAG,aAAa,GAAG,CAAC,EACnC,QAAQ,CAAC,MAAM,GAAG,CAAC,CACtB,CAAC;QAEF,IAAI,gBAAgB,KAAK,iBAAiB,EAAE,CAAC;YACzC,sFAAsF;YACtF,OAAO,SAAS,CAAC;QACrB,CAAC;QAED,kEAAkE;QAClE,MAAM,QAAQ,GAAG,KAAK,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;QACtD,OAAO,IAAI,MAAM,CAAC,KAAK,CACnB,QAAQ,CAAC,UAAU,EACnB,QAAQ,CAAC,WAAW,EACpB,QAAQ,CAAC,UAAU,EACnB,QAAQ,CAAC,MAAM,CAClB,CAAC;IACN,CAAC;IAEO,cAAc,CAClB,KAA+B,EAC/B,QAAyB,EACzB,YAAoB,EACpB,KAAU,EACV,IAAyC,EACzC,KAA0B,EAC1B,OAA4B,EAC5B,cAAmC;QAEnC,MAAM,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;QAC/E,IAAI,eAAe,KAAK,SAAS,EAAE,CAAC;YAChC,OAAO,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC;QAC/B,CAAC;QACD,MAAM,WAAW,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACnC,UAAU,EAAE,KAAK,CAAC,IAAI,CAAC;YACvB,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,OAAO,CAAC,IAAI,CAAC;YACpB,KAAK,EAAE,eAAe;YACtB,MAAM,EAAE,cAAc,CAAC,IAAI,CAAC;SAC/B,CAAC,CAAC,CAAC;QACJ,OAAO,EAAE,WAAW,EAAE,CAAC;IAC3B,CAAC;IAED,gBAAgB,CAAC,QAAyB;QACtC,QAAQ,CAAC,eAAe,CAAC,8CAAsC,EAAE;YAC7D,SAAS,EAAE,CAAC,MAAc,EAAE,EAAE,CAAC,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC;YAClE,SAAS,EAAE,CAAC,MAAoB,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;YAC5D,OAAO,EAAE,CAAC,MAAoB,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;SAC1D,CAAC,CAAC;IACP,CAAC;IAES,sBAAsB,CAAC,MAAc;QAC3C,IAAI,MAAM,YAAY,sBAAY,EAAE,CAAC;YACjC,OAAO,2BAA2B,KAAK,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC;QAC7E,CAAC;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAES,UAAU,CAAC,MAAoB;QACrC,MAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC;QACtC,MAAM,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,WAAW,CAAC,CAAC;QACrE,IAAI,EAAE,KAAK,SAAS,EAAE,CAAC;YACnB,OAAO,KAAK,CAAC;QACjB,CAAC;QACD,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC;QAC9D,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;QACjE,OAAO,UAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,QAAQ,OAAK,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,QAAQ,EAAC;IAC3D,CAAC;IAES,KAAK,CAAC,OAAO,CAAC,MAAoB;QACxC,MAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC;QACtC,MAAM,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,WAAW,CAAC,CAAC;QACrE,IAAI,EAAE,KAAK,SAAS,EAAE,CAAC;YACnB,OAAO;QACX,CAAC;QACD,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;QACjE,IAAI,aAAa,KAAK,SAAS,EAAE,CAAC;YAC9B,OAAO;QACX,CAAC;QAED,MAAM,MAAM,GAAW,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;QACxD,MAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAEzF,MAAM,gBAAgB,GAAqB;YACvC,KAAK,EAAE;gBACH,KAAK,EAAE;oBACH,IAAI,EAAE,CAAC;oBACP,SAAS,EAAE,CAAC;iBACf;gBACD,GAAG,EAAE;oBACD,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS;oBACtC,SAAS,EAAE,QAAQ,CAAC,MAAM;iBAC7B;aACJ;YACD,IAAI,EAAE,aAAa,CAAC,QAAQ;SAC/B,CAAC;QAEF,MAAM,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC;YAC5B,MAAM;YACN,iBAAiB,EAAE,CAAC,gBAAgB,CAAC;SACxC,CAAC,CAAC;IACP,CAAC;IAED,oBAAoB,CAAC,QAA+B;QAChD,QAAQ,CAAC,YAAY,CAAC;YAClB,EAAE,EAAE,8CAAsC,CAAC,EAAE;YAC7C,OAAO,EAAE,8CAAsC,CAAC,EAAE;YAClD,OAAO,EAAE,UAAG,CAAC,QAAQ,CAAC,2CAA2C,EAAE,wBAAwB,CAAC;SAC/F,CAAC,CAAC;IACP,CAAC;CACJ;AAtQY,gEAA0B;AAGlB;IADhB,sBAAM,EAAC,sBAAa,CAAC;;iEACwB;AAG3B;IADlB,sBAAM,EAAC,+BAAsB,CAAC;;0EACmC;AAG/C;IADlB,sBAAM,EAAC,oCAAiB,CAAC;;mEAC4B;qCAT7C,0BAA0B;IADtC,0BAAU,GAAE;GACA,0BAA0B,CAsQtC;;;;;;;;;;;;;;;;AC/SD,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;AAChF,2LAAqG;AACrG,oHAAiD;AACjD,oIAAkE;AAClE,kJAAiG;AAWjG;;GAEG;AAEI,IAAM,yBAAyB,iCAA/B,MAAM,yBAAyB;IAA/B;QAaH,oFAAoF;QACpF,qDAAqD;QAC3C,sBAAiB,GAAmC,IAAI,GAAG,CAAC;YAClE,CAAC,MAAM,EAAE;oBACL;wBACI,IAAI,EAAE,yBAAyB;wBAC/B,WAAW,EAAE,SAAG,CAAC,QAAQ,CAAC,6DAA6D,EAAE;0IACiC,CAAC;qBAC9H;iBACJ,CAAC;YACF,CAAC,cAAc,EAAE;oBACb;wBACI,WAAW,EAAE,SAAG,CAAC,QAAQ,CAAC,yDAAyD,EAAE;;qDAEhD,CAAC;qBACzC;iBACJ,CAAC;YACF,CAAC,aAAa,EAAE;oBACZ;wBACI,IAAI,EAAE,oBAAoB;wBAC1B,WAAW,EAAE,SAAG,CAAC,QAAQ,CAAC,wDAAwD,EAAE;;qDAE/C,CAAC;qBACzC;iBACJ,CAAC;YACF,CAAC,cAAc,EAAE;oBACb;wBACI,IAAI,EAAE,yBAAyB;wBAC/B,WAAW,EAAE,SAAG,CAAC,QAAQ,CAAC,6DAA6D,EAAE;uCAClE,CAAC;qBAC3B;oBACD;wBACI,IAAI,EAAE,IAAI;wBACV,WAAW,EAAE,SAAG,CAAC,QAAQ,CAAC,qDAAqD,EAAE;qEAC5B,CAAC;qBACzD;iBACJ,CAAC;YACF,CAAC,qBAAqB,EAAE;oBACpB;wBACI,IAAI,EAAE,wBAAwB;wBAC9B,WAAW,EAAE,SAAG,CAAC,QAAQ,CAAC,4DAA4D,EAAE;sDAClD,CAAC;qBAC1C;iBACJ,CAAC;YACF,CAAC,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC;YACpB,CAAC,iBAAiB,EAAE,CAAC,EAAE,CAAC,CAAC;SAC5B,CAAC,CAAC;IA4DP,CAAC;IA1DG,iBAAiB,CAAC,OAA0B;QACxC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;YAC3D,8GAA8G;YAC9G,+FAA+F;YAC/F,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;gBACpD,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;oBAC7C,OAAO,CAAC,gDAAgD;gBAC5D,CAAC;gBAED,MAAM,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAE,CAAC;gBAE5D,0CAA0C;gBAC1C,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE;oBAChC,MAAM,OAAO,GAAG,CAAC,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC;oBAC5F,MAAM,cAAc,GAAG,CAAC,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW;wBACnG,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,IAAI,QAAQ,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW;4BAChF,CAAC,CAAC,SAAG,CAAC,QAAQ,CAAC,qDAAqD,EAAE,yBAAyB,CAAC,CAAC,CAAC;oBAE1G,uFAAuF;oBACvF,MAAM,QAAQ,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;oBACxD,MAAM,EAAE,GAAG,GAAG,2BAAyB,CAAC,YAAY,GAAG,QAAQ,CAAC,IAAI,GAAG,QAAQ,EAAE,CAAC;oBAElF,OAAO,CAAC,gBAAgB,CAAC;wBACrB,EAAE;wBACF,IAAI,EAAE,OAAO;wBACb,WAAW,EAAE,cAAc;qBAC9B,EAAE,IAAI,CAAC,CAAC;gBACb,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAES,eAAe,CAAC,OAAoC;QAC1D,6FAA6F;QAC7F,IAAI,UAAU,GAAG,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC;QACrC,IAAI,UAAU,CAAC,UAAU,CAAC,2BAAyB,CAAC,YAAY,CAAC,EAAE,CAAC;YAChE,UAAU,GAAG,UAAU,CAAC,KAAK,CAAC,2BAAyB,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YAC7E,mDAAmD;YACnD,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QACjD,CAAC;QAED,OAAO,MAAM,UAAU,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC;IACtE,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,OAAoC,EAAE,OAA0B;QAC7E,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,UAAU,CAAC,2BAAyB,CAAC,YAAY,CAAC,EAAE,CAAC;YAC1E,OAAO,CAAC,CAAC;QACb,CAAC;QACD,yEAAyE;QACzE,6EAA6E;QAC7E,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,CAAC;QACpG,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,OAAoC,EAAE,OAA0B;QAC1E,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,CAAC;QACpG,OAAO,QAAQ,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;IAClF,CAAC;;AAtHQ,8DAAyB;AAEV,sCAAY,GAAG,QAAQ,CAAC;AAG7B;IADlB,sBAAM,EAAC,iCAAuB,CAAC;sCACY,iCAAuB;0EAAC;AAGjD;IADlB,sBAAM,EAAC,0BAAgB,CAAC;sCACY,0BAAgB;mEAAC;AAGnC;IADlB,sBAAM,EAAC,4DAA+B,CAAC;sCACP,4DAA+B;+DAAC;oCAXxD,yBAAyB;IADrC,0BAAU,GAAE;GACA,yBAAyB,CAuHrC;;;;;;;;;;;;ACxJD,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;AAEhF,oIAAiF;AACjF,wGAAsC;AAEtC,0JAA8E;AAC9E,yHAA6D;AAGtD,IAAM,2BAA2B,GAAjC,MAAM,2BAA2B;IAAjC;QACc,yBAAoB,GAAG,IAAI,cAAO,EAAc,CAAC;QACzD,wBAAmB,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC;IAMnE,CAAC;IAJG,gBAAgB,CAAC,KAAiB;QAC9B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;CAEJ;AARY,kEAA2B;sCAA3B,2BAA2B;IADvC,0BAAU,GAAE;GACA,2BAA2B,CAQvC;AAGM,IAAM,6BAA6B,GAAnC,MAAM,6BAA6B;IAAnC;QAQc,yBAAoB,GAAG,IAAI,cAAO,EAAyB,CAAC;QACpE,wBAAmB,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC;QAEvD,oBAAe,GAA0B,EAAE,CAAC;IAgGxD,CAAC;IA7Fa,IAAI;QACV,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,GAAG,EAAE;YAClD,IAAI,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;gBACjC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,iBAAiB;QACnB,IAAI,CAAC;YACD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,CAAC;YAC7D,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;YACzD,OAAO,IAAI,CAAC,eAAe,CAAC;QAChC,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,OAAO,CAAC,KAAK,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;YACxD,OAAO,EAAE,CAAC;QACd,CAAC;IACL,CAAC;IAED;;OAEG;IACK,oBAAoB,CAAC,MAAoB;QAC7C,iBAAiB;QACjB,MAAM,QAAQ,GAAG,IAAI,GAAG,EAMpB,CAAC;QAEL,4BAA4B;QAC5B,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE,CAAC;YACzB,MAAM,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAE3C,IAAI,QAAQ,EAAE,CAAC;gBACX,QAAQ,CAAC,WAAW,IAAI,KAAK,CAAC,WAAW,CAAC;gBAC1C,QAAQ,CAAC,YAAY,IAAI,KAAK,CAAC,YAAY,CAAC;gBAE5C,kCAAkC;gBAClC,IAAI,KAAK,CAAC,iBAAiB,KAAK,SAAS,EAAE,CAAC;oBACxC,QAAQ,CAAC,iBAAiB,IAAI,KAAK,CAAC,iBAAiB,CAAC;gBAC1D,CAAC;gBAED,uCAAuC;gBACvC,IAAI,KAAK,CAAC,qBAAqB,KAAK,SAAS,EAAE,CAAC;oBAC5C,QAAQ,CAAC,qBAAqB,IAAI,KAAK,CAAC,qBAAqB,CAAC;gBAClE,CAAC;gBAED,gDAAgD;gBAChD,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;oBACjF,QAAQ,CAAC,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC;gBACxC,CAAC;YACL,CAAC;iBAAM,CAAC;gBACJ,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE;oBACtB,WAAW,EAAE,KAAK,CAAC,WAAW;oBAC9B,YAAY,EAAE,KAAK,CAAC,YAAY;oBAChC,iBAAiB,EAAE,KAAK,CAAC,iBAAiB,IAAI,CAAC;oBAC/C,qBAAqB,EAAE,KAAK,CAAC,qBAAqB,IAAI,CAAC;oBACvD,QAAQ,EAAE,KAAK,CAAC,SAAS;iBAC5B,CAAC,CAAC;YACP,CAAC;QACL,CAAC;QAED,2CAA2C;QAC3C,MAAM,MAAM,GAA0B,EAAE,CAAC;QAEzC,KAAK,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,QAAQ,CAAC,OAAO,EAAE,EAAE,CAAC;YAC/C,MAAM,SAAS,GAAwB;gBACnC,OAAO;gBACP,WAAW,EAAE,IAAI,CAAC,WAAW;gBAC7B,YAAY,EAAE,IAAI,CAAC,YAAY;gBAC/B,QAAQ,EAAE,IAAI,CAAC,QAAQ;aAC1B,CAAC;YAEF,iEAAiE;YACjE,IAAI,IAAI,CAAC,iBAAiB,GAAG,CAAC,EAAE,CAAC;gBAC7B,SAAS,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;YACzD,CAAC;YAED,IAAI,IAAI,CAAC,qBAAqB,GAAG,CAAC,EAAE,CAAC;gBACjC,SAAS,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC;YACjE,CAAC;YAED,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC3B,CAAC;QAED,OAAO,MAAM,CAAC;IAClB,CAAC;CACJ;AA3GY,sEAA6B;AAGnB;IADlB,sBAAM,EAAC,kCAAuB,CAAC;;8EACoC;AAGjD;IADlB,sBAAM,EAAC,uCAAiB,CAAC;;wEAC8B;AAQ9C;IADT,6BAAa,GAAE;;;;yDAOf;wCApBQ,6BAA6B;IADzC,0BAAU,GAAE;GACA,6BAA6B,CA2GzC;;;;;;;;;;;;AC7ID,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;AAsBhF;;GAEG;AACU,iCAAyB,GAAG,MAAM,CAAC,2BAA2B,CAAC,CAAC;;;;;;;;;;;;ACvC7E,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;;AAEhF,oIAA0D;AAC1D,wGAA0C;AAY1C;;GAEG;AAEI,IAAM,kBAAkB,GAAxB,MAAM,kBAAkB;IAI3B;QACI,IAAI,CAAC,UAAU,GAAG,kBAAW,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;IAChD,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,WAAW,CAAC,SAAkB;QAChC,IAAI,CAAC;YACD,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,MAAM,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC;YAC9C,CAAC;iBAAM,CAAC;gBACJ,MAAM,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;YAC7C,CAAC;YACD,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;QAC7B,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,OAAO,CAAC,IAAI,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;YAC/C,IAAI,CAAC;gBACD,IAAI,QAAQ,CAAC,MAAM,EAAE,CAAC;oBAClB,IAAI,CAAC,WAAW,EAAE,CAAC;gBACvB,CAAC;gBACD,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;YAC7B,CAAC;YAAC,OAAO,aAAa,EAAE,CAAC;gBACrB,OAAO;oBACH,OAAO,EAAE,KAAK;oBACd,KAAK,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,wBAAwB;iBAC3E,CAAC;YACN,CAAC;QACL,CAAC;IACL,CAAC;IAEO,KAAK,CAAC,mBAAmB,CAAC,SAAkB;QAChD,MAAM,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;QAEzC,IAAI,QAAQ,CAAC,MAAM,EAAE,CAAC;YAClB,IAAI,CAAC;gBACD,MAAM,YAAY,GAAI,MAA0E,CAAC,iBAAiB,CAAC;gBACnH,IAAI,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,WAAW,EAAE,CAAC;oBAC5B,YAAY,CAAC,WAAW,EAAE,CAAC;gBAC/B,CAAC;qBAAM,CAAC;oBACJ,MAAM,CAAC,KAAK,EAAE,CAAC;gBACnB,CAAC;YACL,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACb,OAAO,CAAC,KAAK,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;YAC3D,CAAC;QACL,CAAC;IACL,CAAC;IAEO,KAAK,CAAC,kBAAkB,CAAC,SAAkB;QAC/C,MAAM,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;QACzC,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,QAAQ,CAAC,MAAM,EAAE,CAAC;YAClB,IAAI,CAAC,WAAW,EAAE,CAAC;QACvB,CAAC;IACL,CAAC;IAEO,KAAK,CAAC,kBAAkB,CAAC,SAAkB;QAC/C,MAAM,aAAa,GAAG,QAAQ,CAAC,KAAK,CAAC;QACrC,MAAM,UAAU,GAAG,SAAS;YACxB,CAAC,CAAC,qBAAqB,SAAS,aAAa;YAC7C,CAAC,CAAC,4BAA4B,CAAC;QAEnC,IAAI,UAAU,GAAG,CAAC,CAAC;QACnB,MAAM,SAAS,GAAG,CAAC,CAAC;QAEpB,MAAM,aAAa,GAAG,WAAW,CAAC,GAAG,EAAE;YACnC,IAAI,UAAU,IAAI,SAAS,EAAE,CAAC;gBAC1B,aAAa,CAAC,aAAa,CAAC,CAAC;gBAC7B,QAAQ,CAAC,KAAK,GAAG,aAAa,CAAC;gBAC/B,OAAO;YACX,CAAC;YAED,QAAQ,CAAC,KAAK,GAAG,UAAU,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,aAAa,CAAC;YACnE,UAAU,EAAE,CAAC;QACjB,CAAC,EAAE,GAAG,CAAC,CAAC;IACZ,CAAC;IAEO,sBAAsB;QAC1B,wFAAwF;QACxF,gFAAgF;QAChF,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,OAAO,QAAQ,CAAC,MAAM,KAAK,WAAW,EAAE,CAAC;YAC7D,wDAAwD;YACxD,IAAI,QAAQ,CAAC,MAAM,EAAE,CAAC;gBAClB,IAAI,CAAC,WAAW,EAAE,CAAC;YACvB,CAAC;QACL,CAAC;IACL,CAAC;IAEO,WAAW;QACf,IAAI,CAAC;YACD,MAAM,CAAC,KAAK,EAAE,CAAC;YAEf,sDAAsD;YACtD,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,QAAQ,CAAC,eAAe,CAAC,SAAS,GAAG,CAAC,EAAE,CAAC;gBACxE,MAAM,aAAa,GAAG,QAAQ,CAAC,eAAe,CAAC,SAAS,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;gBACpF,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACtB,UAAU,CAAC,GAAG,EAAE;oBACZ,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC;gBACtC,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,CAAC;QACL,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;QACpD,CAAC;IACL,CAAC;IAED;;OAEG;IACH,gBAAgB;QACZ,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,MAAM,YAAY,GAAI,MAA0E,CAAC,iBAAiB,CAAC;YACnH,OAAO,CAAC,CAAC,CAAC,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,WAAW,CAAC,CAAC;QACzC,CAAC;QAED,4EAA4E;QAC5E,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;OAEG;IACH,oBAAoB;QAKhB,MAAM,QAAQ,GAAa,EAAE,CAAC;QAC9B,IAAI,MAAM,GAAoC,MAAM,CAAC;QAErD,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,MAAM,GAAG,UAAU,CAAC;YACpB,MAAM,YAAY,GAAI,MAA0E,CAAC,iBAAiB,CAAC;YAEnH,IAAI,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,WAAW,EAAE,CAAC;gBAC5B,QAAQ,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;gBAC/C,QAAQ,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;gBACzC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAClC,CAAC;QACL,CAAC;aAAM,CAAC;YACJ,MAAM,GAAG,SAAS,CAAC;YACnB,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAChC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAE9B,IAAI,OAAO,QAAQ,CAAC,MAAM,KAAK,WAAW,EAAE,CAAC;gBACzC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;YACzC,CAAC;QACL,CAAC;QAED,OAAO;YACH,SAAS,EAAE,QAAQ,CAAC,MAAM,GAAG,CAAC;YAC9B,MAAM;YACN,QAAQ;SACX,CAAC;IACN,CAAC;CACJ;AAjKY,gDAAkB;6BAAlB,kBAAkB;IAD9B,0BAAU,GAAE;;GACA,kBAAkB,CAiK9B;;;;;;;;;;;;;;;AClMD,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;AAChF,wGAA2D;AAC3D,oIAAkE;AAClE,6IAAoD;AAWpD,mIAA6E;AAC7E,0HAA2C;AAE9B,uBAAe,GAAe;IACvC,EAAE,EAAE,iBAAiB;IACrB,WAAW,EAAE,UAAG,CAAC,QAAQ,CAAC,0CAA0C,EAAE,kDAAkD,CAAC;IACzH,IAAI,EAAE,QAAQ;IACd,IAAI,EAAE;QACF,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,UAAG,CAAC,QAAQ,CAAC,6CAA6C,EAAE,mCAAmC,CAAC,EAAE;KAChI;CACJ,CAAC;AAGK,IAAM,0BAA0B,GAAhC,MAAM,0BAA0B;IAWnC,iBAAiB,CAAC,OAA0B;QACxC,OAAO,CAAC,gBAAgB,CAAC,uBAAe,EAAE,IAAI,CAAC,CAAC;QAChD,OAAO,CAAC,sBAAsB,CAAC,uBAAe,EAAE,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACvF,OAAO,CAAC,kCAAkC,CAAC,uBAAe,EAAE,IAAI,CAAC,8BAA8B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAChH,CAAC;IAED,UAAU,CAAC,OAAoC,EAAE,OAA0B;QACvE,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,KAAK,uBAAe,CAAC,IAAI,EAAE,CAAC;YACjD,OAAO,CAAC,CAAC;QACb,CAAC;QACD,OAAO,CAAC,CAAC,CAAC;IACd,CAAC;IAED,KAAK,CAAC,OAAO,CACT,OAAoC,EACpC,OAA0B,EAC1B,iBAAwF;;QAExF,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,KAAK,uBAAe,CAAC,IAAI,EAAE,CAAC;YACjD,MAAM,QAAQ,GAAG,aAAO,CAAC,GAAG,0CAAE,IAAI,EAAE,CAAC;YACrC,IAAI,QAAQ,EAAE,CAAC;gBACX,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,yCAAyC,CAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,iBAAiB,CAAC,CAAC;gBAC3I,IAAI,cAAc,EAAE,CAAC;oBACjB,OAAO;wBACH,QAAQ,EAAE,OAAO,CAAC,QAAQ;wBAC1B,KAAK,EAAE,cAAc,CAAC,IAAI;wBAC1B,uBAAuB,EAAE,cAAc,CAAC,SAAS;qBACpD,CAAC;gBACN,CAAC;YACL,CAAC;QACL,CAAC;QACD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,sCAAsC,OAAO,CAAC,QAAQ,CAAC,IAAI,eAAe,OAAO,CAAC,GAAG,4BAA4B,CAAC,CAAC;QACrI,OAAO;YACH,QAAQ,EAAE,OAAO,CAAC,QAAQ;YAC1B,KAAK,EAAE,EAAE;YACT,uBAAuB,EAAE,EAAE;SAC9B,CAAC;IACN,CAAC;IAES,KAAK,CAAC,qBAAqB;QACjC,8DAA8D;QAC9D,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,8BAA8B,CAAC,CAAC;QACnE,qEAAqE;QACrE,qFAAqF;QACrF,OAAO,SAAS,CAAC;IACrB,CAAC;IAES,KAAK,CAAC,8BAA8B,CAC1C,KAA+B,EAC/B,QAAyB;QAEzB,MAAM,WAAW,GAAG,KAAK,CAAC,cAAc,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QAE9D,yEAAyE;QACzE,MAAM,gBAAgB,GAAG,WAAW,CAAC,WAAW,CAAC,wBAAU,CAAC,uBAAuB,EAAE,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC1G,IAAI,gBAAgB,KAAK,CAAC,CAAC,EAAE,CAAC;YAC1B,OAAO,SAAS,CAAC;QACrB,CAAC;QAED,uFAAuF;QACvF,MAAM,gBAAgB,GAAG,GAAG,wBAAU,CAAC,aAAa,GAAG,uBAAe,CAAC,IAAI,EAAE,CAAC;QAC9E,IAAI,gBAAgB,GAAG,gBAAgB,CAAC,MAAM;YAC1C,WAAW,CAAC,SAAS,CAAC,gBAAgB,GAAG,gBAAgB,CAAC,MAAM,EAAE,gBAAgB,CAAC,KAAK,gBAAgB,EAAE,CAAC;YAC3G,OAAO,SAAS,CAAC;QACrB,CAAC;QAED,MAAM,KAAK,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,EAAE,gBAAgB,GAAG,CAAC,EAAE,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;QAEhH,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,wBAAwB,EAAE,CAAC;QACpE,IAAI,wBAAwB,GAAkD,SAAS,CAAC;QAExF,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC3B,wBAAwB,GAAG,EAAE,CAAC;YAC9B,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,wBAAyB,CAAC,IAAI,CAC3D;gBACI,KAAK,EAAE,MAAM,CAAC,EAAE;gBAChB,IAAI,EAAE,+CAA0B,EAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,QAAQ;gBAClI,UAAU,EAAE,MAAM,CAAC,EAAE;gBACrB,KAAK;gBACL,MAAM,EAAE,+CAA0B,EAAC,MAAM,CAAC,CAAC,CAAC;oBACxC,UAAG,CAAC,QAAQ,CAAC,wDAAwD,EAAE,4BAA4B,CAAC,CAAC,CAAC;oBACtG,UAAG,CAAC,QAAQ,CAAC,yDAAyD,EAAE,0BAA0B,CAAC;gBACvG,QAAQ,EAAE,GAAG,MAAM,CAAC,EAAE,EAAE;aAC3B,CAAC,CAAC,CAAC,CAAC;QACb,CAAC;QAED,OAAO,wBAAwB,CAAC;IACpC,CAAC;CACJ;AAnGY,gEAA0B;AAGhB;IADlB,sBAAM,EAAC,qBAAc,CAAC;;kEAC2B;AAG/B;IADlB,sBAAM,EAAC,8BAAa,CAAC;;iEAC0B;AAGtC;IADT,sBAAM,EAAC,cAAO,CAAC;;0DACU;qCATjB,0BAA0B;IADtC,0BAAU,GAAE;GACA,0BAA0B,CAmGtC;;;;;;;;;;;;AC5ID,gFAAgF;AAChF,0CAA0C;AAC1C,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;AAEhF,wJAAoC;AACpC,gKAAwC;AACxC,oKAA0C;AAC1C,wLAAoD;;;;;;;;;;;;ACnBpD,gFAAgF;AAChF,yCAAyC;AACzC,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;AAEhF,oJAAqC;AACrC,kJAAoC;AACpC,0JAAwC;AACxC,8KAAkD;AAClD,kKAA4C;AAC5C,0JAAwC;AACxC,8JAA0C;;;;;;;;;;;ACtB7B;;;AAGb,aAAa,mBAAO,CAAC,0DAAc;AACnC,aAAa,mBAAO,CAAC,0DAAc;;;AAGnC;AACA;AACA;AACA;AACA;AACA;;;AAGA,iGAA0D;AAC1D,uGAA4D;AAC5D,kIAAqE;AACrE,sHAAiE;AACjE,sHAAiE;AACjE,+HAAoE;AACpE,mBAAmB;AACnB,sBAAsB;AACtB,mBAAmB;AACnB,oHAA+D;;AAE/D;AACA,oBAAoB;AACpB,aAAa,mBAAO,CAAC,oEAAmB;AACxC,aAAa,mBAAO,CAAC,kEAAkB;AACvC,aAAa,mBAAO,CAAC,8DAAgB;AACrC,aAAa,mBAAO,CAAC,gEAAiB;AACtC,aAAa,mBAAO,CAAC,kEAAkB;AACvC,aAAa,mBAAO,CAAC,8DAAgB;AACrC,aAAa,mBAAO,CAAC,0EAAsB;AAC3C,aAAa,mBAAO,CAAC,gEAAiB;AACtC,aAAa,mBAAO,CAAC,8DAAgB;AACrC,aAAa,mBAAO,CAAC,kEAAkB;AACvC,aAAa,mBAAO,CAAC,gEAAiB;AACtC,aAAa,mBAAO,CAAC,8DAAgB;AACrC,aAAa,mBAAO,CAAC,8DAAgB;AACrC;;AAEA;AACA,uBAAuB;AACvB,0BAA0B;AAC1B,uBAAuB;;;;;;;;;;;AC9CV;;;AAGb;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA,gDAAgD,gBAAgB;AAChE;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA,kBAAkB,eAAe;AACjC;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;;AAGA,wBAAwB;AACxB,uBAAuB;AACvB,sBAAsB;AACtB,qBAAqB;AACrB,6BAA6B;AAC7B,qBAAqB;;;;;;;;;;;AC1DR;;AAEb;;AAEA,0BAA0B,mBAAO,CAAC,sDAAU;AAC5C,0BAA0B,mBAAO,CAAC,4DAAa;AAC/C,0BAA0B,mBAAO,CAAC,sEAAkB;;AAEpD;AACA;;AAEA;AACA,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC,KAAK;AAC3C,sCAAsC;AACtC,sCAAsC,KAAK;;AAE3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,wCAAwC,gBAAgB;AACxD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,uDAAuD,gBAAgB;AACvE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,MAAM;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,8BAA8B;AAC9B;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAmB;AACrC;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,0CAA0C,gBAAgB;AAC1D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,0CAA0C,gBAAgB;AAC1D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gCAAgC;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iDAAiD,gBAAgB;;AAEjE;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB;;AAEA;;AAEA;;AAEA;AACA,gBAAgB;AAChB;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,gBAAgB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA,iDAAiD,gBAAgB;AACjE;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,6BAA6B,GAAG;AAChC;;AAEA;AACA;;AAEA;;AAEA,4CAA4C,gBAAgB;AAC5D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,qDAAqD,gBAAgB;AACrE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA,gDAAgD,gBAAgB;AAChE;AACA;AACA,QAAQ;AACR;;AAEA,uDAAuD,gBAAgB;AACvE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,kCAAkC,WAAW;AAC7C;;AAEA;;AAEA;AACA;;AAEA,mBAAmB;;;;;;;;;;;ACp8BnB;AACA;AACa;;;AAGb;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;;;;;;;;;;;ACtDa;;AAEb;;AAEA,0BAA0B,mBAAO,CAAC,sDAAU;AAC5C,0BAA0B,mBAAO,CAAC,4DAAa;AAC/C,0BAA0B,mBAAO,CAAC,wDAAW;AAC7C,0BAA0B,mBAAO,CAAC,sEAAkB;;;AAGpD;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,6CAA6C,EAAE;AAC/C;AACA,oDAAoD,EAAE,eAAe,EAAE,YAAY;;;AAGnF,uBAAuB;;AAEvB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,wBAAwB;AACxB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wCAAwC;AACxC;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;;AAEd;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,oDAAoD,qBAAqB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8CAA8C;AAC9C;;AAEA;;AAEA,gDAAgD,kBAAkB;AAClE;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,+CAA+C,kBAAkB;AACjE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD,kBAAkB;AACrE;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAM;AACN;;AAEA;AACA;AACA;;AAEA,MAAM;AACN;AACA;;AAEA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA,MAAM;AACN;AACA;AACA;;AAEA,MAAM;AACN;;AAEA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA,QAAQ;AACR;AACA;;AAEA,QAAQ;AACR;AACA;;AAEA,eAAe,eAAe;AAC9B;;AAEA;AACA;;AAEA,YAAY;AACZ;AACA;AACA;;AAEA;;AAEA;;AAEA,QAAQ;AACR;AACA;;AAEA;;AAEA,MAAM;AACN;AACA;AACA;;AAEA,MAAM;AACN;;AAEA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,sBAAsB;AACtB;AACA;AACA,IAAI,yBAAyB;AAC7B,sBAAsB,KAAK;AAC3B;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA,MAAM;AACN;AACA,6EAA6E;AAC7E,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;;AAEA,MAAM;AACN;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR,8BAA8B;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ;AACR;AACA;;AAEA;AACA,QAAQ;AACR,8BAA8B;AAC9B;AACA;;AAEA;AACA,QAAQ;AACR;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ;AACR;AACA;AACA;;AAEA,QAAQ;AACR,6DAA6D,sBAAsB;AACnF;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,UAAU;AACV,oEAAoE;;AAEpE,UAAU;AACV;AACA;AACA,uBAAuB;AACvB;;AAEA,QAAQ;AACR,+DAA+D;;AAE/D,QAAQ;AACR;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,IAAI;AACJ;AACA;AACA;;AAEA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA,IAAI;AACJ;;AAEA,IAAI;AACJ;;AAEA,IAAI;AACJ;;AAEA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA,UAAU;AACV;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;;AAEA,mEAAmE,0BAA0B;AAC7F;;AAEA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA,0DAA0D,0BAA0B;AACpF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8EAA8E;AAC9E;;AAEA,kDAAkD;AAClD;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,iDAAiD,gBAAgB;AACjE;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;;AAGA,sBAAsB;AACtB,mBAAmB;;;;;;;;;;;AC9rDN;;AAEb;;AAEA,oBAAoB,mBAAO,CAAC,4DAAa;AACzC,oBAAoB,mBAAO,CAAC,kDAAQ;;;AAGpC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA,kBAAkB;AAClB,oBAAoB;AACpB,mBAAmB;AACnB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA,6CAA6C,gBAAgB;AAC7D;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAI;AACJ;AACA;;AAEA,IAAI;AACJ,uBAAuB,kEAAkE;AACzF;AACA;;AAEA,IAAI;AACJ;AACA,iCAAiC,kCAAkC;AACnE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;;;;;;;;;;;ACxHA;AACA;AACA;AACA;AACA;;;AAGa;;;AAGb,+FAAkC;;;;;;;;;;;ACVlC;AACA;AACA;AACA;AACA;;;AAGa;;;AAGb,iBAAiB,uFAAwB;AACzC;AACA,IAAI,mBAAO,CAAC,uEAAmB;AAC/B,IAAI,mBAAO,CAAC,+DAAe;AAC3B;AACA;AACA,IAAI,mBAAO,CAAC,iEAAgB;AAC5B,IAAI,mBAAO,CAAC,6DAAc;AAC1B,IAAI,mBAAO,CAAC,+DAAe;AAC3B,IAAI,mBAAO,CAAC,2DAAa;AACzB;AACA,CAAC;;;;;;;;;;;ACrBD;AACA;;;AAGa;;;AAGb,aAAa,mBAAO,CAAC,uDAAW;;;AAGhC;AACA;AACA,IAAI,mBAAO,CAAC,2DAAa;AACzB,IAAI,mBAAO,CAAC,2DAAa;AACzB,IAAI,mBAAO,CAAC,2DAAa;AACzB;AACA,CAAC;;;;;;;;;;;AChBD;AACA;AACA;AACA;AACA;AACA;;;AAGa;;;AAGb,iBAAiB,+FAA4B;AAC7C;AACA,IAAI,mBAAO,CAAC,6DAAc;AAC1B,IAAI,mBAAO,CAAC,6DAAc;AAC1B,IAAI,mBAAO,CAAC,2DAAa;AACzB,IAAI,mBAAO,CAAC,+DAAe;AAC3B;AACA,CAAC;;;;;;;;;;;AClBY;;;AAGb,aAAa,mBAAO,CAAC,sDAAU;;;AAG/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,cAAc,0BAA0B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,cAAc,yBAAyB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;;;;;;;;;;ACpGa;;AAEb,oBAAoB,mBAAO,CAAC,4DAAa;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,gCAAgC;AAChC;AACA;AACA,iEAAiE;AACjE,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACjEa;;AAEb;;;AAGA,WAAW,mBAAO,CAAC,mDAAS;;;AAG5B;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA,gBAAgB,WAAW;AAC3B;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;AC5HY;;AAEb,WAAW,mBAAO,CAAC,mDAAS;;AAE5B;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mCAAmC;AACtE,mCAAmC,mCAAmC;AACtE,mCAAmC;AACnC,GAAG;AACH;AACA,CAAC;;;;;;;;;;;AClCY;;AAEb,aAAa,mBAAO,CAAC,uDAAW;AAChC,aAAa,mBAAO,CAAC,mDAAS;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,IAAI;AACJ;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;AChGY;;AAEb,aAAa,mBAAO,CAAC,uDAAW;AAChC,aAAa,mBAAO,CAAC,mDAAS;;AAE9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;A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","sources":["webpack:///./node_modules/@theia/ai-core/src/browser/agent-completion-notification-service.ts?","webpack:///./node_modules/@theia/ai-core/src/browser/ai-activation-service.ts?","webpack:///./node_modules/@theia/ai-core/src/browser/ai-command-handler-factory.ts?","webpack:///./node_modules/@theia/ai-core/src/browser/ai-core-command-contribution.ts?","webpack:///./node_modules/@theia/ai-core/src/browser/ai-core-frontend-application-contribution.ts?","webpack:///./node_modules/@theia/ai-core/src/browser/ai-core-frontend-module.ts?","webpack:///./node_modules/@theia/ai-core/src/browser/ai-core-preferences.ts?","webpack:///./node_modules/@theia/ai-core/src/browser/ai-settings-service.ts?","webpack:///./node_modules/@theia/ai-core/src/browser/ai-variable-uri-label-provider.ts?","webpack:///./node_modules/@theia/ai-core/src/browser/file-variable-contribution.ts?","webpack:///./node_modules/@theia/ai-core/src/browser/frontend-language-model-alias-registry.ts?","webpack:///./node_modules/@theia/ai-core/src/browser/frontend-language-model-registry.ts?","webpack:///./node_modules/@theia/ai-core/src/browser/frontend-language-model-service.ts?","webpack:///./node_modules/@theia/ai-core/src/browser/frontend-prompt-customization-service.ts?","webpack:///./node_modules/@theia/ai-core/src/browser/frontend-variable-service.ts?","webpack:///./node_modules/@theia/ai-core/src/browser/open-editors-variable-contribution.ts?","webpack:///./node_modules/@theia/ai-core/src/browser/os-notification-service.ts?","webpack:///./node_modules/@theia/ai-core/src/browser/prompttemplate-contribution.ts?","webpack:///./node_modules/@theia/ai-core/src/browser/theia-variable-contribution.ts?","webpack:///./node_modules/@theia/ai-core/src/browser/token-usage-frontend-service-impl.ts?","webpack:///./node_modules/@theia/ai-core/src/browser/token-usage-frontend-service.ts?","webpack:///./node_modules/@theia/ai-core/src/browser/window-blink-service.ts?","webpack:///./node_modules/@theia/ai-core/src/common/prompt-variable-contribution.ts?","webpack:///./node_modules/@theia/monaco/src/browser/textmate/index.ts?","webpack:///./node_modules/@theia/workspace/src/browser/index.ts?","webpack:///./node_modules/js-yaml/index.js?","webpack:///./node_modules/js-yaml/lib/common.js?","webpack:///./node_modules/js-yaml/lib/dumper.js?","webpack:///./node_modules/js-yaml/lib/exception.js?","webpack:///./node_modules/js-yaml/lib/loader.js?","webpack:///./node_modules/js-yaml/lib/schema.js?","webpack:///./node_modules/js-yaml/lib/schema/core.js?","webpack:///./node_modules/js-yaml/lib/schema/default.js?","webpack:///./node_modules/js-yaml/lib/schema/failsafe.js?","webpack:///./node_modules/js-yaml/lib/schema/json.js?","webpack:///./node_modules/js-yaml/lib/snippet.js?","webpack:///./node_modules/js-yaml/lib/type.js?","webpack:///./node_modules/js-yaml/lib/type/binary.js?","webpack:///./node_modules/js-yaml/lib/type/bool.js?","webpack:///./node_modules/js-yaml/lib/type/float.js?","webpack:///./node_modules/js-yaml/lib/type/int.js?","webpack:///./node_modules/js-yaml/lib/type/map.js?","webpack:///./node_modules/js-yaml/lib/type/merge.js?","webpack:///./node_modules/js-yaml/lib/type/null.js?","webpack:///./node_modules/js-yaml/lib/type/omap.js?","webpack:///./node_modules/js-yaml/lib/type/pairs.js?","webpack:///./node_modules/js-yaml/lib/type/seq.js?","webpack:///./node_modules/js-yaml/lib/type/set.js?","webpack:///./node_modules/js-yaml/lib/type/str.js?","webpack:///./node_modules/js-yaml/lib/type/timestamp.js?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2025 EclipseSource GmbH.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { PreferenceService } from '@theia/core/lib/browser/preferences';\nimport { MessageService } from '@theia/core/lib/common/message-service';\nimport { ApplicationShell } from '@theia/core/lib/browser/shell/application-shell';\nimport { nls } from '@theia/core/lib/common/nls';\nimport {\n    PREFERENCE_NAME_DEFAULT_NOTIFICATION_TYPE,\n} from './ai-core-preferences';\nimport { AgentService } from '../common/agent-service';\nimport { AISettingsService } from '../common/settings-service';\nimport { OSNotificationService } from './os-notification-service';\nimport { WindowBlinkService } from './window-blink-service';\nimport {\n    NotificationType,\n    NOTIFICATION_TYPE_OFF,\n    NOTIFICATION_TYPE_OS_NOTIFICATION,\n    NOTIFICATION_TYPE_MESSAGE,\n    NOTIFICATION_TYPE_BLINK,\n} from '../common/notification-types';\n\n@injectable()\nexport class AgentCompletionNotificationService {\n    @inject(PreferenceService)\n    protected readonly preferenceService: PreferenceService;\n\n    @inject(AgentService)\n    protected readonly agentService: AgentService;\n\n    @inject(AISettingsService)\n    protected readonly settingsService: AISettingsService;\n\n    @inject(OSNotificationService)\n    protected readonly osNotificationService: OSNotificationService;\n\n    @inject(MessageService)\n    protected readonly messageService: MessageService;\n\n    @inject(WindowBlinkService)\n    protected readonly windowBlinkService: WindowBlinkService;\n\n    @inject(ApplicationShell)\n    protected readonly shell: ApplicationShell;\n\n    /**\n     * Show a completion notification for the specified agent if enabled in preferences.\n     *\n     * @param agentId The unique identifier of the agent\n     * @param taskDescription Optional description of the completed task\n     */\n    async showCompletionNotification(\n        agentId: string,\n        taskDescription?: string,\n    ): Promise<void> {\n        const notificationType =\n            await this.getNotificationTypeForAgent(agentId);\n\n        if (notificationType === NOTIFICATION_TYPE_OFF || this.isChatWidgetFocused()) {\n            return;\n        }\n\n        try {\n            const agentName = this.resolveAgentName(agentId);\n            await this.executeNotificationType(\n                agentName,\n                taskDescription,\n                notificationType,\n            );\n        } catch (error) {\n            console.error(\n                'Failed to show agent completion notification:',\n                error,\n            );\n        }\n    }\n\n    /**\n     * Resolve the display name for an agent by its ID.\n     *\n     * @param agentId The unique identifier of the agent\n     * @returns The agent's display name or the agent ID if not found\n     */\n    protected resolveAgentName(agentId: string): string {\n        try {\n            const agents = this.agentService.getAllAgents();\n            const agent = agents.find(a => a.id === agentId);\n            return agent?.name || agentId;\n        } catch (error) {\n            console.warn(\n                `Failed to resolve agent name for ID '${agentId}':`,\n                error,\n            );\n            return agentId;\n        }\n    }\n\n    /**\n     * Get the preferred notification type for a specific agent.\n     * If no agent-specific preference is set, returns the global default notification type.\n     */\n    protected async getNotificationTypeForAgent(\n        agentId: string,\n    ): Promise<NotificationType> {\n        const agentSettings =\n            await this.settingsService.getAgentSettings(agentId);\n        const agentNotificationType = agentSettings?.completionNotification as NotificationType;\n\n        // If agent has no specific setting, use the global default\n        if (!agentNotificationType) {\n            return this.preferenceService.get<NotificationType>(\n                PREFERENCE_NAME_DEFAULT_NOTIFICATION_TYPE,\n                NOTIFICATION_TYPE_OFF,\n            );\n        }\n\n        return agentNotificationType;\n    }\n\n    /**\n     * Execute the specified notification type.\n     */\n    private async executeNotificationType(\n        agentName: string,\n        taskDescription: string | undefined,\n        type: NotificationType,\n    ): Promise<void> {\n        switch (type) {\n            case NOTIFICATION_TYPE_OS_NOTIFICATION:\n                await this.showOSNotification(agentName, taskDescription);\n                break;\n            case NOTIFICATION_TYPE_MESSAGE:\n                await this.showMessageServiceNotification(\n                    agentName,\n                    taskDescription,\n                );\n                break;\n            case NOTIFICATION_TYPE_BLINK:\n                await this.showBlinkNotification(agentName);\n                break;\n            default:\n                throw new Error(`Unknown notification type: ${type}`);\n        }\n    }\n\n    /**\n     * Show OS notification directly.\n     */\n    protected async showOSNotification(\n        agentName: string,\n        taskDescription?: string,\n    ): Promise<void> {\n        const result =\n            await this.osNotificationService.showAgentCompletionNotification(\n                agentName,\n                taskDescription,\n            );\n        if (!result.success) {\n            throw new Error(`OS notification failed: ${result.error}`);\n        }\n    }\n\n    /**\n     * Show MessageService notification.\n     */\n    protected async showMessageServiceNotification(\n        agentName: string,\n        taskDescription?: string,\n    ): Promise<void> {\n        const message = taskDescription\n            ? nls.localize(\n                'theia/ai-core/agentCompletionWithTask',\n                'Agent \"{0}\" has completed the task: {1}',\n                agentName,\n                taskDescription,\n            )\n            : nls.localize(\n                'theia/ai-core/agentCompletionMessage',\n                'Agent \"{0}\" has completed its task.',\n                agentName,\n            );\n        this.messageService.info(message);\n    }\n\n    /**\n     * Show window blink notification.\n     */\n    protected async showBlinkNotification(agentName: string): Promise<void> {\n        const result = await this.windowBlinkService.blinkWindow(agentName);\n        if (!result.success) {\n            throw new Error(\n                `Window blink notification failed: ${result.error}`,\n            );\n        }\n    }\n\n    /**\n     * Check if OS notifications are supported and enabled.\n     */\n    isOSNotificationSupported(): boolean {\n        return this.osNotificationService.isNotificationSupported();\n    }\n\n    /**\n     * Get the current OS notification permission status.\n     */\n    getOSNotificationPermission(): NotificationPermission {\n        return this.osNotificationService.getPermissionStatus();\n    }\n\n    /**\n     * Request OS notification permission from the user.\n     */\n    async requestOSNotificationPermission(): Promise<NotificationPermission> {\n        return this.osNotificationService.requestPermission();\n    }\n\n    /**\n     * Check if any chat widget currently has focus.\n     */\n    protected isChatWidgetFocused(): boolean {\n        const activeWidget = this.shell.activeWidget;\n        if (!activeWidget) {\n            return false;\n        }\n        return activeWidget.id === 'chat-view-widget';\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2024 EclipseSource GmbH.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { Emitter, Event, } from '@theia/core';\nimport { FrontendApplicationContribution } from '@theia/core/lib/browser';\nimport { ContextKeyService } from '@theia/core/lib/browser/context-key-service';\n\nexport const AIActivationService = Symbol('AIActivationService');\n/**\n * AIActivationService is used to manage the activation state of AI features in Theia.\n */\nexport interface AIActivationService {\n    isActive: boolean;\n    onDidChangeActiveStatus: Event<boolean>;\n}\n\n/**\n * Context key for the AI features. It is set to `true` if the feature is enabled.\n */\nexport const ENABLE_AI_CONTEXT_KEY = 'ai-features.AiEnable.enableAI';\n\n/**\n * Default implementation of AIActivationService marks the feature active by default.\n *\n * Adopters may override this implementation to provide custom activation logic.\n *\n * Note that '@theia/ai-ide' also overrides this service to provide activation based on preferences,\n * disabling the feature by default.\n */\n@injectable()\nexport class AIActivationServiceImpl implements AIActivationService, FrontendApplicationContribution {\n\n    @inject(ContextKeyService)\n    protected readonly contextKeyService: ContextKeyService;\n\n    isActive: boolean = true;\n\n    protected onDidChangeAIEnabled = new Emitter<boolean>();\n    get onDidChangeActiveStatus(): Event<boolean> {\n        return this.onDidChangeAIEnabled.event;\n    }\n\n    initialize(): void {\n        this.contextKeyService.createKey(ENABLE_AI_CONTEXT_KEY, true);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2024 EclipseSource GmbH.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { CommandHandler } from '@theia/core';\n\nexport type AICommandHandlerFactory = (handler: CommandHandler) => CommandHandler;\nexport const AICommandHandlerFactory = Symbol('AICommandHandlerFactory');\n","// *****************************************************************************\n// Copyright (C) 2025 EclipseSource GmbH.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Command, CommandContribution, CommandRegistry } from '@theia/core';\nimport { CommonCommands, codicon } from '@theia/core/lib/browser';\nimport { AICommandHandlerFactory } from './ai-command-handler-factory';\nimport { injectable, inject } from '@theia/core/shared/inversify';\n\nexport const AI_SHOW_SETTINGS_COMMAND: Command = Command.toLocalizedCommand({\n    id: 'ai-chat-ui.show-settings',\n    label: 'Show AI Settings',\n    iconClass: codicon('settings-gear'),\n});\n\n@injectable()\nexport class AiCoreCommandContribution implements CommandContribution {\n    @inject(AICommandHandlerFactory) protected readonly handlerFactory: AICommandHandlerFactory;\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(AI_SHOW_SETTINGS_COMMAND, this.handlerFactory({\n            execute: () => commands.executeCommand(CommonCommands.OPEN_PREFERENCES.id, 'ai-features'),\n        }));\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2024 EclipseSource GmbH.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { FrontendApplicationContribution } from '@theia/core/lib/browser';\nimport { inject, injectable, named } from '@theia/core/shared/inversify';\nimport { Agent } from '../common';\nimport { AgentService } from '../common/agent-service';\nimport { ContributionProvider } from '@theia/core/lib/common/contribution-provider';\n\n@injectable()\nexport class AICoreFrontendApplicationContribution implements FrontendApplicationContribution {\n    @inject(AgentService)\n    private readonly agentService: AgentService;\n\n    @inject(ContributionProvider) @named(Agent)\n    protected readonly agentsProvider: ContributionProvider<Agent>;\n\n    onStart(): void {\n        this.agentsProvider.getContributions().forEach(agent => {\n            this.agentService.registerAgent(agent);\n        });\n    }\n\n    onStop(): void {\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2024 EclipseSource GmbH.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { bindContributionProvider, CommandContribution, CommandHandler, ResourceResolver } from '@theia/core';\nimport {\n    RemoteConnectionProvider,\n    ServiceConnectionProvider,\n} from '@theia/core/lib/browser/messaging/service-connection-provider';\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { DefaultLanguageModelAliasRegistry } from './frontend-language-model-alias-registry';\nimport { LanguageModelAliasRegistry } from '../common/language-model-alias';\nimport {\n    AIVariableContribution,\n    AIVariableService,\n    ToolInvocationRegistry,\n    ToolInvocationRegistryImpl,\n    LanguageModelDelegateClient,\n    languageModelDelegatePath,\n    LanguageModelFrontendDelegate,\n    LanguageModelProvider,\n    LanguageModelRegistry,\n    LanguageModelRegistryClient,\n    languageModelRegistryDelegatePath,\n    LanguageModelRegistryFrontendDelegate,\n    PromptFragmentCustomizationService,\n    PromptService,\n    PromptServiceImpl,\n    ToolProvider,\n    TokenUsageService,\n    TOKEN_USAGE_SERVICE_PATH,\n    TokenUsageServiceClient,\n    AIVariableResourceResolver,\n    ConfigurableInMemoryResources,\n    Agent,\n    FrontendLanguageModelRegistry\n} from '../common';\nimport {\n    FrontendLanguageModelRegistryImpl,\n    LanguageModelDelegateClientImpl,\n} from './frontend-language-model-registry';\nimport { FrontendApplicationContribution, LabelProviderContribution } from '@theia/core/lib/browser';\nimport { TabBarToolbarContribution } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { LanguageGrammarDefinitionContribution } from '@theia/monaco/lib/browser/textmate';\nimport { AICoreFrontendApplicationContribution } from './ai-core-frontend-application-contribution';\nimport { bindAICorePreferences } from './ai-core-preferences';\nimport { AISettingsServiceImpl } from './ai-settings-service';\nimport { DefaultPromptFragmentCustomizationService } from './frontend-prompt-customization-service';\nimport { DefaultFrontendVariableService, FrontendVariableService } from './frontend-variable-service';\nimport { PromptTemplateContribution } from './prompttemplate-contribution';\nimport { FileVariableContribution } from './file-variable-contribution';\nimport { TheiaVariableContribution } from './theia-variable-contribution';\nimport { TodayVariableContribution } from '../common/today-variable-contribution';\nimport { AgentsVariableContribution } from '../common/agents-variable-contribution';\nimport { OpenEditorsVariableContribution } from './open-editors-variable-contribution';\nimport { AIActivationService, AIActivationServiceImpl } from './ai-activation-service';\nimport { AgentService, AgentServiceImpl } from '../common/agent-service';\nimport { AICommandHandlerFactory } from './ai-command-handler-factory';\nimport { AISettingsService } from '../common/settings-service';\nimport { AiCoreCommandContribution } from './ai-core-command-contribution';\nimport { PromptVariableContribution } from '../common/prompt-variable-contribution';\nimport { LanguageModelService } from '../common/language-model-service';\nimport { FrontendLanguageModelServiceImpl } from './frontend-language-model-service';\nimport { TokenUsageFrontendService } from './token-usage-frontend-service';\nimport { TokenUsageFrontendServiceImpl, TokenUsageServiceClientImpl } from './token-usage-frontend-service-impl';\nimport { AIVariableUriLabelProvider } from './ai-variable-uri-label-provider';\nimport { AgentCompletionNotificationService } from './agent-completion-notification-service';\nimport { OSNotificationService } from './os-notification-service';\nimport { WindowBlinkService } from './window-blink-service';\n\nexport default new ContainerModule(bind => {\n    bindContributionProvider(bind, Agent);\n    bindContributionProvider(bind, LanguageModelProvider);\n\n    bind(FrontendLanguageModelRegistryImpl).toSelf().inSingletonScope();\n    bind(FrontendLanguageModelRegistry).toService(FrontendLanguageModelRegistryImpl);\n    bind(LanguageModelRegistry).toService(FrontendLanguageModelRegistryImpl);\n\n    bind(LanguageModelDelegateClientImpl).toSelf().inSingletonScope();\n    bind(LanguageModelDelegateClient).toService(LanguageModelDelegateClientImpl);\n    bind(LanguageModelRegistryClient).toService(LanguageModelDelegateClient);\n\n    bind(LanguageModelRegistryFrontendDelegate).toDynamicValue(\n        ctx => {\n            const connection = ctx.container.get<ServiceConnectionProvider>(RemoteConnectionProvider);\n            const client = ctx.container.get<LanguageModelRegistryClient>(LanguageModelRegistryClient);\n            return connection.createProxy<LanguageModelRegistryFrontendDelegate>(languageModelRegistryDelegatePath, client);\n        }\n    );\n\n    bind(LanguageModelFrontendDelegate)\n        .toDynamicValue(ctx => {\n            const connection = ctx.container.get<ServiceConnectionProvider>(RemoteConnectionProvider);\n            const client = ctx.container.get<LanguageModelDelegateClient>(LanguageModelDelegateClient);\n            return connection.createProxy<LanguageModelFrontendDelegate>(languageModelDelegatePath, client);\n        })\n        .inSingletonScope();\n\n    bindAICorePreferences(bind);\n\n    bind(DefaultPromptFragmentCustomizationService).toSelf().inSingletonScope();\n    bind(PromptFragmentCustomizationService).toService(DefaultPromptFragmentCustomizationService);\n    bind(PromptServiceImpl).toSelf().inSingletonScope();\n    bind(PromptService).toService(PromptServiceImpl);\n\n    bind(PromptTemplateContribution).toSelf().inSingletonScope();\n    bind(LanguageGrammarDefinitionContribution).toService(PromptTemplateContribution);\n    bind(CommandContribution).toService(PromptTemplateContribution);\n    bind(TabBarToolbarContribution).toService(PromptTemplateContribution);\n\n    bind(AISettingsServiceImpl).toSelf().inSingletonScope();\n    bind(AISettingsService).toService(AISettingsServiceImpl);\n    bindContributionProvider(bind, AIVariableContribution);\n    bind(DefaultFrontendVariableService).toSelf().inSingletonScope();\n    bind(FrontendVariableService).toService(DefaultFrontendVariableService);\n    bind(AIVariableService).toService(FrontendVariableService);\n    bind(FrontendApplicationContribution).toService(FrontendVariableService);\n\n    bind(TheiaVariableContribution).toSelf().inSingletonScope();\n    bind(AIVariableContribution).toService(TheiaVariableContribution);\n\n    bind(AIVariableContribution).to(PromptVariableContribution).inSingletonScope();\n    bind(AIVariableContribution).to(TodayVariableContribution).inSingletonScope();\n    bind(AIVariableContribution).to(FileVariableContribution).inSingletonScope();\n    bind(AIVariableContribution).to(AgentsVariableContribution).inSingletonScope();\n    bind(AIVariableContribution).to(OpenEditorsVariableContribution).inSingletonScope();\n\n    bind(FrontendApplicationContribution).to(AICoreFrontendApplicationContribution).inSingletonScope();\n\n    bind(ToolInvocationRegistry).to(ToolInvocationRegistryImpl).inSingletonScope();\n    bindContributionProvider(bind, ToolProvider);\n\n    bind(AIActivationServiceImpl).toSelf().inSingletonScope();\n    bind(AIActivationService).toService(AIActivationServiceImpl);\n    bind(FrontendApplicationContribution).toService(AIActivationService);\n\n    bind(AgentServiceImpl).toSelf().inSingletonScope();\n    bind(AgentService).toService(AgentServiceImpl);\n\n    bind(AICommandHandlerFactory).toFactory<CommandHandler>(context => (handler: CommandHandler) => {\n        const activationService = context.container.get<AIActivationService>(AIActivationService);\n        return {\n            execute: (...args: unknown[]) => handler.execute(...args),\n            isEnabled: (...args: unknown[]) => activationService.isActive && (handler.isEnabled?.(...args) ?? true),\n            isVisible: (...args: unknown[]) => activationService.isActive && (handler.isVisible?.(...args) ?? true),\n            isToggled: handler.isToggled\n        };\n    });\n\n    bind(AiCoreCommandContribution).toSelf().inSingletonScope();\n    bind(CommandContribution).toService(AiCoreCommandContribution);\n    bind(FrontendLanguageModelServiceImpl).toSelf().inSingletonScope();\n    bind(LanguageModelService).toService(FrontendLanguageModelServiceImpl);\n\n    bind(TokenUsageFrontendService).to(TokenUsageFrontendServiceImpl).inSingletonScope();\n    bind(TokenUsageServiceClient).to(TokenUsageServiceClientImpl).inSingletonScope();\n\n    bind(DefaultLanguageModelAliasRegistry).toSelf().inSingletonScope();\n    bind(LanguageModelAliasRegistry).toService(DefaultLanguageModelAliasRegistry);\n\n    bind(TokenUsageService).toDynamicValue(ctx => {\n        const connection = ctx.container.get<ServiceConnectionProvider>(RemoteConnectionProvider);\n        const client = ctx.container.get<TokenUsageServiceClient>(TokenUsageServiceClient);\n        return connection.createProxy<TokenUsageService>(TOKEN_USAGE_SERVICE_PATH, client);\n    }).inSingletonScope();\n    bind(AIVariableResourceResolver).toSelf().inSingletonScope();\n    bind(ResourceResolver).toService(AIVariableResourceResolver);\n    bind(AIVariableUriLabelProvider).toSelf().inSingletonScope();\n    bind(LabelProviderContribution).toService(AIVariableUriLabelProvider);\n\n    bind(AgentCompletionNotificationService).toSelf().inSingletonScope();\n    bind(OSNotificationService).toSelf().inSingletonScope();\n    bind(WindowBlinkService).toSelf().inSingletonScope();\n    bind(ConfigurableInMemoryResources).toSelf().inSingletonScope();\n    bind(ResourceResolver).toService(ConfigurableInMemoryResources);\n});\n","// *****************************************************************************\n// Copyright (C) 2024 EclipseSource GmbH.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { nls } from '@theia/core';\nimport { PreferenceProxy, PreferenceSchema } from '@theia/core/lib/browser';\nimport { PreferenceProxyFactory } from '@theia/core/lib/browser/preferences/injectable-preference-proxy';\nimport { interfaces } from '@theia/core/shared/inversify';\nimport {\n    NOTIFICATION_TYPES,\n    NOTIFICATION_TYPE_OFF,\n    NotificationType\n} from '../common/notification-types';\n\nexport const AI_CORE_PREFERENCES_TITLE = nls.localize('theia/ai/core/prefs/title', '✨ AI Features [Beta]');\nexport const PREFERENCE_NAME_PROMPT_TEMPLATES = 'ai-features.promptTemplates.promptTemplatesFolder';\nexport const PREFERENCE_NAME_REQUEST_SETTINGS = 'ai-features.modelSettings.requestSettings';\nexport const PREFERENCE_NAME_MAX_RETRIES = 'ai-features.modelSettings.maxRetries';\nexport const PREFERENCE_NAME_DEFAULT_NOTIFICATION_TYPE = 'ai-features.notifications.default';\n\nexport const LANGUAGE_MODEL_ALIASES_PREFERENCE = 'ai-features.languageModelAliases';\n\nexport const aiCorePreferenceSchema: PreferenceSchema = {\n    type: 'object',\n    properties: {\n        [PREFERENCE_NAME_PROMPT_TEMPLATES]: {\n            title: AI_CORE_PREFERENCES_TITLE,\n            description: nls.localize('theia/ai/core/promptTemplates/description',\n                'Folder for storing customized prompt templates. If not customized the user config directory is used. Please consider to use a folder, which is\\\n            under version control to manage your variants of prompt templates.'),\n            type: 'string',\n            default: '',\n            typeDetails: {\n                isFilepath: true,\n                selectionProps: {\n                    openLabel: 'Select Folder',\n                    canSelectFiles: false,\n                    canSelectFolders: true,\n                    canSelectMany: false\n                }\n            },\n        },\n        [PREFERENCE_NAME_REQUEST_SETTINGS]: {\n            title: nls.localize('theia/ai/core/requestSettings/title', 'Custom Request Settings'),\n            markdownDescription: nls.localize('theia/ai/core/requestSettings/mdDescription', 'Allows specifying custom request settings for multiple models.\\n\\\n            Each setting consists of:\\n\\\n            - `scope`: Defines when the setting applies:\\n\\\n              - `modelId` (optional): The model ID to match\\n\\\n              - `providerId` (optional): The provider ID to match (e.g., huggingface, openai, ollama, llamafile)\\n\\\n              - `agentId` (optional): The agent ID to match\\n\\\n            - `requestSettings`: Model-specific settings as key-value pairs\\n\\\n            - `clientSettings`: Client-side message handling settings:\\n\\\n              - `keepToolCalls` (boolean): Whether to keep tool calls in the context\\n\\\n              - `keepThinking` (boolean): Whether to keep thinking messages\\n\\\n            Settings are matched based on specificity (agent: 100, model: 10, provider: 1 points).\\n\\\n            Refer to [our documentation](https://theia-ide.org/docs/user_ai/#custom-request-settings) for more information.'),\n            type: 'array',\n            items: {\n                type: 'object',\n                properties: {\n                    scope: {\n                        type: 'object',\n                        properties: {\n                            modelId: {\n                                type: 'string',\n                                description: 'The (optional) model id'\n                            },\n                            providerId: {\n                                type: 'string',\n                                description: 'The (optional) provider id to apply the settings to.',\n                            }, agentId: {\n                                type: 'string',\n                                description: 'The (optional) agent id to apply the settings to.',\n                            },\n                        }\n                    },\n                    requestSettings: {\n                        type: 'object',\n                        additionalProperties: true,\n                        description: 'Settings for the specific model ID.',\n                    },\n                    clientSettings: {\n                        type: 'object',\n                        additionalProperties: false,\n                        description: 'Client settings for how to handle messages that are send back to the llm.',\n                        properties: {\n                            keepToolCalls: {\n                                type: 'boolean',\n                                default: true,\n                                description: 'If set to false, all tool request and tool responses will be filtered \\\n                                before sending the next user request in a multi-turn conversation.'\n                            },\n                            keepThinking: {\n                                type: 'boolean',\n                                default: true,\n                                description: 'If set to false, all thinking output will be filtered before sending the next user request in a multi-turn conversation.'\n                            }\n                        }\n                    },\n                },\n                additionalProperties: false\n            },\n            default: [],\n        },\n        [PREFERENCE_NAME_MAX_RETRIES]: {\n            title: nls.localize('theia/ai/core/maxRetries/title', 'Maximum Retries'),\n            markdownDescription: nls.localize('theia/ai/core/maxRetries/mdDescription',\n                'The maximum number of retry attempts when a request to an AI provider fails. A value of 0 means no retries.'),\n            type: 'number',\n            minimum: 0,\n            default: 3\n        },\n        [PREFERENCE_NAME_DEFAULT_NOTIFICATION_TYPE]: {\n            title: nls.localize('theia/ai/core/defaultNotification/title', 'Default Notification Type'),\n            markdownDescription: nls.localize('theia/ai/core/defaultNotification/mdDescription',\n                'The default notification method used when an AI agent completes a task. Individual agents can override this setting.\\n\\\n                - `os-notification`: Show OS/system notifications\\n\\\n                - `message`: Show notifications in the status bar/message area\\n\\\n                - `blink`: Blink or highlight the UI\\n\\\n                - `off`: Disable all notifications'),\n            type: 'string',\n            enum: [...NOTIFICATION_TYPES],\n            default: NOTIFICATION_TYPE_OFF\n        },\n        [LANGUAGE_MODEL_ALIASES_PREFERENCE]: {\n            title: nls.localize('theia/ai/core/preference/languageModelAliases/title', 'Language Model Aliases'),\n            markdownDescription: nls.localize('theia/ai/core/preference/languageModelAliases/description', 'Configure models for each language model alias in the \\\n[AI Configuration View]({0}). Alternatiely you can set the settings manually in the settings.json: \\n\\\n```\\n\\\n\"default/code\": {\\n\\\n  \"selectedModel\": \"anthropic/claude-opus-4-20250514\"\\n\\\n}\\n\\```',\n                'command:aiConfiguration:open'\n            ),\n            type: 'object',\n            additionalProperties: {\n                type: 'object',\n                properties: {\n                    selectedModel: {\n                        type: 'string',\n                        description: nls.localize('theia/ai/core/preference/languageModelAliases/selectedModel', 'The user-selected model for this alias.')\n                    }\n                },\n                required: ['selectedModel'],\n                additionalProperties: false\n            },\n            default: {},\n        }\n    }\n};\n\nexport interface AICoreConfiguration {\n    [PREFERENCE_NAME_PROMPT_TEMPLATES]: string | undefined;\n    [PREFERENCE_NAME_REQUEST_SETTINGS]: Array<RequestSetting> | undefined;\n    [PREFERENCE_NAME_MAX_RETRIES]: number | undefined;\n    [PREFERENCE_NAME_DEFAULT_NOTIFICATION_TYPE]: NotificationType | undefined;\n}\n\nexport interface RequestSetting {\n    scope?: Scope;\n    clientSettings?: { keepToolCalls: boolean; keepThinking: boolean };\n    requestSettings?: { [key: string]: unknown };\n}\n\nexport interface Scope {\n    modelId?: string;\n    providerId?: string;\n    agentId?: string;\n}\n\nexport const AICorePreferences = Symbol('AICorePreferences');\nexport type AICorePreferences = PreferenceProxy<AICoreConfiguration>;\n\nexport function bindAICorePreferences(bind: interfaces.Bind): void {\n    bind(AICorePreferences).toDynamicValue(ctx => {\n        const factory = ctx.container.get<PreferenceProxyFactory>(PreferenceProxyFactory);\n        return factory(aiCorePreferenceSchema);\n    }).inSingletonScope();\n}\n\n/**\n * Calculates the specificity score of a RequestSetting for a given scope.\n * The score is calculated based on matching criteria:\n * - Agent match: 100 points\n * - Model match: 10 points\n * - Provider match: 1 point\n *\n * @param setting RequestSetting object to check against\n * @param scope Optional scope object containing modelId, providerId, and agentId\n * @returns Specificity score (-1 for non-match, or sum of matching criteria points)\n */\nexport const getRequestSettingSpecificity = (setting: RequestSetting, scope?: Scope): number => {\n    // If no scope is defined in the setting, return default specificity\n    if (!setting.scope) {\n        return 0;\n    }\n\n    // If no matching criteria are defined in the scope, return default specificity\n    if (!setting.scope.modelId && !setting.scope.providerId && !setting.scope.agentId) {\n        return 0;\n    }\n\n    // Check for explicit non-matches (return -1)\n    if (scope?.modelId && setting.scope.modelId && setting.scope.modelId !== scope.modelId) {\n        return -1;\n    }\n\n    if (scope?.providerId && setting.scope.providerId && setting.scope.providerId !== scope.providerId) {\n        return -1;\n    }\n\n    if (scope?.agentId && setting.scope.agentId && setting.scope.agentId !== scope.agentId) {\n        return -1;\n    }\n\n    let specificity = 0;\n\n    // Check provider match (1 point)\n    if (scope?.providerId && setting.scope.providerId === scope.providerId) {\n        specificity += 1;\n    }\n\n    // Check model match (10 points)\n    if (scope?.modelId && setting.scope.modelId === scope.modelId) {\n        specificity += 10;\n    }\n\n    // Check agent match (100 points)\n    if (scope?.agentId && setting.scope.agentId === scope.agentId) {\n        specificity += 100;\n    }\n\n    return specificity;\n};\n","// *****************************************************************************\n// Copyright (C) 2024 EclipseSource GmbH.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { DisposableCollection, Emitter, Event, ILogger } from '@theia/core';\nimport { PreferenceScope, PreferenceService } from '@theia/core/lib/browser';\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { JSONObject } from '@theia/core/shared/@lumino/coreutils';\nimport { AISettings, AISettingsService, AgentSettings } from '../common';\n\n@injectable()\nexport class AISettingsServiceImpl implements AISettingsService {\n\n    @inject(ILogger)\n    protected readonly logger: ILogger;\n\n    @inject(PreferenceService) protected preferenceService: PreferenceService;\n    static readonly PREFERENCE_NAME = 'ai-features.agentSettings';\n\n    protected toDispose = new DisposableCollection();\n\n    protected readonly onDidChangeEmitter = new Emitter<void>();\n    onDidChange: Event<void> = this.onDidChangeEmitter.event;\n\n    @postConstruct()\n    protected init(): void {\n        this.toDispose.push(\n            this.preferenceService.onPreferenceChanged(event => {\n                if (event.preferenceName === AISettingsServiceImpl.PREFERENCE_NAME) {\n                    this.onDidChangeEmitter.fire();\n                }\n            })\n        );\n    }\n\n    async updateAgentSettings(agent: string, agentSettings: Partial<AgentSettings>): Promise<void> {\n        const settings = await this.getSettings();\n        const newAgentSettings = { ...settings[agent], ...agentSettings };\n        settings[agent] = newAgentSettings;\n        try {\n            await this.preferenceService.set(AISettingsServiceImpl.PREFERENCE_NAME, settings, PreferenceScope.User);\n        } catch (e) {\n            this.onDidChangeEmitter.fire();\n            this.logger.warn('Updating the preferences was unsuccessful: ' + e);\n        }\n    }\n\n    async getAgentSettings(agent: string): Promise<AgentSettings | undefined> {\n        const settings = await this.getSettings();\n        return settings[agent];\n    }\n\n    async getSettings(): Promise<AISettings> {\n        await this.preferenceService.ready;\n        const pref = this.preferenceService.inspect<AISettings & JSONObject>(AISettingsServiceImpl.PREFERENCE_NAME);\n        return pref?.value ? pref.value : {};\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2025 Eclipse GmbH and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { URI } from '@theia/core';\nimport { LabelProvider, LabelProviderContribution } from '@theia/core/lib/browser';\nimport { AI_VARIABLE_RESOURCE_SCHEME, AIVariableResourceResolver } from '../common/ai-variable-resource';\nimport { AIVariableResolutionRequest, AIVariableService } from '../common/variable-service';\n\n@injectable()\nexport class AIVariableUriLabelProvider implements LabelProviderContribution {\n\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n    @inject(AIVariableResourceResolver) protected variableResourceResolver: AIVariableResourceResolver;\n    @inject(AIVariableService) protected readonly variableService: AIVariableService;\n\n    protected isMine(element: object): element is URI {\n        return element instanceof URI && element.scheme === AI_VARIABLE_RESOURCE_SCHEME;\n    }\n\n    canHandle(element: object): number {\n        return this.isMine(element) ? 150 : -1;\n    }\n\n    getIcon(element: object): string | undefined {\n        if (!this.isMine(element)) { return undefined; }\n        return this.labelProvider.getIcon(this.getResolutionRequest(element)!);\n    }\n\n    getName(element: object): string | undefined {\n        if (!this.isMine(element)) { return undefined; }\n        return this.labelProvider.getName(this.getResolutionRequest(element)!);\n    }\n\n    getLongName(element: object): string | undefined {\n        if (!this.isMine(element)) { return undefined; }\n        return this.labelProvider.getLongName(this.getResolutionRequest(element)!);\n    }\n\n    getDetails(element: object): string | undefined {\n        if (!this.isMine(element)) { return undefined; }\n        return this.labelProvider.getDetails(this.getResolutionRequest(element)!);\n    }\n\n    protected getResolutionRequest(element: object): AIVariableResolutionRequest | undefined {\n        if (!this.isMine(element)) { return undefined; }\n        const metadata = this.variableResourceResolver.fromUri(element);\n        if (!metadata) { return undefined; }\n        const { variableName, arg } = metadata;\n        const variable = this.variableService.getVariable(variableName);\n        return variable && { variable, arg };\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2025 EclipseSource GmbH.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Path, URI } from '@theia/core';\nimport { OpenerService, codiconArray, open } from '@theia/core/lib/browser';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\nimport { WorkspaceService } from '@theia/workspace/lib/browser/workspace-service';\nimport {\n    AIVariable,\n    AIVariableContext,\n    AIVariableContribution,\n    AIVariableOpener,\n    AIVariableResolutionRequest,\n    AIVariableResolver,\n    ResolvedAIContextVariable,\n} from '../common/variable-service';\nimport { FrontendVariableService } from './frontend-variable-service';\n\nexport namespace FileVariableArgs {\n    export const uri = 'uri';\n}\n\nexport const FILE_VARIABLE: AIVariable = {\n    id: 'file-provider',\n    description: 'Resolves the contents of a file',\n    name: 'file',\n    label: 'File',\n    iconClasses: codiconArray('file'),\n    isContextVariable: true,\n    args: [{ name: FileVariableArgs.uri, description: 'The URI of the requested file.' }]\n};\n\n@injectable()\nexport class FileVariableContribution implements AIVariableContribution, AIVariableResolver, AIVariableOpener {\n    @inject(FileService)\n    protected readonly fileService: FileService;\n\n    @inject(WorkspaceService)\n    protected readonly wsService: WorkspaceService;\n\n    @inject(OpenerService)\n    protected readonly openerService: OpenerService;\n\n    registerVariables(service: FrontendVariableService): void {\n        service.registerResolver(FILE_VARIABLE, this);\n        service.registerOpener(FILE_VARIABLE, this);\n    }\n\n    async canResolve(request: AIVariableResolutionRequest, _: AIVariableContext): Promise<number> {\n        return request.variable.name === FILE_VARIABLE.name ? 1 : 0;\n    }\n\n    async resolve(request: AIVariableResolutionRequest, _: AIVariableContext): Promise<ResolvedAIContextVariable | undefined> {\n        const uri = await this.toUri(request);\n\n        if (!uri) { return undefined; }\n\n        try {\n            const content = await this.fileService.readFile(uri);\n            return {\n                variable: request.variable,\n                value: await this.wsService.getWorkspaceRelativePath(uri),\n                contextValue: content.value.toString(),\n            };\n        } catch (error) {\n            return undefined;\n        }\n    }\n\n    protected async toUri(request: AIVariableResolutionRequest): Promise<URI | undefined> {\n        if (request.variable.name !== FILE_VARIABLE.name || request.arg === undefined) {\n            return undefined;\n        }\n\n        const path = request.arg;\n        return this.makeAbsolute(path);\n    }\n\n    canOpen(request: AIVariableResolutionRequest, context: AIVariableContext): Promise<number> {\n        return this.canResolve(request, context);\n    }\n\n    async open(request: AIVariableResolutionRequest, context: AIVariableContext): Promise<void> {\n        const uri = await this.toUri(request);\n        if (!uri) {\n            throw new Error('Unable to resolve URI for request.');\n        }\n        await open(this.openerService, uri);\n    }\n\n    protected async makeAbsolute(pathStr: string): Promise<URI | undefined> {\n        const path = new Path(Path.normalizePathSeparator(pathStr));\n        if (!path.isAbsolute) {\n            const workspaceRoots = this.wsService.tryGetRoots();\n            const wsUris = workspaceRoots.map(root => root.resource.resolve(path));\n            for (const uri of wsUris) {\n                if (await this.fileService.exists(uri)) {\n                    return uri;\n                }\n            }\n        }\n        const argUri = new URI(pathStr);\n        if (await this.fileService.exists(argUri)) {\n            return argUri;\n        }\n        return undefined;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2024-2025 EclipseSource GmbH.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { Emitter, Event } from '@theia/core';\nimport { LanguageModelAlias, LanguageModelAliasRegistry } from '../common/language-model-alias';\nimport { PreferenceScope, PreferenceService } from '@theia/core/lib/browser';\nimport { LANGUAGE_MODEL_ALIASES_PREFERENCE } from './ai-core-preferences';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\n\n@injectable()\nexport class DefaultLanguageModelAliasRegistry implements LanguageModelAliasRegistry {\n\n    protected aliases: LanguageModelAlias[] = [\n        {\n            id: 'default/code',\n            defaultModelIds: [\n                'anthropic/claude-3-7-sonnet-latest',\n                'openai/gpt-4.1',\n                'google/gemini-2.5-pro-exp-03-25'\n            ],\n            description: 'Optimized for code understanding and generation tasks.'\n        },\n        {\n            id: 'default/universal',\n            defaultModelIds: [\n                'openai/gpt-4o',\n                'anthropic/claude-3-7-sonnet-latest',\n                'google/gemini-2.5-pro-exp-03-25'\n            ],\n            description: 'Well-balanced for both code and general language use.'\n        },\n        {\n            id: 'default/code-completion',\n            defaultModelIds: [\n                'openai/gpt-4.1',\n                'anthropic/claude-3-7-sonnet-latest',\n                'google/gemini-2.5-pro-exp-03-25'\n            ],\n            description: 'Best suited for code autocompletion scenarios.'\n        },\n        {\n            id: 'default/summarize',\n            defaultModelIds: [\n                'openai/gpt-4.1',\n                'anthropic/claude-3-7-sonnet-latest',\n                'google/gemini-2.5-pro-exp-03-25'\n            ],\n            description: 'Models prioritized for summarization and condensation of content.'\n        }\n    ];\n    protected readonly onDidChangeEmitter = new Emitter<void>();\n    readonly onDidChange: Event<void> = this.onDidChangeEmitter.event;\n\n    @inject(PreferenceService)\n    protected readonly preferenceService: PreferenceService;\n\n    protected readonly _ready = new Deferred<void>();\n    get ready(): Promise<void> {\n        return this._ready.promise;\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.preferenceService.ready.then(() => {\n            this.loadFromPreference();\n            this.preferenceService.onPreferenceChanged(ev => {\n                if (ev.preferenceName === LANGUAGE_MODEL_ALIASES_PREFERENCE) {\n                    this.loadFromPreference();\n                }\n            });\n            this._ready.resolve();\n        }, err => {\n            this._ready.reject(err);\n        });\n    }\n\n    addAlias(alias: LanguageModelAlias): void {\n        const idx = this.aliases.findIndex(a => a.id === alias.id);\n        if (idx !== -1) {\n            this.aliases[idx] = alias;\n        } else {\n            this.aliases.push(alias);\n        }\n        this.saveToPreference();\n        this.onDidChangeEmitter.fire();\n    }\n\n    removeAlias(id: string): void {\n        const idx = this.aliases.findIndex(a => a.id === id);\n        if (idx !== -1) {\n            this.aliases.splice(idx, 1);\n            this.saveToPreference();\n            this.onDidChangeEmitter.fire();\n        }\n    }\n\n    getAliases(): LanguageModelAlias[] {\n        return [...this.aliases];\n    }\n\n    resolveAlias(id: string): string[] | undefined {\n        const alias = this.aliases.find(a => a.id === id);\n        if (!alias) {\n            return undefined;\n        }\n        if (alias.selectedModelId) {\n            return [alias.selectedModelId];\n        }\n        return alias.defaultModelIds;\n    }\n\n    /**\n     * Set the selected model for the given alias id.\n     * Updates the alias' selectedModelId to the given modelId, persists, and fires onDidChange.\n     */\n    selectModelForAlias(aliasId: string, modelId: string): void {\n        const alias = this.aliases.find(a => a.id === aliasId);\n        if (alias) {\n            alias.selectedModelId = modelId;\n            this.saveToPreference();\n            this.onDidChangeEmitter.fire();\n        }\n    }\n\n    /**\n     * Load aliases from the persisted setting\n     */\n    protected loadFromPreference(): void {\n        const stored = this.preferenceService.get<{ [name: string]: { selectedModel: string } }>(LANGUAGE_MODEL_ALIASES_PREFERENCE) || {};\n        this.aliases.forEach(alias => {\n            if (stored[alias.id] && stored[alias.id].selectedModel) {\n                alias.selectedModelId = stored[alias.id].selectedModel;\n            } else {\n                delete alias.selectedModelId;\n            }\n        });\n    }\n\n    /**\n     * Persist the current aliases and their selected models to the setting\n     */\n    protected saveToPreference(): void {\n        const map: { [name: string]: { selectedModel: string } } = {};\n        for (const alias of this.aliases) {\n            if (alias.selectedModelId) {\n                map[alias.id] = { selectedModel: alias.selectedModelId };\n            }\n        }\n        this.preferenceService.set(LANGUAGE_MODEL_ALIASES_PREFERENCE, map, PreferenceScope.User);\n    }\n}\n\n","// *****************************************************************************\n// Copyright (C) 2025 EclipseSource GmbH.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { CancellationToken, ILogger } from '@theia/core';\nimport {\n    inject,\n    injectable,\n    postConstruct,\n} from '@theia/core/shared/inversify';\nimport {\n    OutputChannel,\n    OutputChannelManager,\n    OutputChannelSeverity,\n} from '@theia/output/lib/browser/output-channel';\nimport {\n    AISettingsService,\n    DefaultLanguageModelRegistryImpl,\n    FrontendLanguageModelRegistry,\n    isLanguageModelParsedResponse,\n    isLanguageModelStreamResponse,\n    isLanguageModelStreamResponseDelegate,\n    isLanguageModelTextResponse,\n    isTextResponsePart,\n    LanguageModel,\n    LanguageModelAliasRegistry,\n    LanguageModelDelegateClient,\n    LanguageModelFrontendDelegate,\n    LanguageModelMetaData,\n    LanguageModelRegistryClient,\n    LanguageModelRegistryFrontendDelegate,\n    LanguageModelRequest,\n    LanguageModelResponse,\n    LanguageModelSelector,\n    LanguageModelStreamResponsePart,\n    ToolCallResult\n} from '../common';\n\n@injectable()\nexport class LanguageModelDelegateClientImpl\n    implements LanguageModelDelegateClient, LanguageModelRegistryClient {\n    onLanguageModelUpdated(id: string): void {\n        this.receiver.onLanguageModelUpdated(id);\n    }\n    protected receiver: FrontendLanguageModelRegistryImpl;\n\n    setReceiver(receiver: FrontendLanguageModelRegistryImpl): void {\n        this.receiver = receiver;\n    }\n\n    send(id: string, token: LanguageModelStreamResponsePart | undefined): void {\n        this.receiver.send(id, token);\n    }\n\n    toolCall(requestId: string, toolId: string, args_string: string): Promise<ToolCallResult> {\n        return this.receiver.toolCall(requestId, toolId, args_string);\n    }\n\n    error(id: string, error: Error): void {\n        this.receiver.error(id, error);\n    }\n\n    languageModelAdded(metadata: LanguageModelMetaData): void {\n        this.receiver.languageModelAdded(metadata);\n    }\n\n    languageModelRemoved(id: string): void {\n        this.receiver.languageModelRemoved(id);\n    }\n}\n\ninterface StreamState {\n    id: string;\n    tokens: (LanguageModelStreamResponsePart | undefined)[];\n    resolve?: (_: unknown) => void;\n    reject?: (_: unknown) => void;\n}\n\n@injectable()\nexport class FrontendLanguageModelRegistryImpl\n    extends DefaultLanguageModelRegistryImpl\n    implements FrontendLanguageModelRegistry {\n\n    @inject(LanguageModelAliasRegistry)\n    protected aliasRegistry: LanguageModelAliasRegistry;\n\n    // called by backend\n    languageModelAdded(metadata: LanguageModelMetaData): void {\n        this.addLanguageModels([metadata]);\n    }\n    // called by backend\n    languageModelRemoved(id: string): void {\n        this.removeLanguageModels([id]);\n    }\n\n    // called by backend when a model is updated\n    onLanguageModelUpdated(id: string): void {\n        this.updateLanguageModelFromBackend(id);\n    }\n\n    /**\n     * Fetch the updated model metadata from the backend and update the registry.\n     */\n    protected async updateLanguageModelFromBackend(id: string): Promise<void> {\n        try {\n            const backendModels = await this.registryDelegate.getLanguageModelDescriptions();\n            const updated = backendModels.find((m: { id: string }) => m.id === id);\n            if (updated) {\n                // Remove the old model and add the updated one\n                this.removeLanguageModels([id]);\n                this.addLanguageModels([updated]);\n            }\n        } catch (err) {\n            this.logger.error('Failed to update language model from backend', err);\n        }\n    }\n    @inject(LanguageModelRegistryFrontendDelegate)\n    protected registryDelegate: LanguageModelRegistryFrontendDelegate;\n\n    @inject(LanguageModelFrontendDelegate)\n    protected providerDelegate: LanguageModelFrontendDelegate;\n\n    @inject(LanguageModelDelegateClientImpl)\n    protected client: LanguageModelDelegateClientImpl;\n\n    @inject(ILogger)\n    protected override logger: ILogger;\n\n    @inject(OutputChannelManager)\n    protected outputChannelManager: OutputChannelManager;\n\n    @inject(AISettingsService)\n    protected settingsService: AISettingsService;\n\n    private static requestCounter: number = 0;\n\n    override addLanguageModels(models: LanguageModelMetaData[] | LanguageModel[]): void {\n        let modelAdded = false;\n        for (const model of models) {\n            if (this.languageModels.find(m => m.id === model.id)) {\n                console.warn(`Tried to add an existing model ${model.id}`);\n                continue;\n            }\n            if (LanguageModel.is(model)) {\n                this.languageModels.push(\n                    new Proxy(\n                        model,\n                        languageModelOutputHandler(\n                            () => this.outputChannelManager.getChannel(\n                                model.id\n                            )\n                        )\n                    )\n                );\n                modelAdded = true;\n            } else {\n                this.languageModels.push(\n                    new Proxy(\n                        this.createFrontendLanguageModel(\n                            model\n                        ),\n                        languageModelOutputHandler(\n                            () => this.outputChannelManager.getChannel(\n                                model.id\n                            )\n                        )\n                    )\n                );\n                modelAdded = true;\n            }\n        }\n        if (modelAdded) {\n            this.changeEmitter.fire({ models: this.languageModels });\n        }\n    }\n\n    @postConstruct()\n    protected override init(): void {\n        this.client.setReceiver(this);\n\n        const contributions =\n            this.languageModelContributions.getContributions();\n        const promises = contributions.map(provider => provider());\n        const backendDescriptions =\n            this.registryDelegate.getLanguageModelDescriptions();\n\n        Promise.allSettled([backendDescriptions, ...promises]).then(\n            results => {\n                const backendDescriptionsResult = results[0];\n                if (backendDescriptionsResult.status === 'fulfilled') {\n                    this.addLanguageModels(backendDescriptionsResult.value);\n                } else {\n                    this.logger.error(\n                        'Failed to add language models contributed from the backend',\n                        backendDescriptionsResult.reason\n                    );\n                }\n                for (let i = 1; i < results.length; i++) {\n                    // assert that index > 0 contains only language models\n                    const languageModelResult = results[i] as\n                        | PromiseRejectedResult\n                        | PromiseFulfilledResult<LanguageModel[]>;\n                    if (languageModelResult.status === 'fulfilled') {\n                        this.addLanguageModels(languageModelResult.value);\n                    } else {\n                        this.logger.error(\n                            'Failed to add some language models:',\n                            languageModelResult.reason\n                        );\n                    }\n                }\n                this.markInitialized();\n            }\n        );\n    }\n\n    createFrontendLanguageModel(\n        description: LanguageModelMetaData\n    ): LanguageModel {\n        return {\n            ...description,\n            request: async (request: LanguageModelRequest, cancellationToken?: CancellationToken) => {\n                const requestId = `${FrontendLanguageModelRegistryImpl.requestCounter++}`;\n                this.requests.set(requestId, request);\n                cancellationToken?.onCancellationRequested(() => {\n                    this.providerDelegate.cancel(requestId);\n                });\n                const response = await this.providerDelegate.request(\n                    description.id,\n                    request,\n                    requestId,\n                    cancellationToken\n                );\n                if (isLanguageModelTextResponse(response) || isLanguageModelParsedResponse(response)) {\n                    return response;\n                }\n                if (isLanguageModelStreamResponseDelegate(response)) {\n                    if (!this.streams.has(response.streamId)) {\n                        const newStreamState = {\n                            id: response.streamId,\n                            tokens: [],\n                        };\n                        this.streams.set(response.streamId, newStreamState);\n                    }\n                    const streamState = this.streams.get(response.streamId)!;\n                    return {\n                        stream: this.getIterable(streamState),\n                    };\n                }\n                this.logger.error(\n                    `Received unknown response in frontend for request to language model ${description.id}. Trying to continue without touching the response.`,\n                    response\n                );\n                return response;\n            },\n        };\n    }\n\n    protected streams = new Map<string, StreamState>();\n    protected requests = new Map<string, LanguageModelRequest>();\n\n    async *getIterable(\n        state: StreamState\n    ): AsyncIterable<LanguageModelStreamResponsePart> {\n        let current = -1;\n        while (true) {\n            if (current < state.tokens.length - 1) {\n                current++;\n                const token = state.tokens[current];\n                if (token === undefined) {\n                    // message is finished\n                    break;\n                }\n                if (token !== undefined) {\n                    yield token;\n                }\n            } else {\n                await new Promise((resolve, reject) => {\n                    state.resolve = resolve;\n                    state.reject = reject;\n                });\n            }\n        }\n        this.streams.delete(state.id);\n    }\n\n    // called by backend via the \"delegate client\" with new tokens\n    send(id: string, token: LanguageModelStreamResponsePart | undefined): void {\n        if (!this.streams.has(id)) {\n            const newStreamState = {\n                id,\n                tokens: [],\n            };\n            this.streams.set(id, newStreamState);\n        }\n        const streamState = this.streams.get(id)!;\n        streamState.tokens.push(token);\n        if (streamState.resolve) {\n            streamState.resolve(token);\n        }\n    }\n\n    // called by backend once tool is invoked\n    async toolCall(id: string, toolId: string, arg_string: string): Promise<ToolCallResult> {\n        if (!this.requests.has(id)) {\n            return { error: true, message: `No request found for ID '${id}'. The request may have been cancelled or completed.` };\n        }\n        const request = this.requests.get(id)!;\n        const tool = request.tools?.find(t => t.id === toolId);\n        if (tool) {\n            try {\n                return await tool.handler(arg_string);\n            } catch (error) {\n                const errorMessage = error instanceof Error ? error.message : String(error);\n                return { error: true, message: `Error executing tool '${toolId}': ${errorMessage}` };\n            };\n        }\n        return { error: true, message: `Tool '${toolId}' not found in the available tools for this request.` };\n    }\n\n    // called by backend via the \"delegate client\" with the error to use for rejection\n    error(id: string, error: Error): void {\n        if (!this.streams.has(id)) {\n            const newStreamState = {\n                id,\n                tokens: [],\n            };\n            this.streams.set(id, newStreamState);\n        }\n        const streamState = this.streams.get(id)!;\n        streamState.reject?.(error);\n    }\n\n    override async selectLanguageModels(request: LanguageModelSelector): Promise<LanguageModel[] | undefined> {\n        await this.initialized;\n        const userSettings = (await this.settingsService.getAgentSettings(request.agent))?.languageModelRequirements?.find(req => req.purpose === request.purpose);\n        const identifier = userSettings?.identifier ?? request.identifier;\n        if (identifier) {\n            const model = await this.getReadyLanguageModel(identifier);\n            if (model) {\n                return [model];\n            }\n        }\n        // Previously we returned the default model here, but this is not really transparent for the user so we do not select any model here.\n        return undefined;\n    }\n\n    async getReadyLanguageModel(idOrAlias: string): Promise<LanguageModel | undefined> {\n        await this.aliasRegistry.ready;\n        const modelIds = this.aliasRegistry.resolveAlias(idOrAlias);\n        if (modelIds) {\n            for (const modelId of modelIds) {\n                const model = await this.getLanguageModel(modelId);\n                if (model?.status.status === 'ready') {\n                    return model;\n                }\n            }\n            return undefined;\n        }\n        const languageModel = await this.getLanguageModel(idOrAlias);\n        return languageModel?.status.status === 'ready' ? languageModel : undefined;\n    }\n}\n\nconst formatJsonWithIndentation = (obj: unknown): string[] => {\n    // eslint-disable-next-line no-null/no-null\n    const jsonString = JSON.stringify(obj, null, 2);\n    const lines = jsonString.split('\\n');\n    const formattedLines: string[] = [];\n\n    lines.forEach(line => {\n        const subLines = line.split('\\\\n');\n        const index = indexOfValue(subLines[0]) + 1;\n        formattedLines.push(subLines[0]);\n        const prefix = index > 0 ? ' '.repeat(index) : '';\n        if (index !== -1) {\n            for (let i = 1; i < subLines.length; i++) {\n                formattedLines.push(prefix + subLines[i]);\n            }\n        }\n    });\n\n    return formattedLines;\n};\n\nconst indexOfValue = (jsonLine: string): number => {\n    const pattern = /\"([^\"]+)\"\\s*:\\s*/g;\n    const match = pattern.exec(jsonLine);\n    return match ? match.index + match[0].length : -1;\n};\n\nconst languageModelOutputHandler = (\n    outputChannelGetter: () => OutputChannel\n): ProxyHandler<LanguageModel> => ({\n    get<K extends keyof LanguageModel>(\n        target: LanguageModel,\n        prop: K,\n    ): LanguageModel[K] | LanguageModel['request'] {\n        const original = target[prop];\n        if (prop === 'request' && typeof original === 'function') {\n            return async function (\n                ...args: Parameters<LanguageModel['request']>\n            ): Promise<LanguageModelResponse> {\n                const outputChannel = outputChannelGetter();\n                outputChannel.appendLine(\n                    'Sending request:'\n                );\n                const formattedRequest = formatJsonWithIndentation(args[0]);\n                outputChannel.append(formattedRequest.join('\\n'));\n                if (args[1]) {\n                    args[1] = new Proxy(args[1], {\n                        get<CK extends keyof CancellationToken>(\n                            cTarget: CancellationToken,\n                            cProp: CK\n                        ): CancellationToken[CK] | CancellationToken['onCancellationRequested'] {\n                            if (cProp === 'onCancellationRequested') {\n                                return (...cargs: Parameters<CancellationToken['onCancellationRequested']>) => cTarget.onCancellationRequested(() => {\n                                    outputChannel.appendLine('\\nCancel requested', OutputChannelSeverity.Warning);\n                                    cargs[0]();\n                                }, cargs[1], cargs[2]);\n                            }\n                            return cTarget[cProp];\n                        }\n                    });\n                }\n                try {\n                    const result = await original.apply(target, args);\n                    if (isLanguageModelStreamResponse(result)) {\n                        outputChannel.appendLine('Received a response stream');\n                        const stream = result.stream;\n                        const loggedStream = {\n                            async *[Symbol.asyncIterator](): AsyncIterator<LanguageModelStreamResponsePart> {\n                                for await (const part of stream) {\n                                    outputChannel.append((isTextResponsePart(part) && part.content) || '');\n                                    yield part;\n                                }\n                                outputChannel.append('\\n');\n                                outputChannel.appendLine('End of stream');\n                            },\n                        };\n                        return {\n                            ...result,\n                            stream: loggedStream,\n                        };\n                    } else {\n                        outputChannel.appendLine('Received a response');\n                        outputChannel.appendLine(JSON.stringify(result));\n                        return result;\n                    }\n                } catch (err) {\n                    outputChannel.appendLine('An error occurred');\n                    if (err instanceof Error) {\n                        outputChannel.appendLine(\n                            err.message,\n                            OutputChannelSeverity.Error\n                        );\n                    }\n                    throw err;\n                }\n            };\n        }\n        return original;\n    },\n});\n","// *****************************************************************************\n// Copyright (C) 2025 EclipseSource GmbH.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { PreferenceService } from '@theia/core/lib/browser';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { Prioritizeable } from '@theia/core/lib/common/prioritizeable';\nimport { LanguageModel, LanguageModelResponse, UserRequest } from '../common';\nimport { LanguageModelServiceImpl } from '../common/language-model-service';\nimport { PREFERENCE_NAME_REQUEST_SETTINGS, RequestSetting, getRequestSettingSpecificity } from './ai-core-preferences';\n\n@injectable()\nexport class FrontendLanguageModelServiceImpl extends LanguageModelServiceImpl {\n\n    @inject(PreferenceService)\n    protected preferenceService: PreferenceService;\n\n    override async sendRequest(\n        languageModel: LanguageModel,\n        languageModelRequest: UserRequest\n    ): Promise<LanguageModelResponse> {\n        const requestSettings = this.preferenceService.get<RequestSetting[]>(PREFERENCE_NAME_REQUEST_SETTINGS, []);\n\n        const ids = languageModel.id.split('/');\n        const matchingSetting = mergeRequestSettings(requestSettings, ids[1], ids[0], languageModelRequest.agentId);\n        if (matchingSetting?.requestSettings) {\n            // Merge the settings, with user request taking precedence\n            languageModelRequest.settings = {\n                ...matchingSetting.requestSettings,\n                ...languageModelRequest.settings\n            };\n        }\n        if (matchingSetting?.clientSettings) {\n            // Merge the clientSettings, with user request taking precedence\n            languageModelRequest.clientSettings = {\n                ...matchingSetting.clientSettings,\n                ...languageModelRequest.clientSettings\n            };\n        }\n\n        return super.sendRequest(languageModel, languageModelRequest);\n    }\n}\n\nexport const mergeRequestSettings = (requestSettings: RequestSetting[], modelId: string, providerId: string, agentId?: string): RequestSetting => {\n    const prioritizedSettings = Prioritizeable.prioritizeAllSync(requestSettings,\n        setting => getRequestSettingSpecificity(setting, {\n            modelId,\n            providerId,\n            agentId\n        }));\n    // merge all settings from lowest to highest, identical priorities will be overwritten by the following\n    const matchingSetting = prioritizedSettings.reduceRight((acc, cur) => ({ ...acc, ...cur.value }), {} as RequestSetting);\n    return matchingSetting;\n};\n","// *****************************************************************************\n// Copyright (C) 2024 EclipseSource GmbH.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { DisposableCollection, URI, Event, Emitter } from '@theia/core';\nimport { OpenerService } from '@theia/core/lib/browser';\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { PromptFragmentCustomizationService, CustomAgentDescription, CustomizedPromptFragment } from '../common';\nimport { BinaryBuffer } from '@theia/core/lib/common/buffer';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\nimport { FileChangesEvent } from '@theia/filesystem/lib/common/files';\nimport { AICorePreferences, PREFERENCE_NAME_PROMPT_TEMPLATES } from './ai-core-preferences';\nimport { EnvVariablesServer } from '@theia/core/lib/common/env-variables';\nimport { load, dump } from 'js-yaml';\nimport { PROMPT_TEMPLATE_EXTENSION } from './prompttemplate-contribution';\n\n/**\n * Default template entry for creating custom agents\n */\nconst newCustomAgentEntry = {\n    id: 'my_agent',\n    name: 'My Agent',\n    description: 'This is an example agent. Please adapt the properties to fit your needs.',\n    prompt: `{{!-- Note: The context section below will resolve all context elements (e.g. files) to their full content\nin the system prompt. Context elements can be added by the user in the default chat view (e.g. via DnD or the \"+\" button).\nIf you want a more fine-grained, on demand resolvement of context elements, you can also resolve files to their paths only\nand equip the agent with functions so that the LLM can retrieve files on demand. See the Coder Agent prompt for an example.--}}\n\n# Role\nYou are an example agent. Be nice and helpful to the user.\n\n## Current Context\nSome files and other pieces of data may have been added by the user to the context of the chat. If any have, the details can be found below.\n{{contextDetails}}`,\n    defaultLLM: 'openai/gpt-4o'\n};\n\nexport enum CustomizationSource {\n    CUSTOMIZED = 1,\n    FOLDER = 2,\n    FILE = 3,\n}\n\nexport function getCustomizationSourceString(origin: CustomizationSource): string {\n    switch (origin) {\n        case CustomizationSource.FILE:\n            return 'Workspace Template Files';\n        case CustomizationSource.FOLDER:\n            return 'Workspace Template Directories';\n        default:\n            return 'Prompt Templates Folder';\n    }\n}\n\n/**\n * Interface defining properties that can be updated in the customization service\n */\nexport interface PromptFragmentCustomizationProperties {\n    /** Array of directory paths to load templates from */\n    directoryPaths?: string[];\n\n    /** Array of file paths to treat as templates */\n    filePaths?: string[];\n\n    /** Array of file extensions to consider as template files */\n    extensions?: string[];\n}\n\n/**\n * Internal representation of a fragment entry in the customization service\n */\ninterface PromptFragmentCustomization {\n    /** The template content */\n    template: string;\n\n    /** Source URI where this template is stored */\n    sourceUri: string;\n\n    /** Source type of the customization */\n    origin: CustomizationSource;\n\n    /** Priority level (higher values override lower ones) */\n    priority: number;\n\n    /** Fragment ID */\n    id: string;\n\n    /** Unique customization ID */\n    customizationId: string;\n}\n\n/**\n * Information about a template file being watched for changes\n */\ninterface WatchedFileInfo {\n    /** The URI of the watched file */\n    uri: URI;\n\n    /** The fragment ID associated with this file */\n    fragmentId: string;\n\n    /** The customization ID for this file */\n    customizationId: string;\n}\n\n@injectable()\nexport class DefaultPromptFragmentCustomizationService implements PromptFragmentCustomizationService {\n    @inject(EnvVariablesServer)\n    protected readonly envVariablesServer: EnvVariablesServer;\n\n    @inject(AICorePreferences)\n    protected readonly preferences: AICorePreferences;\n\n    @inject(FileService)\n    protected readonly fileService: FileService;\n\n    @inject(OpenerService)\n    protected readonly openerService: OpenerService;\n\n    /** Stores URI strings of template files from directories currently being monitored for changes. */\n    protected trackedTemplateURIs = new Set<string>();\n\n    /** Contains the currently active customization, mapped by prompt fragment ID. */\n    protected activeCustomizations = new Map<string, PromptFragmentCustomization>();\n\n    /** Tracks all loaded customizations, including overridden ones, mapped by source URI. */\n    protected allCustomizations = new Map<string, PromptFragmentCustomization>();\n\n    /** Stores additional directory paths for loading template files. */\n    protected additionalTemplateDirs = new Set<string>();\n\n    /** Contains file extensions that identify prompt template files. */\n    protected templateExtensions = new Set<string>([PROMPT_TEMPLATE_EXTENSION]);\n\n    /** Stores specific file paths, provided by the settings, that should be treated as templates. */\n    protected workspaceTemplateFiles = new Set<string>();\n\n    /** Maps URI strings to WatchedFileInfo objects for individually watched template files. */\n    protected watchedFiles = new Map<string, WatchedFileInfo>();\n\n    /** Collection of disposable resources for cleanup when the service updates or is disposed. */\n    protected toDispose = new DisposableCollection();\n\n    protected readonly onDidChangePromptFragmentCustomizationEmitter = new Emitter<string[]>();\n    readonly onDidChangePromptFragmentCustomization: Event<string[]> = this.onDidChangePromptFragmentCustomizationEmitter.event;\n\n    protected readonly onDidChangeCustomAgentsEmitter = new Emitter<void>();\n    readonly onDidChangeCustomAgents: Event<void> = this.onDidChangeCustomAgentsEmitter.event;\n\n    @postConstruct()\n    protected init(): void {\n        this.preferences.onPreferenceChanged(event => {\n            if (event.preferenceName === PREFERENCE_NAME_PROMPT_TEMPLATES) {\n                this.update();\n            }\n        });\n        this.update();\n    }\n\n    /**\n     * Updates the service by reloading all template files and watching for changes\n     */\n    protected async update(): Promise<void> {\n        this.toDispose.dispose();\n        // we need to assign local variables, so that updates running in parallel don't interfere with each other\n        const activeCustomizationsCopy = new Map<string, PromptFragmentCustomization>();\n        const trackedTemplateURIsCopy = new Set<string>();\n        const allCustomizationsCopy = new Map<string, PromptFragmentCustomization>();\n        const watchedFilesCopy = new Map<string, WatchedFileInfo>();\n\n        // Process in order of priority (lowest to highest)\n        // First process the main templates directory (lowest priority)\n        const templatesURI = await this.getTemplatesDirectoryURI();\n        await this.processTemplateDirectory(\n            activeCustomizationsCopy, trackedTemplateURIsCopy, allCustomizationsCopy, templatesURI, 1, CustomizationSource.CUSTOMIZED); // Priority 1 for customized fragments\n\n        // Process additional template directories (medium priority)\n        for (const dirPath of this.additionalTemplateDirs) {\n            const dirURI = URI.fromFilePath(dirPath);\n            await this.processTemplateDirectory(\n                activeCustomizationsCopy, trackedTemplateURIsCopy, allCustomizationsCopy, dirURI, 2, CustomizationSource.FOLDER); // Priority 2 for folder fragments\n        }\n\n        // Process specific template files (highest priority)\n        await this.processTemplateFiles(activeCustomizationsCopy, trackedTemplateURIsCopy, allCustomizationsCopy, watchedFilesCopy);\n\n        this.activeCustomizations = activeCustomizationsCopy;\n        this.trackedTemplateURIs = trackedTemplateURIsCopy;\n        this.allCustomizations = allCustomizationsCopy;\n        this.watchedFiles = watchedFilesCopy;\n\n        this.onDidChangeCustomAgentsEmitter.fire();\n    }\n\n    /**\n     * Adds a template to the customizations map, handling conflicts based on priority\n     * @param activeCustomizationsCopy The map to add the customization to\n     * @param id The fragment ID\n     * @param template The template content\n     * @param sourceUri The URI of the source file (used to distinguish updates from conflicts)\n     * @param allCustomizationsCopy The map to track all loaded customizations\n     * @param priority The customization priority\n     * @param origin The source type of the customization\n     */\n    protected addTemplate(\n        activeCustomizationsCopy: Map<string, PromptFragmentCustomization>,\n        id: string,\n        template: string,\n        sourceUri: string,\n        allCustomizationsCopy: Map<string, PromptFragmentCustomization>,\n        priority: number,\n        origin: CustomizationSource\n    ): void {\n        // Generate a unique customization ID based on source URI and priority\n        const customizationId = this.generateCustomizationId(id, sourceUri);\n\n        // Always add to allCustomizationsCopy to keep track of all customizations including overridden ones\n        if (sourceUri) {\n            allCustomizationsCopy.set(sourceUri, { id, template, sourceUri, priority, customizationId, origin });\n        }\n\n        const existingEntry = activeCustomizationsCopy.get(id);\n\n        if (existingEntry) {\n            // If this is an update to the same file (same source URI)\n            if (sourceUri && existingEntry.sourceUri === sourceUri) {\n                // Update the content while keeping the same priority and source\n                activeCustomizationsCopy.set(id, { id, template, sourceUri, priority, customizationId, origin });\n                return;\n            }\n\n            // If the new customization has higher priority, replace the existing one\n            if (priority > existingEntry.priority) {\n                activeCustomizationsCopy.set(id, { id, template, sourceUri, priority, customizationId, origin });\n                return;\n            } else if (priority === existingEntry.priority) {\n                // There is a conflict with the same priority, we ignore the new customization\n                const conflictSourceUri = existingEntry.sourceUri ? ` (Existing source: ${existingEntry.sourceUri}, New source: ${sourceUri})` : '';\n                console.warn(`Fragment conflict detected for ID '${id}' with equal priority.${conflictSourceUri}`);\n            }\n            return;\n        }\n\n        // No conflict at all, add the customization\n        activeCustomizationsCopy.set(id, { id, template, sourceUri, priority, customizationId, origin });\n    }\n\n    /**\n     * Generates a unique customization ID based on the fragment ID, source URI, and priority\n     * @param id The fragment ID\n     * @param sourceUri The source URI of the template\n     * @returns A unique customization ID\n     */\n    protected generateCustomizationId(id: string, sourceUri: string): string {\n        // Create a customization ID that contains information about the source and priority\n        // This ensures uniqueness across different customization sources\n        const sourceHash = this.hashString(sourceUri);\n        return `${id}_${sourceHash}`;\n    }\n\n    /**\n     * Simple hash function to generate a short identifier from a string\n     * @param str The string to hash\n     * @returns A string hash\n     */\n    protected hashString(str: string): string {\n        let hash = 0;\n        for (let i = 0; i < str.length; i++) {\n            const char = str.charCodeAt(i);\n            hash = ((hash << 5) - hash) + char;\n            hash = hash & hash; // Convert to 32bit integer\n        }\n        return Math.abs(hash).toString(36).substring(0, 8);\n    }\n\n    /**\n     * Removes a customization from customizations maps based on the source URI.\n     * Also checks for any lower-priority customizations with the same ID that might need to be loaded.\n     * @param sourceUri The URI of the source file being removed\n     * @param allCustomizationsCopy The map of all loaded customizations\n     * @param activeCustomizationsCopy The map of active customizations\n     * @param trackedTemplateURIsCopy Optional set of tracked URIs to update\n     * @returns The fragment ID that was removed, or undefined if no customization was found\n     */\n    protected removeCustomizationFromMaps(\n        sourceUri: string,\n        allCustomizationsCopy: Map<string, PromptFragmentCustomization>,\n        activeCustomizationsCopy: Map<string, PromptFragmentCustomization>,\n        trackedTemplateURIsCopy: Set<string>\n    ): string | undefined {\n        // Get the customization entry from allCustomizationsCopy\n        const removedCustomization = allCustomizationsCopy.get(sourceUri);\n        if (!removedCustomization) {\n            return undefined;\n        }\n        const fragmentId = removedCustomization.id;\n        allCustomizationsCopy.delete(sourceUri);\n        trackedTemplateURIsCopy.delete(sourceUri);\n\n        // If the customization is in the active customizations map, we check if there is another customization previously conflicting with it\n        const activeCustomization = activeCustomizationsCopy.get(fragmentId);\n        if (activeCustomization && activeCustomization.sourceUri === sourceUri) {\n            activeCustomizationsCopy.delete(fragmentId);\n            // Find any lower-priority customizations with the same ID that were previously ignored\n            const lowerPriorityCustomizations = Array.from(allCustomizationsCopy.values())\n                .filter(t => t.id === fragmentId)\n                .sort((a, b) => b.priority - a.priority); // Sort by priority (highest first)\n\n            // If there are any lower-priority customizations, add the highest priority one\n            if (lowerPriorityCustomizations.length > 0) {\n                const highestRemainingCustomization = lowerPriorityCustomizations[0];\n                activeCustomizationsCopy.set(fragmentId, highestRemainingCustomization);\n            }\n\n        }\n\n        return fragmentId;\n    }\n\n    /**\n     * Process the template files specified by path, watching for changes\n     * and loading their content into the customizations map\n     * @param activeCustomizationsCopy Map to store active customizations\n     * @param trackedTemplateURIsCopy Set to track URIs being monitored\n     * @param allCustomizationsCopy Map to store all loaded customizations\n     * @param watchedFilesCopy Map to store file watch information\n     */\n    protected async processTemplateFiles(\n        activeCustomizationsCopy: Map<string, PromptFragmentCustomization>,\n        trackedTemplateURIsCopy: Set<string>,\n        allCustomizationsCopy: Map<string, PromptFragmentCustomization>,\n        watchedFilesCopy: Map<string, WatchedFileInfo>\n    ): Promise<void> {\n        const priority = 3; // Highest priority for specific files\n\n        const parsedPromptFragments = new Set<string>();\n\n        for (const filePath of this.workspaceTemplateFiles) {\n            const fileURI = URI.fromFilePath(filePath);\n            const fragmentId = this.getFragmentIdFromFilePath(filePath);\n            const uriString = fileURI.toString();\n            const customizationId = this.generateCustomizationId(fragmentId, uriString);\n\n            watchedFilesCopy.set(uriString, { uri: fileURI, fragmentId, customizationId });\n            this.toDispose.push(this.fileService.watch(fileURI, { recursive: false, excludes: [] }));\n\n            if (await this.fileService.exists(fileURI)) {\n                trackedTemplateURIsCopy.add(uriString);\n                const fileContent = await this.fileService.read(fileURI);\n                this.addTemplate(activeCustomizationsCopy, fragmentId, fileContent.value, uriString, allCustomizationsCopy, priority, CustomizationSource.FILE);\n                parsedPromptFragments.add(fragmentId);\n            }\n        }\n\n        this.onDidChangePromptFragmentCustomizationEmitter.fire(Array.from(parsedPromptFragments));\n\n        this.toDispose.push(this.fileService.onDidFilesChange(async (event: FileChangesEvent) => {\n            // Only watch for changes that are in the watchedFiles map\n            if (!event.changes.some(change => this.watchedFiles.get(change.resource.toString()))) {\n                return;\n            }\n            // Track changes for batched notification\n            const changedFragmentIds = new Set<string>();\n\n            // Handle deleted files\n            for (const deletedFile of event.getDeleted()) {\n                const fileUriString = deletedFile.resource.toString();\n                const fileInfo = this.watchedFiles.get(fileUriString);\n\n                if (fileInfo) {\n                    const removedFragmentId = this.removeCustomizationFromMaps(fileUriString, allCustomizationsCopy, activeCustomizationsCopy, trackedTemplateURIsCopy);\n                    if (removedFragmentId) {\n                        changedFragmentIds.add(removedFragmentId);\n                    }\n                }\n            }\n\n            // Handle updated files\n            for (const updatedFile of event.getUpdated()) {\n                const fileUriString = updatedFile.resource.toString();\n                const fileInfo = this.watchedFiles.get(fileUriString);\n\n                if (fileInfo) {\n                    const fileContent = await this.fileService.read(fileInfo.uri);\n                    this.addTemplate(\n                        this.activeCustomizations,\n                        fileInfo.fragmentId,\n                        fileContent.value,\n                        fileUriString,\n                        this.allCustomizations,\n                        priority,\n                        CustomizationSource.FILE\n                    );\n                    changedFragmentIds.add(fileInfo.fragmentId);\n                }\n            }\n\n            // Handle newly created files\n            for (const addedFile of event.getAdded()) {\n                const fileUriString = addedFile.resource.toString();\n                const fileInfo = this.watchedFiles.get(fileUriString);\n\n                if (fileInfo) {\n                    const fileContent = await this.fileService.read(fileInfo.uri);\n                    this.addTemplate(\n                        this.activeCustomizations,\n                        fileInfo.fragmentId,\n                        fileContent.value,\n                        fileUriString,\n                        this.allCustomizations,\n                        priority,\n                        CustomizationSource.FILE\n                    );\n                    this.trackedTemplateURIs.add(fileUriString);\n                    changedFragmentIds.add(fileInfo.fragmentId);\n                }\n            }\n\n            const changedFragmentIdsArray = Array.from(changedFragmentIds);\n            if (changedFragmentIdsArray.length > 0) {\n                this.onDidChangePromptFragmentCustomizationEmitter.fire(changedFragmentIdsArray);\n            };\n        }));\n    }\n\n    /**\n     * Extract a fragment ID from a file path\n     * @param filePath The path to the template file\n     * @returns A fragment ID derived from the file name\n     */\n    protected getFragmentIdFromFilePath(filePath: string): string {\n        const uri = URI.fromFilePath(filePath);\n        return this.removePromptTemplateSuffix(uri.path.name);\n    }\n\n    /**\n     * Processes a directory for template files, adding them to the customizations map\n     * and setting up file watching\n     * @param activeCustomizationsCopy Map to store active customizations\n     * @param trackedTemplateURIsCopy Set to track URIs being monitored\n     * @param allCustomizationsCopy Map to store all loaded customizations\n     * @param dirURI URI of the directory to process\n     * @param priority Priority level for customizations in this directory\n     * @param customizationSource Source type of the customization\n     */\n    protected async processTemplateDirectory(\n        activeCustomizationsCopy: Map<string, PromptFragmentCustomization>,\n        trackedTemplateURIsCopy: Set<string>,\n        allCustomizationsCopy: Map<string, PromptFragmentCustomization>,\n        dirURI: URI,\n        priority: number,\n        customizationSource: CustomizationSource\n    ): Promise<void> {\n        if (!(await this.fileService.exists(dirURI))) {\n            return;\n        }\n        const stat = await this.fileService.resolve(dirURI);\n        if (stat.children === undefined) {\n            return;\n        }\n        const parsedPromptFragments = new Set<string>();\n        for (const file of stat.children) {\n            if (!file.isFile) {\n                continue;\n            }\n            const fileURI = file.resource;\n            if (this.isPromptTemplateExtension(fileURI.path.ext)) {\n                trackedTemplateURIsCopy.add(fileURI.toString());\n                const fileContent = await this.fileService.read(fileURI);\n                const fragmentId = this.removePromptTemplateSuffix(file.name);\n                this.addTemplate(activeCustomizationsCopy, fragmentId, fileContent.value, fileURI.toString(), allCustomizationsCopy, priority, customizationSource);\n                parsedPromptFragments.add(fragmentId);\n            }\n        }\n        this.onDidChangePromptFragmentCustomizationEmitter.fire(Array.from(parsedPromptFragments));\n        this.onDidChangeCustomAgentsEmitter.fire();\n\n        this.toDispose.push(this.fileService.watch(dirURI, { recursive: true, excludes: [] }));\n        this.toDispose.push(this.fileService.onDidFilesChange(async (event: FileChangesEvent) => {\n            // Only watch for changes within provided dir\n            if (!event.changes.some(change => change.resource.toString().startsWith(dirURI.toString()))) {\n                return;\n            }\n            if (event.changes.some(change => change.resource.toString().endsWith('customAgents.yml'))) {\n                this.onDidChangeCustomAgentsEmitter.fire();\n            }\n\n            // Track changes for batched notification\n            const changedFragmentIds = new Set<string>();\n\n            // check deleted templates\n            for (const deletedFile of event.getDeleted()) {\n                const uriString = deletedFile.resource.toString();\n                if (this.trackedTemplateURIs.has(uriString)) {\n                    const removedFragmentId = this.removeCustomizationFromMaps(uriString, this.allCustomizations, this.activeCustomizations, this.trackedTemplateURIs);\n                    if (removedFragmentId) {\n                        changedFragmentIds.add(removedFragmentId);\n                    }\n                }\n            }\n\n            // check updated templates\n            for (const updatedFile of event.getUpdated()) {\n                const uriString = updatedFile.resource.toString();\n                if (this.trackedTemplateURIs.has(uriString)) {\n                    const fileContent = await this.fileService.read(updatedFile.resource);\n                    const fragmentId = this.removePromptTemplateSuffix(updatedFile.resource.path.name);\n                    this.addTemplate(this.activeCustomizations, fragmentId, fileContent.value, uriString, this.allCustomizations, priority, customizationSource);\n                    changedFragmentIds.add(fragmentId);\n                }\n            }\n\n            // check new templates\n            for (const addedFile of event.getAdded()) {\n                if (addedFile.resource.parent.toString() === dirURI.toString() &&\n                    this.isPromptTemplateExtension(addedFile.resource.path.ext)) {\n                    const uriString = addedFile.resource.toString();\n                    this.trackedTemplateURIs.add(uriString);\n                    const fileContent = await this.fileService.read(addedFile.resource);\n                    const fragmentId = this.removePromptTemplateSuffix(addedFile.resource.path.name);\n                    this.addTemplate(this.activeCustomizations, fragmentId, fileContent.value, uriString, this.allCustomizations, priority, customizationSource);\n                    changedFragmentIds.add(fragmentId);\n                }\n            }\n\n            const changedFragmentIdsArray = Array.from(changedFragmentIds);\n            if (changedFragmentIdsArray.length > 0) {\n                this.onDidChangePromptFragmentCustomizationEmitter.fire(changedFragmentIdsArray);\n            };\n        }));\n    }\n\n    /**\n     * Checks if the given file extension is registered as a prompt template extension\n     * @param extension The file extension including the leading dot (e.g., '.prompttemplate')\n     * @returns True if the extension is registered as a prompt template extension\n     */\n    protected isPromptTemplateExtension(extension: string): boolean {\n        return this.templateExtensions.has(extension);\n    }\n\n    /**\n     * Gets the list of additional template directories that are being watched.\n     * @returns Array of directory paths\n     */\n    getAdditionalTemplateDirectories(): string[] {\n        return Array.from(this.additionalTemplateDirs);\n    }\n\n    /**\n     * Gets the list of file extensions that are considered prompt templates.\n     * @returns Array of file extensions including the leading dot (e.g., '.prompttemplate')\n     */\n    getTemplateFileExtensions(): string[] {\n        return Array.from(this.templateExtensions);\n    }\n\n    /**\n     * Gets the list of specific template files that are being watched.\n     * @returns Array of file paths\n     */\n    getTemplateFiles(): string[] {\n        return Array.from(this.workspaceTemplateFiles);\n    }\n\n    /**\n     * Updates multiple configuration properties at once, triggering only a single update process.\n     * @param properties An object containing the properties to update\n     * @returns Promise that resolves when the update is complete\n     */\n    async updateConfiguration(properties: PromptFragmentCustomizationProperties): Promise<void> {\n        if (properties.directoryPaths !== undefined) {\n            this.additionalTemplateDirs.clear();\n            for (const path of properties.directoryPaths) {\n                this.additionalTemplateDirs.add(path);\n            }\n        }\n\n        if (properties.extensions !== undefined) {\n            this.templateExtensions.clear();\n            for (const ext of properties.extensions) {\n                this.templateExtensions.add(ext);\n            }\n            // Always include the default PROMPT_TEMPLATE_EXTENSION\n            this.templateExtensions.add(PROMPT_TEMPLATE_EXTENSION);\n        }\n\n        if (properties.filePaths !== undefined) {\n            this.workspaceTemplateFiles.clear();\n            for (const path of properties.filePaths) {\n                this.workspaceTemplateFiles.add(path);\n            }\n        }\n\n        // Only run the update process once, no matter how many properties were changed\n        await this.update();\n    }\n\n    /**\n     * Gets the URI of the templates directory\n     * @returns URI of the templates directory\n     */\n    protected async getTemplatesDirectoryURI(): Promise<URI> {\n        const templatesFolder = this.preferences[PREFERENCE_NAME_PROMPT_TEMPLATES];\n        if (templatesFolder && templatesFolder.trim().length > 0) {\n            return URI.fromFilePath(templatesFolder);\n        }\n        const theiaConfigDir = await this.envVariablesServer.getConfigDirUri();\n        return new URI(theiaConfigDir).resolve('prompt-templates');\n    }\n\n    /**\n     * Gets the URI for a specific template file\n     * @param fragmentId The fragment ID\n     * @returns URI for the template file\n     */\n    protected async getTemplateURI(fragmentId: string): Promise<URI> {\n        return (await this.getTemplatesDirectoryURI()).resolve(`${fragmentId}${PROMPT_TEMPLATE_EXTENSION}`);\n    }\n\n    /**\n     * Removes the prompt template extension from a filename\n     * @param filename The filename with extension\n     * @returns The filename without the extension\n     */\n    protected removePromptTemplateSuffix(filename: string): string {\n        for (const ext of this.templateExtensions) {\n            if (filename.endsWith(ext)) {\n                return filename.slice(0, -ext.length);\n            }\n        }\n        return filename;\n    }\n\n    // PromptFragmentCustomizationService interface implementation\n\n    isPromptFragmentCustomized(id: string): boolean {\n        return this.activeCustomizations.has(id);\n    }\n\n    getActivePromptFragmentCustomization(id: string): CustomizedPromptFragment | undefined {\n        const entry = this.activeCustomizations.get(id);\n        if (!entry) {\n            return undefined;\n        }\n\n        return {\n            id: entry.id,\n            template: entry.template,\n            customizationId: entry.customizationId,\n            priority: entry.priority\n        };\n    }\n\n    getAllCustomizations(id: string): CustomizedPromptFragment[] {\n        const fragments: CustomizedPromptFragment[] = [];\n\n        // Collect all customizations with matching ID\n        this.allCustomizations.forEach(value => {\n            if (value.id === id) {\n                fragments.push({\n                    id: value.id,\n                    template: value.template,\n                    customizationId: value.customizationId,\n                    priority: value.priority\n                });\n            }\n        });\n\n        // Sort by priority (highest first)\n        return fragments.sort((a, b) => b.priority - a.priority);\n    }\n\n    getCustomizedPromptFragmentIds(): string[] {\n        return Array.from(this.activeCustomizations.keys());\n    }\n\n    async createPromptFragmentCustomization(id: string, defaultContent?: string): Promise<void> {\n        await this.editTemplate(id, defaultContent);\n    }\n\n    async createBuiltInPromptFragmentCustomization(id: string, defaultContent?: string): Promise<void> {\n        await this.createPromptFragmentCustomization(id, defaultContent);\n    }\n\n    async editPromptFragmentCustomization(id: string, customizationId: string): Promise<void> {\n        // Find the customization with the given customization ID\n        const customization = Array.from(this.allCustomizations.values()).find(t =>\n            t.id === id && t.customizationId === customizationId\n        );\n\n        if (customization) {\n            const uri = new URI(customization.sourceUri);\n            const openHandler = await this.openerService.getOpener(uri);\n            openHandler.open(uri);\n        } else {\n            // Fall back to editing by fragment ID if customization ID not found\n            await this.editTemplate(id);\n        }\n    }\n\n    /**\n     * Edits a template by opening it in the editor, creating it if it doesn't exist\n     * @param id The fragment ID\n     * @param defaultContent Optional default content for new templates\n     */\n    protected async editTemplate(id: string, defaultContent?: string): Promise<void> {\n        const editorUri = await this.getTemplateURI(id);\n        if (!(await this.fileService.exists(editorUri))) {\n            await this.fileService.createFile(editorUri, BinaryBuffer.fromString(defaultContent ?? ''));\n        }\n        const openHandler = await this.openerService.getOpener(editorUri);\n        openHandler.open(editorUri);\n    }\n\n    async removePromptFragmentCustomization(id: string, customizationId: string): Promise<void> {\n        // Find the customization with the given customization ID\n        const customization = Array.from(this.allCustomizations.values()).find(t =>\n            t.id === id && t.customizationId === customizationId\n        );\n\n        if (customization) {\n            const sourceUri = customization.sourceUri;\n\n            // Delete the file if it exists\n            const uri = new URI(sourceUri);\n            if (await this.fileService.exists(uri)) {\n                await this.fileService.delete(uri);\n            }\n        }\n    }\n\n    async removeAllPromptFragmentCustomizations(id: string): Promise<void> {\n        // Get all customizations for this fragment ID\n        const customizations = this.getAllCustomizations(id);\n\n        if (customizations.length === 0) {\n            return; // Nothing to reset\n        }\n\n        // Find and delete all customization files\n        for (const customization of customizations) {\n            const fragment = Array.from(this.allCustomizations.values()).find(t =>\n                t.id === id && t.customizationId === customization.customizationId\n            );\n\n            if (fragment) {\n                const sourceUri = fragment.sourceUri;\n                // Delete the file if it exists\n                const uri = new URI(sourceUri);\n                if (await this.fileService.exists(uri)) {\n                    await this.fileService.delete(uri);\n                }\n            }\n        }\n    }\n\n    async resetToCustomization(id: string, customizationId: string): Promise<void> {\n        const customization = Array.from(this.allCustomizations.values()).find(t =>\n            t.id === id && t.customizationId === customizationId\n        );\n\n        if (customization) {\n            // Get all customizations for this fragment ID\n            const customizations = this.getAllCustomizations(id);\n\n            if (customizations.length === 0) {\n                return; // Nothing to reset\n            }\n\n            // Find the target customization\n            const targetCustomization = customizations.find(c => c.customizationId === customizationId);\n            if (!targetCustomization) {\n                return; // Target customization not found\n            }\n\n            // Find and delete all higher-priority customization files\n            for (const cust of customizations) {\n                if (cust.priority > targetCustomization.priority) {\n                    const fragmentToDelete = Array.from(this.allCustomizations.values()).find(t =>\n                        t.id === cust.id && t.customizationId === cust.customizationId\n                    );\n                    if (fragmentToDelete) {\n                        const sourceUri = fragmentToDelete.sourceUri;\n\n                        // Delete the file if it exists\n                        const uri = new URI(sourceUri);\n                        if (await this.fileService.exists(uri)) {\n                            await this.fileService.delete(uri);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    async getPromptFragmentCustomizationDescription(id: string, customizationId: string): Promise<string | undefined> {\n        // Find the customization with the given customization ID\n        const customization = Array.from(this.allCustomizations.values()).find(t =>\n            t.id === id && t.customizationId === customizationId\n        );\n\n        if (customization) {\n            return customization.sourceUri;\n        }\n\n        return undefined;\n    }\n\n    async getPromptFragmentCustomizationType(id: string, customizationId: string): Promise<string | undefined> {\n        // Find the customization with the given customization ID\n        const customization = Array.from(this.allCustomizations.values()).find(t =>\n            t.id === id && t.customizationId === customizationId\n        );\n\n        if (customization) {\n            return getCustomizationSourceString(customization.origin);\n        }\n\n        return undefined;\n    }\n\n    async editBuiltIn(id: string, defaultContent = ''): Promise<void> {\n        // Find an existing built-in customization (those with priority 1)\n        const builtInCustomization = Array.from(this.allCustomizations.values()).find(t =>\n            t.id === id && t.priority === 1\n        );\n\n        if (builtInCustomization) {\n            // Edit the existing built-in customization\n            const uri = new URI(builtInCustomization.sourceUri);\n            const openHandler = await this.openerService.getOpener(uri);\n            openHandler.open(uri);\n        } else {\n            // Create a new built-in customization\n            // Get the template URI in the main templates directory (priority 1)\n            const templateUri = await this.getTemplateURI(id);\n\n            // If template doesn't exist, create it with default content\n            if (!(await this.fileService.exists(templateUri))) {\n                await this.fileService.createFile(templateUri, BinaryBuffer.fromString(defaultContent));\n            }\n\n            // Open the template in the editor\n            const openHandler = await this.openerService.getOpener(templateUri);\n            openHandler.open(templateUri);\n        }\n    }\n\n    async resetBuiltInCustomization(id: string): Promise<void> {\n        // Find a built-in customization (those with priority 1)\n        const builtInCustomization = Array.from(this.allCustomizations.values()).find(t =>\n            t.id === id && t.priority === 1\n        );\n\n        if (!builtInCustomization) {\n            return; // No built-in customization found\n        }\n\n        const sourceUri = builtInCustomization.sourceUri;\n\n        // Delete the file if it exists\n        const uri = new URI(sourceUri);\n        if (await this.fileService.exists(uri)) {\n            await this.fileService.delete(uri);\n        }\n    }\n\n    async editBuiltInPromptFragmentCustomization(id: string, defaultContent?: string): Promise<void> {\n        return this.editBuiltIn(id, defaultContent);\n    }\n\n    /**\n     * Gets the fragment ID from a URI\n     * @param uri URI to check\n     * @returns Fragment ID or undefined if not found\n     */\n    protected getFragmentIDFromURI(uri: URI): string | undefined {\n        const id = this.removePromptTemplateSuffix(uri.path.name);\n        if (this.activeCustomizations.has(id)) {\n            return id;\n        }\n        return undefined;\n    }\n\n    /**\n     * Implementation of the generic getPromptFragmentIDFromResource method in the interface\n     * Accepts any resource identifier but only processes URIs\n     * @param resourceId Resource to check\n     * @returns Fragment ID or undefined if not found\n     */\n    getPromptFragmentIDFromResource(resourceId: unknown): string | undefined {\n        // Check if the resource is a URI\n        if (resourceId instanceof URI) {\n            return this.getFragmentIDFromURI(resourceId);\n        }\n        return undefined;\n    }\n\n    async getCustomAgents(): Promise<CustomAgentDescription[]> {\n        const agentsById = new Map<string, CustomAgentDescription>();\n        // First, process additional (workspace) template directories to give them precedence\n        for (const dirPath of this.additionalTemplateDirs) {\n            const dirURI = URI.fromFilePath(dirPath);\n            await this.loadCustomAgentsFromDirectory(dirURI, agentsById);\n        }\n        // Then process global templates directory (only adding agents that don't conflict)\n        const globalTemplatesDir = await this.getTemplatesDirectoryURI();\n        await this.loadCustomAgentsFromDirectory(globalTemplatesDir, agentsById);\n        // Return the merged list of agents\n        return Array.from(agentsById.values());\n    }\n\n    /**\n     * Load custom agents from a specific directory\n     * @param directoryURI The URI of the directory to load from\n     * @param agentsById Map to store the loaded agents by ID\n     */\n    protected async loadCustomAgentsFromDirectory(\n        directoryURI: URI,\n        agentsById: Map<string, CustomAgentDescription>\n    ): Promise<void> {\n        const customAgentYamlUri = directoryURI.resolve('customAgents.yml');\n        const yamlExists = await this.fileService.exists(customAgentYamlUri);\n        if (!yamlExists) {\n            return;\n        }\n\n        try {\n            const fileContent = await this.fileService.read(customAgentYamlUri, { encoding: 'utf-8' });\n            const doc = load(fileContent.value);\n\n            if (!Array.isArray(doc) || !doc.every(entry => CustomAgentDescription.is(entry))) {\n                console.debug(`Invalid customAgents.yml file content in ${directoryURI.toString()}`);\n                return;\n            }\n\n            const readAgents = doc as CustomAgentDescription[];\n\n            // Add agents to the map if they don't already exist\n            for (const agent of readAgents) {\n                if (!agentsById.has(agent.id)) {\n                    agentsById.set(agent.id, agent);\n                }\n            }\n        } catch (e) {\n            console.debug(`Error loading customAgents.yml from ${directoryURI.toString()}: ${e.message}`, e);\n        }\n    }\n\n    /**\n     * Returns all locations of existing customAgents.yml files and potential locations where\n     * new customAgents.yml files could be created.\n     *\n     * @returns An array of objects containing the URI and whether the file exists\n     */\n    async getCustomAgentsLocations(): Promise<{ uri: URI, exists: boolean }[]> {\n        const locations: { uri: URI, exists: boolean }[] = [];\n        // Check global templates directory\n        const globalTemplatesDir = await this.getTemplatesDirectoryURI();\n        const globalAgentsUri = globalTemplatesDir.resolve('customAgents.yml');\n        const globalExists = await this.fileService.exists(globalAgentsUri);\n        locations.push({ uri: globalAgentsUri, exists: globalExists });\n        // Check additional (workspace) template directories\n        for (const dirPath of this.additionalTemplateDirs) {\n            const dirURI = URI.fromFilePath(dirPath);\n            const agentsUri = dirURI.resolve('customAgents.yml');\n            const exists = await this.fileService.exists(agentsUri);\n            locations.push({ uri: agentsUri, exists: exists });\n        }\n        return locations;\n    }\n\n    /**\n     * Opens an existing customAgents.yml file at the given URI, or creates a new one if it doesn't exist.\n     *\n     * @param uri The URI of the customAgents.yml file to open or create\n     */\n    async openCustomAgentYaml(uri: URI): Promise<void> {\n        const content = dump([newCustomAgentEntry]);\n        if (! await this.fileService.exists(uri)) {\n            await this.fileService.createFile(uri, BinaryBuffer.fromString(content));\n        } else {\n            const fileContent = (await this.fileService.readFile(uri)).value;\n            await this.fileService.writeFile(uri, BinaryBuffer.concat([fileContent, BinaryBuffer.fromString(content)]));\n        }\n        const openHandler = await this.openerService.getOpener(uri);\n        openHandler.open(uri);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2024 EclipseSource GmbH.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Disposable, MessageService, Prioritizeable } from '@theia/core';\nimport { FrontendApplicationContribution, OpenerService, open } from '@theia/core/lib/browser';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport {\n    AIVariable,\n    AIVariableArg,\n    AIVariableContext,\n    AIVariableOpener,\n    AIVariableResolutionRequest,\n    AIVariableResourceResolver,\n    AIVariableService,\n    DefaultAIVariableService,\n    PromptText\n} from '../common';\nimport * as monaco from '@theia/monaco-editor-core';\n\nexport type AIVariableDropHandler = (event: DragEvent, context: AIVariableContext) => Promise<AIVariableDropResult | undefined>;\n\nexport interface AIVariableDropResult {\n    variables: AIVariableResolutionRequest[],\n    text?: string\n};\n\nexport type AIVariablePasteHandler = (event: ClipboardEvent, context: AIVariableContext) => Promise<AIVariablePasteResult | undefined>;\n\nexport interface AIVariablePasteResult {\n    variables: AIVariableResolutionRequest[],\n    text?: string\n};\n\nexport interface AIVariableCompletionContext {\n    /** Portion of user input to be used for filtering completion candidates. */\n    userInput: string;\n    /** The range of suggestion completions. */\n    range: monaco.Range\n    /** A prefix to be applied to each completion item's text */\n    prefix: string\n}\n\nexport namespace AIVariableCompletionContext {\n    export function get(\n        variableName: string,\n        model: monaco.editor.ITextModel,\n        position: monaco.Position,\n        matchString?: string\n    ): AIVariableCompletionContext | undefined {\n        const lineContent = model.getLineContent(position.lineNumber);\n        const indexOfVariableTrigger = lineContent.lastIndexOf(matchString ?? PromptText.VARIABLE_CHAR, position.column - 1);\n\n        // check if there is a variable trigger and no space typed between the variable trigger and the cursor\n        if (indexOfVariableTrigger === -1 || lineContent.substring(indexOfVariableTrigger).includes(' ')) {\n            return undefined;\n        }\n\n        // determine whether we are providing completions before or after the variable argument separator\n        const indexOfVariableArgSeparator = lineContent.lastIndexOf(PromptText.VARIABLE_SEPARATOR_CHAR, position.column - 1);\n        const triggerCharIndex = Math.max(indexOfVariableTrigger, indexOfVariableArgSeparator);\n\n        const userInput = lineContent.substring(triggerCharIndex + 1, position.column - 1);\n        const range = new monaco.Range(position.lineNumber, triggerCharIndex + 2, position.lineNumber, position.column);\n        const matchVariableChar = lineContent[triggerCharIndex] === (matchString ? matchString : PromptText.VARIABLE_CHAR);\n        const prefix = matchVariableChar ? variableName + PromptText.VARIABLE_SEPARATOR_CHAR : '';\n        return { range, userInput, prefix };\n    }\n}\n\nexport const FrontendVariableService = Symbol('FrontendVariableService');\nexport interface FrontendVariableService extends AIVariableService {\n    registerDropHandler(handler: AIVariableDropHandler): Disposable;\n    unregisterDropHandler(handler: AIVariableDropHandler): void;\n    getDropResult(event: DragEvent, context: AIVariableContext): Promise<AIVariableDropResult>;\n\n    registerPasteHandler(handler: AIVariablePasteHandler): Disposable;\n    unregisterPasteHandler(handler: AIVariablePasteHandler): void;\n    getPasteResult(event: ClipboardEvent, context: AIVariableContext): Promise<AIVariablePasteResult>;\n\n    registerOpener(variable: AIVariable, opener: AIVariableOpener): Disposable;\n    unregisterOpener(variable: AIVariable, opener: AIVariableOpener): void;\n    getOpener(name: string, arg: string | undefined, context: AIVariableContext): Promise<AIVariableOpener | undefined>;\n    open(variable: AIVariableArg, context?: AIVariableContext): Promise<void>\n}\n\nexport interface FrontendVariableContribution {\n    registerVariables(service: FrontendVariableService): void;\n}\n\n@injectable()\nexport class DefaultFrontendVariableService extends DefaultAIVariableService implements FrontendApplicationContribution, FrontendVariableService {\n    protected dropHandlers = new Set<AIVariableDropHandler>();\n    protected pasteHandlers = new Set<AIVariablePasteHandler>();\n\n    @inject(MessageService) protected readonly messageService: MessageService;\n    @inject(AIVariableResourceResolver) protected readonly aiResourceResolver: AIVariableResourceResolver;\n    @inject(OpenerService) protected readonly openerService: OpenerService;\n\n    onStart(): void {\n        this.initContributions();\n    }\n\n    registerDropHandler(handler: AIVariableDropHandler): Disposable {\n        this.dropHandlers.add(handler);\n        return Disposable.create(() => this.unregisterDropHandler(handler));\n    }\n\n    unregisterDropHandler(handler: AIVariableDropHandler): void {\n        this.dropHandlers.delete(handler);\n    }\n\n    async getDropResult(event: DragEvent, context: AIVariableContext): Promise<AIVariableDropResult> {\n        let text: string | undefined = undefined;\n        const variables: AIVariableResolutionRequest[] = [];\n        for (const handler of this.dropHandlers) {\n            const result = await handler(event, context);\n            if (result) {\n                variables.push(...result.variables);\n                if (text === undefined) {\n                    text = result.text;\n                }\n            }\n        }\n        return { variables, text };\n    }\n\n    registerPasteHandler(handler: AIVariablePasteHandler): Disposable {\n        this.pasteHandlers.add(handler);\n        return Disposable.create(() => this.unregisterPasteHandler(handler));\n    }\n\n    unregisterPasteHandler(handler: AIVariablePasteHandler): void {\n        this.pasteHandlers.delete(handler);\n    }\n\n    async getPasteResult(event: ClipboardEvent, context: AIVariableContext): Promise<AIVariablePasteResult> {\n        let text: string | undefined = undefined;\n        const variables: AIVariableResolutionRequest[] = [];\n        for (const handler of this.pasteHandlers) {\n            const result = await handler(event, context);\n            if (result) {\n                variables.push(...result.variables);\n                if (text === undefined) {\n                    text = result.text;\n                }\n            }\n        }\n        return { variables, text };\n    }\n\n    registerOpener(variable: AIVariable, opener: AIVariableOpener): Disposable {\n        const key = this.getKey(variable.name);\n        if (!this.variables.get(key)) {\n            this.variables.set(key, variable);\n            this.onDidChangeVariablesEmitter.fire();\n        }\n        const openers = this.openers.get(key) ?? [];\n        openers.push(opener);\n        this.openers.set(key, openers);\n        return Disposable.create(() => this.unregisterOpener(variable, opener));\n    }\n\n    unregisterOpener(variable: AIVariable, opener: AIVariableOpener): void {\n        const key = this.getKey(variable.name);\n        const registeredOpeners = this.openers.get(key);\n        registeredOpeners?.splice(registeredOpeners.indexOf(opener), 1);\n    }\n\n    async getOpener(name: string, arg: string | undefined, context: AIVariableContext = {}): Promise<AIVariableOpener | undefined> {\n        const variable = this.getVariable(name);\n        return variable && Prioritizeable.prioritizeAll(\n            this.openers.get(this.getKey(name)) ?? [],\n            opener => (async () => opener.canOpen({ variable, arg }, context))().catch(() => 0)\n        )\n            .then(prioritized => prioritized.at(0)?.value);\n    }\n\n    async open(request: AIVariableArg, context?: AIVariableContext | undefined): Promise<void> {\n        const { variableName, arg } = this.parseRequest(request);\n        const variable = this.getVariable(variableName);\n        if (!variable) {\n            this.messageService.warn('No variable found for open request.');\n            return;\n        }\n        const opener = await this.getOpener(variableName, arg, context);\n        try {\n            return opener ? opener.open({ variable, arg }, context ?? {}) : this.openReadonly({ variable, arg }, context);\n        } catch (err) {\n            console.error('Unable to open variable:', err);\n            this.messageService.error('Unable to display variable value.');\n        }\n    }\n\n    protected async openReadonly(request: AIVariableResolutionRequest, context: AIVariableContext = {}): Promise<void> {\n        const resolved = await this.resolveVariable(request, context);\n        if (resolved === undefined) {\n            this.messageService.warn('Unable to resolve variable.');\n            return;\n        }\n        const resource = this.aiResourceResolver.getOrCreate(request, context, resolved.value);\n        await open(this.openerService, resource.uri);\n        resource.dispose();\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2025 EclipseSource GmbH.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { MaybePromise, nls } from '@theia/core';\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { EditorManager } from '@theia/editor/lib/browser';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport URI from '@theia/core/lib/common/uri';\nimport { AIVariable, ResolvedAIVariable, AIVariableContribution, AIVariableResolver, AIVariableService, AIVariableResolutionRequest, AIVariableContext } from '../common';\n\nexport const OPEN_EDITORS_VARIABLE: AIVariable = {\n    id: 'openEditors',\n    description: nls.localize('theia/ai/core/openEditorsVariable/description', 'A comma-separated list of all currently open files, relative to the workspace root.'),\n    name: 'openEditors',\n};\n\nexport const OPEN_EDITORS_SHORT_VARIABLE: AIVariable = {\n    id: 'openEditorsShort',\n    description: nls.localize('theia/ai/core/openEditorsShortVariable/description', 'Short reference to all currently open files (relative paths, comma-separated)'),\n    name: '_ff',\n};\n\n@injectable()\nexport class OpenEditorsVariableContribution implements AIVariableContribution, AIVariableResolver {\n\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    registerVariables(service: AIVariableService): void {\n        service.registerResolver(OPEN_EDITORS_VARIABLE, this);\n        service.registerResolver(OPEN_EDITORS_SHORT_VARIABLE, this);\n    }\n\n    canResolve(request: AIVariableResolutionRequest, _context: AIVariableContext): MaybePromise<number> {\n        return (request.variable.name === OPEN_EDITORS_VARIABLE.name || request.variable.name === OPEN_EDITORS_SHORT_VARIABLE.name) ? 50 : 0;\n    }\n\n    async resolve(request: AIVariableResolutionRequest, _context: AIVariableContext): Promise<ResolvedAIVariable | undefined> {\n        if (request.variable.name !== OPEN_EDITORS_VARIABLE.name && request.variable.name !== OPEN_EDITORS_SHORT_VARIABLE.name) {\n            return undefined;\n        }\n\n        const openFiles = this.getAllOpenFilesRelative();\n        return {\n            variable: request.variable,\n            value: openFiles\n        };\n    }\n\n    protected getAllOpenFilesRelative(): string {\n        const openFiles: string[] = [];\n\n        // Get all open editors from the editor manager\n        for (const editor of this.editorManager.all) {\n            const uri = editor.getResourceUri();\n            if (uri) {\n                const relativePath = this.getWorkspaceRelativePath(uri);\n                if (relativePath) {\n                    openFiles.push(`'${relativePath}'`);\n                }\n            }\n        }\n\n        return openFiles.join(', ');\n    }\n\n    protected getWorkspaceRelativePath(uri: URI): string | undefined {\n        const workspaceRootUri = this.workspaceService.getWorkspaceRootUri(uri);\n        const path = workspaceRootUri && workspaceRootUri.path.relative(uri.path);\n        return path && path.toString();\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2025 EclipseSource GmbH.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { nls } from '@theia/core/lib/common/nls';\nimport { environment } from '@theia/core';\n\n/**\n * Configuration options for OS notifications\n */\nexport interface OSNotificationOptions {\n    /** The notification body text */\n    body?: string;\n    /** Icon to display with the notification */\n    icon?: string;\n    /** Whether the notification should be silent */\n    silent?: boolean;\n    /** Tag to group notifications */\n    tag?: string;\n    /** Whether the notification requires user interaction to dismiss */\n    requireInteraction?: boolean;\n    /** Custom data to associate with the notification */\n    data?: unknown;\n}\n\n/**\n * Result of an OS notification attempt\n */\nexport interface OSNotificationResult {\n    /** Whether the notification was successfully shown */\n    success: boolean;\n    /** Error message if the notification failed */\n    error?: string;\n    /** The created notification instance (if successful) */\n    notification?: Notification;\n}\n\n/**\n * Service to handle OS-level notifications across different platforms\n * Provides fallback mechanisms for environments where notifications are unavailable\n */\n@injectable()\nexport class OSNotificationService {\n\n    private isElectron: boolean;\n\n    constructor() {\n        this.isElectron = environment.electron.is();\n    }\n\n    /**\n     * Show an OS-level notification with the given title and options\n     *\n     * @param title The notification title\n     * @param options Optional notification configuration\n     * @returns Promise resolving to the notification result\n     */\n    async showNotification(title: string, options: OSNotificationOptions = {}): Promise<OSNotificationResult> {\n        try {\n            if (!this.isNotificationSupported()) {\n                return {\n                    success: false,\n                    error: 'Notifications are not supported in this environment'\n                };\n            }\n\n            const permission = await this.ensurePermission();\n            if (permission !== 'granted') {\n                return {\n                    success: false,\n                    error: `Notification permission ${permission}`\n                };\n            }\n\n            const notification = await this.createNotification(title, options);\n            return {\n                success: true,\n                notification\n            };\n\n        } catch (error) {\n            console.error('Failed to show OS notification:', error);\n            return {\n                success: false,\n                error: error instanceof Error ? error.message : 'Unknown error occurred'\n            };\n        }\n    }\n\n    /**\n     * Check if notification permission is granted\n     *\n     * @returns The current notification permission state\n     */\n    getPermissionStatus(): NotificationPermission {\n        if (!this.isNotificationSupported()) {\n            return 'denied';\n        }\n        return Notification.permission;\n    }\n\n    /**\n     * Request notification permission from the user\n     *\n     * @returns Promise resolving to the permission state\n     */\n    async requestPermission(): Promise<NotificationPermission> {\n        if (!this.isNotificationSupported()) {\n            return 'denied';\n        }\n\n        if (Notification.permission !== 'default') {\n            return Notification.permission;\n        }\n\n        try {\n            const permission = await Notification.requestPermission();\n            return permission;\n        } catch (error) {\n            console.error('Failed to request notification permission:', error);\n            return 'denied';\n        }\n    }\n\n    /**\n     * Check if OS notifications are supported in the current environment\n     *\n     * @returns true if notifications are supported, false otherwise\n     */\n    isNotificationSupported(): boolean {\n        return typeof window !== 'undefined' && 'Notification' in window;\n    }\n\n    /**\n     * Show a notification specifically for agent completion\n     * This is a convenience method with pre-configured options for agent notifications\n     *\n     * @param agentName The name of the agent that completed\n     * @param taskDescription Optional description of the completed task\n     * @returns Promise resolving to the notification result\n     */\n    async showAgentCompletionNotification(agentName: string, taskDescription?: string): Promise<OSNotificationResult> {\n        const title = nls.localize('theia/ai-core/agentCompletionTitle', 'Agent \"{0}\" Task Completed', agentName);\n        const body = taskDescription\n            ? nls.localize('theia/ai-core/agentCompletionWithTask',\n                'Agent \"{0}\" has completed the task: {1}', agentName, taskDescription)\n            : nls.localize('theia/ai-core/agentCompletionMessage',\n                'Agent \"{0}\" has completed its task.', agentName);\n\n        return this.showNotification(title, {\n            body,\n            icon: this.getAgentCompletionIcon(),\n            tag: `agent-completion-${agentName}`,\n            requireInteraction: false,\n            data: {\n                type: 'agent-completion',\n                agentName,\n                taskDescription,\n                timestamp: Date.now()\n            }\n        });\n    }\n\n    /**\n     * Ensure notification permission is granted\n     *\n     * @returns Promise resolving to the permission state\n     */\n    private async ensurePermission(): Promise<NotificationPermission> {\n        const currentPermission = this.getPermissionStatus();\n\n        if (currentPermission === 'granted') {\n            return currentPermission;\n        }\n\n        if (currentPermission === 'denied') {\n            return currentPermission;\n        }\n\n        return this.requestPermission();\n    }\n\n    /**\n     * Create a native notification with the given title and options\n     *\n     * @param title The notification title\n     * @param options The notification options\n     * @returns Promise resolving to the created notification\n     */\n    private async createNotification(title: string, options: OSNotificationOptions): Promise<Notification> {\n        return new Promise<Notification>((resolve, reject): void => {\n            try {\n                const notificationOptions: NotificationOptions = {\n                    body: options.body,\n                    icon: options.icon,\n                    silent: options.silent,\n                    tag: options.tag,\n                    requireInteraction: options.requireInteraction,\n                    data: options.data\n                };\n\n                const notification = new Notification(title, notificationOptions);\n\n                notification.onshow = () => {\n                    console.debug('OS notification shown:', title);\n                };\n\n                notification.onerror = error => {\n                    console.error('OS notification error:', error);\n                    reject(new Error('Failed to show notification'));\n                };\n\n                notification.onclick = () => {\n                    console.debug('OS notification clicked:', title);\n                    this.focusApplicationWindow();\n                    notification.close();\n                };\n\n                notification.onclose = () => {\n                    console.debug('OS notification closed:', title);\n                };\n\n                resolve(notification);\n\n            } catch (error) {\n                reject(error);\n            }\n        });\n    }\n\n    /**\n     * Attempt to focus the application window when notification is clicked\n     */\n    private focusApplicationWindow(): void {\n        try {\n            if (typeof window !== 'undefined') {\n                window.focus();\n\n                if (this.isElectron && (window as unknown as { electronTheiaCore?: { focusWindow?: () => void } }).electronTheiaCore?.focusWindow) {\n                    (window as unknown as { electronTheiaCore: { focusWindow: () => void } }).electronTheiaCore.focusWindow();\n                }\n            }\n        } catch (error) {\n            console.debug('Could not focus application window:', error);\n        }\n    }\n\n    /**\n     * Get the icon URL for agent completion notifications\n     *\n     * @returns The icon URL or undefined if not available\n     */\n    private getAgentCompletionIcon(): string | undefined {\n        // This could return a path to an icon file\n        // For now, we'll return undefined to use the default system icon\n        return undefined;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2024 EclipseSource GmbH.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { GrammarDefinition, GrammarDefinitionProvider, LanguageGrammarDefinitionContribution, TextmateRegistry } from '@theia/monaco/lib/browser/textmate';\nimport * as monaco from '@theia/monaco-editor-core';\nimport { Command, CommandContribution, CommandRegistry, nls } from '@theia/core';\nimport { TabBarToolbarContribution, TabBarToolbarRegistry } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\n\nimport { codicon, Widget } from '@theia/core/lib/browser';\nimport { EditorWidget, ReplaceOperation } from '@theia/editor/lib/browser';\nimport { PromptService, PromptText, ToolInvocationRegistry } from '../common';\nimport { ProviderResult } from '@theia/monaco-editor-core/esm/vs/editor/common/languages';\nimport { AIVariableService } from '../common/variable-service';\n\nconst PROMPT_TEMPLATE_LANGUAGE_ID = 'theia-ai-prompt-template';\nconst PROMPT_TEMPLATE_TEXTMATE_SCOPE = 'source.prompttemplate';\n\nexport const PROMPT_TEMPLATE_EXTENSION = '.prompttemplate';\n\nexport const DISCARD_PROMPT_TEMPLATE_CUSTOMIZATIONS: Command = Command.toLocalizedCommand({\n    id: 'theia-ai-prompt-template:discard',\n    label: 'Discard AI Prompt Template',\n    iconClass: codicon('discard'),\n    category: 'AI Prompt Templates'\n}, 'theia/ai/core/discard/label', 'theia/ai/core/prompts/category');\n\n@injectable()\nexport class PromptTemplateContribution implements LanguageGrammarDefinitionContribution, CommandContribution, TabBarToolbarContribution {\n\n    @inject(PromptService)\n    private readonly promptService: PromptService;\n\n    @inject(ToolInvocationRegistry)\n    protected readonly toolInvocationRegistry: ToolInvocationRegistry;\n\n    @inject(AIVariableService)\n    protected readonly variableService: AIVariableService;\n\n    readonly config: monaco.languages.LanguageConfiguration =\n        {\n            'brackets': [\n                ['${', '}'],\n                ['~{', '}'],\n                ['{{', '}}'],\n                ['{{{', '}}}']\n            ],\n            'autoClosingPairs': [\n                { 'open': '${', 'close': '}' },\n                { 'open': '~{', 'close': '}' },\n                { 'open': '{{', 'close': '}}' },\n                { 'open': '{{{', 'close': '}}}' }\n            ],\n            'surroundingPairs': [\n                { 'open': '${', 'close': '}' },\n                { 'open': '~{', 'close': '}' },\n                { 'open': '{{', 'close': '}}' },\n                { 'open': '{{{', 'close': '}}}' }\n            ]\n        };\n\n    registerTextmateLanguage(registry: TextmateRegistry): void {\n        monaco.languages.register({\n            id: PROMPT_TEMPLATE_LANGUAGE_ID,\n            'aliases': [\n                'AI Prompt Template'\n            ],\n            'extensions': [\n                PROMPT_TEMPLATE_EXTENSION,\n            ],\n            'filenames': []\n        });\n\n        monaco.languages.setLanguageConfiguration(PROMPT_TEMPLATE_LANGUAGE_ID, this.config);\n\n        monaco.languages.registerCompletionItemProvider(PROMPT_TEMPLATE_LANGUAGE_ID, {\n            // Monaco only supports single character trigger characters\n            triggerCharacters: ['{'],\n            provideCompletionItems: (model, position, _context, _token): ProviderResult<monaco.languages.CompletionList> => this.provideFunctionCompletions(model, position),\n        });\n\n        monaco.languages.registerCompletionItemProvider(PROMPT_TEMPLATE_LANGUAGE_ID, {\n            // Monaco only supports single character trigger characters\n            triggerCharacters: ['{'],\n            provideCompletionItems: (model, position, _context, _token): ProviderResult<monaco.languages.CompletionList> => this.provideVariableCompletions(model, position),\n        });\n        monaco.languages.registerCompletionItemProvider(PROMPT_TEMPLATE_LANGUAGE_ID, {\n            // Monaco only supports single character trigger characters\n            triggerCharacters: ['{', ':'],\n            provideCompletionItems: (model, position, _context, _token): ProviderResult<monaco.languages.CompletionList> => this.provideVariableWithArgCompletions(model, position),\n        });\n\n        const textmateGrammar = require('../../data/prompttemplate.tmLanguage.json');\n        const grammarDefinitionProvider: GrammarDefinitionProvider = {\n            getGrammarDefinition: function (): Promise<GrammarDefinition> {\n                return Promise.resolve({\n                    format: 'json',\n                    content: textmateGrammar\n                });\n            }\n        };\n        registry.registerTextmateGrammarScope(PROMPT_TEMPLATE_TEXTMATE_SCOPE, grammarDefinitionProvider);\n\n        registry.mapLanguageIdToTextmateGrammar(PROMPT_TEMPLATE_LANGUAGE_ID, PROMPT_TEMPLATE_TEXTMATE_SCOPE);\n    }\n\n    provideFunctionCompletions(model: monaco.editor.ITextModel, position: monaco.Position): ProviderResult<monaco.languages.CompletionList> {\n        return this.getSuggestions(\n            model,\n            position,\n            '~{',\n            this.toolInvocationRegistry.getAllFunctions(),\n            monaco.languages.CompletionItemKind.Function,\n            tool => tool.id,\n            tool => tool.name,\n            tool => tool.description ?? ''\n        );\n    }\n\n    provideVariableCompletions(model: monaco.editor.ITextModel, position: monaco.Position): ProviderResult<monaco.languages.CompletionList> {\n        return this.getSuggestions(\n            model,\n            position,\n            '{{',\n            this.variableService.getVariables(),\n            monaco.languages.CompletionItemKind.Variable,\n            variable => variable.args?.some(arg => !arg.isOptional) ? variable.name + PromptText.VARIABLE_SEPARATOR_CHAR : variable.name,\n            variable => variable.name,\n            variable => variable.description ?? ''\n        );\n    }\n\n    async provideVariableWithArgCompletions(model: monaco.editor.ITextModel, position: monaco.Position): Promise<monaco.languages.CompletionList> {\n        // Get the text of the current line up to the cursor position\n        const textUntilPosition = model.getValueInRange({\n            startLineNumber: position.lineNumber,\n            startColumn: 1,\n            endLineNumber: position.lineNumber,\n            endColumn: position.column,\n        });\n\n        // Regex that captures the variable name in contexts like {{, {{{, {{varname, {{{varname, {{varname:, or {{{varname:\n        const variableRegex = /(?:\\{\\{\\{|\\{\\{)([\\w-]+)?(?::)?/;\n        const match = textUntilPosition.match(variableRegex);\n\n        if (!match) {\n            return { suggestions: [] };\n        }\n\n        const currentVariableName = match[1];\n        const hasColonSeparator = textUntilPosition.includes(`${currentVariableName}:`);\n\n        const variables = this.variableService.getVariables();\n        const suggestions: monaco.languages.CompletionItem[] = [];\n\n        for (const variable of variables) {\n            // If we have a variable:arg pattern, only process the matching variable\n            if (hasColonSeparator && variable.name !== currentVariableName) {\n                continue;\n            }\n\n            const provider = await this.variableService.getArgumentCompletionProvider(variable.name);\n            if (provider) {\n                const items = await provider(model, position, '{');\n                if (items) {\n                    suggestions.push(...items.map(item => ({\n                        ...item\n                    })));\n                }\n            }\n        }\n\n        return { suggestions };\n    }\n\n    getCompletionRange(model: monaco.editor.ITextModel, position: monaco.Position, triggerCharacters: string): monaco.Range | undefined {\n        // Check if the characters before the current position are the trigger characters\n        const lineContent = model.getLineContent(position.lineNumber);\n        const triggerLength = triggerCharacters.length;\n        const charactersBefore = lineContent.substring(\n            position.column - triggerLength - 1,\n            position.column - 1\n        );\n\n        if (charactersBefore !== triggerCharacters) {\n            // Do not return agent suggestions if the user didn't just type the trigger characters\n            return undefined;\n        }\n\n        // Calculate the range from the position of the trigger characters\n        const wordInfo = model.getWordUntilPosition(position);\n        return new monaco.Range(\n            position.lineNumber,\n            wordInfo.startColumn,\n            position.lineNumber,\n            position.column\n        );\n    }\n\n    private getSuggestions<T>(\n        model: monaco.editor.ITextModel,\n        position: monaco.Position,\n        triggerChars: string,\n        items: T[],\n        kind: monaco.languages.CompletionItemKind,\n        getId: (item: T) => string,\n        getName: (item: T) => string,\n        getDescription: (item: T) => string\n    ): ProviderResult<monaco.languages.CompletionList> {\n        const completionRange = this.getCompletionRange(model, position, triggerChars);\n        if (completionRange === undefined) {\n            return { suggestions: [] };\n        }\n        const suggestions = items.map(item => ({\n            insertText: getId(item),\n            kind: kind,\n            label: getName(item),\n            range: completionRange,\n            detail: getDescription(item),\n        }));\n        return { suggestions };\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(DISCARD_PROMPT_TEMPLATE_CUSTOMIZATIONS, {\n            isVisible: (widget: Widget) => this.isPromptTemplateWidget(widget),\n            isEnabled: (widget: EditorWidget) => this.canDiscard(widget),\n            execute: (widget: EditorWidget) => this.discard(widget)\n        });\n    }\n\n    protected isPromptTemplateWidget(widget: Widget): boolean {\n        if (widget instanceof EditorWidget) {\n            return PROMPT_TEMPLATE_LANGUAGE_ID === widget.editor.document.languageId;\n        }\n        return false;\n    }\n\n    protected canDiscard(widget: EditorWidget): boolean {\n        const resourceUri = widget.editor.uri;\n        const id = this.promptService.getTemplateIDFromResource(resourceUri);\n        if (id === undefined) {\n            return false;\n        }\n        const rawPrompt = this.promptService.getRawPromptFragment(id);\n        const defaultPrompt = this.promptService.getBuiltInRawPrompt(id);\n        return rawPrompt?.template !== defaultPrompt?.template;\n    }\n\n    protected async discard(widget: EditorWidget): Promise<void> {\n        const resourceUri = widget.editor.uri;\n        const id = this.promptService.getTemplateIDFromResource(resourceUri);\n        if (id === undefined) {\n            return;\n        }\n        const defaultPrompt = this.promptService.getBuiltInRawPrompt(id);\n        if (defaultPrompt === undefined) {\n            return;\n        }\n\n        const source: string = widget.editor.document.getText();\n        const lastLine = widget.editor.document.getLineContent(widget.editor.document.lineCount);\n\n        const replaceOperation: ReplaceOperation = {\n            range: {\n                start: {\n                    line: 0,\n                    character: 0\n                },\n                end: {\n                    line: widget.editor.document.lineCount,\n                    character: lastLine.length\n                }\n            },\n            text: defaultPrompt.template\n        };\n\n        await widget.editor.replaceText({\n            source,\n            replaceOperations: [replaceOperation]\n        });\n    }\n\n    registerToolbarItems(registry: TabBarToolbarRegistry): void {\n        registry.registerItem({\n            id: DISCARD_PROMPT_TEMPLATE_CUSTOMIZATIONS.id,\n            command: DISCARD_PROMPT_TEMPLATE_CUSTOMIZATIONS.id,\n            tooltip: nls.localize('theia/ai/core/discardCustomPrompt/tooltip', 'Discard Customizations')\n        });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2024 EclipseSource GmbH.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { FrontendApplicationStateService } from '@theia/core/lib/browser/frontend-application-state';\nimport { nls } from '@theia/core/lib/common/nls';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { VariableRegistry, VariableResolverService } from '@theia/variable-resolver/lib/browser';\nimport { AIVariableContribution, AIVariableResolver, AIVariableService, AIVariableResolutionRequest, AIVariableContext, ResolvedAIVariable } from '../common';\n\n/**\n * Mapping configuration for a Theia variable to one or more AI variables\n */\ninterface VariableMapping {\n    name?: string;\n    description?: string;\n}\n\n/**\n * Integrates the Theia VariableRegistry with the Theia AI VariableService\n */\n@injectable()\nexport class TheiaVariableContribution implements AIVariableContribution, AIVariableResolver {\n\n    private static readonly THEIA_PREFIX = 'theia-';\n\n    @inject(VariableResolverService)\n    protected readonly variableResolverService: VariableResolverService;\n\n    @inject(VariableRegistry)\n    protected readonly variableRegistry: VariableRegistry;\n\n    @inject(FrontendApplicationStateService)\n    protected readonly stateService: FrontendApplicationStateService;\n\n    // Map original variable name to one or more mappings with new name and description.\n    // Only variables present in this map are registered.\n    protected variableRenameMap: Map<string, VariableMapping[]> = new Map([\n        ['file', [\n            {\n                name: 'currentAbsoluteFilePath',\n                description: nls.localize('theia/ai/core/variable-contribution/currentAbsoluteFilePath', 'The absolute path of the \\\n                currently opened file. Please note that most agents will expect a relative file path (relative to the current workspace).')\n            }\n        ]],\n        ['selectedText', [\n            {\n                description: nls.localize('theia/ai/core/variable-contribution/currentSelectedText', 'The plain text that is currently selected in the \\\n                opened file. This excludes the information where the content is coming from. Please note that most agents will work better with a relative file path \\\n                (relative to the current workspace).')\n            }\n        ]],\n        ['currentText', [\n            {\n                name: 'currentFileContent',\n                description: nls.localize('theia/ai/core/variable-contribution/currentFileContent', 'The plain content of the \\\n                currently opened file. This excludes the information where the content is coming from. Please note that most agents will work better with a relative file path \\\n                (relative to the current workspace).')\n            }\n        ]],\n        ['relativeFile', [\n            {\n                name: 'currentRelativeFilePath',\n                description: nls.localize('theia/ai/core/variable-contribution/currentRelativeFilePath', 'The relative path of the \\\n                currently opened file.')\n            },\n            {\n                name: '_f',\n                description: nls.localize('theia/ai/core/variable-contribution/dotRelativePath', 'Short reference to the relative path of the \\\n                currently opened file (\\'currentRelativeFilePath\\').')\n            }\n        ]],\n        ['relativeFileDirname', [\n            {\n                name: 'currentRelativeDirPath',\n                description: nls.localize('theia/ai/core/variable-contribution/currentRelativeDirPath', 'The relative path of the directory \\\n                containing the currently opened file.')\n            }\n        ]],\n        ['lineNumber', [{}]],\n        ['workspaceFolder', [{}]]\n    ]);\n\n    registerVariables(service: AIVariableService): void {\n        this.stateService.reachedState('initialized_layout').then(() => {\n            // some variable contributions in Theia are done as part of the onStart, same as our AI variable contributions\n            // we therefore wait for all of them to be registered before we register we map them to our own\n            this.variableRegistry.getVariables().forEach(variable => {\n                if (!this.variableRenameMap.has(variable.name)) {\n                    return; // Do not register variables not part of the map\n                }\n\n                const mappings = this.variableRenameMap.get(variable.name)!;\n\n                // Register each mapping for this variable\n                mappings.forEach((mapping, index) => {\n                    const newName = (mapping.name && mapping.name.trim() !== '') ? mapping.name : variable.name;\n                    const newDescription = (mapping.description && mapping.description.trim() !== '') ? mapping.description\n                        : (variable.description && variable.description.trim() !== '' ? variable.description\n                            : nls.localize('theia/ai/core/variable-contribution/builtInVariable', 'Theia Built-in Variable'));\n\n                    // For multiple mappings of the same variable, add a suffix to the ID to make it unique\n                    const idSuffix = mappings.length > 1 ? `-${index}` : '';\n                    const id = `${TheiaVariableContribution.THEIA_PREFIX}${variable.name}${idSuffix}`;\n\n                    service.registerResolver({\n                        id,\n                        name: newName,\n                        description: newDescription\n                    }, this);\n                });\n            });\n        });\n    }\n\n    protected toTheiaVariable(request: AIVariableResolutionRequest): string {\n        // Extract the base variable name by removing the THEIA_PREFIX and any potential index suffix\n        let variableId = request.variable.id;\n        if (variableId.startsWith(TheiaVariableContribution.THEIA_PREFIX)) {\n            variableId = variableId.slice(TheiaVariableContribution.THEIA_PREFIX.length);\n            // Remove any potential index suffix (e.g., -0, -1)\n            variableId = variableId.replace(/-\\d+$/, '');\n        }\n\n        return `\\${${variableId}${request.arg ? ':' + request.arg : ''}}`;\n    }\n\n    async canResolve(request: AIVariableResolutionRequest, context: AIVariableContext): Promise<number> {\n        if (!request.variable.id.startsWith(TheiaVariableContribution.THEIA_PREFIX)) {\n            return 0;\n        }\n        // some variables are not resolvable without providing a specific context\n        // this may be expensive but was not a problem for Theia's built-in variables\n        const resolved = await this.variableResolverService.resolve(this.toTheiaVariable(request), context);\n        return !resolved ? 0 : 1;\n    }\n\n    async resolve(request: AIVariableResolutionRequest, context: AIVariableContext): Promise<ResolvedAIVariable | undefined> {\n        const resolved = await this.variableResolverService.resolve(this.toTheiaVariable(request), context);\n        return resolved ? { value: resolved, variable: request.variable } : undefined;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2025 EclipseSource GmbH.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { Emitter } from '@theia/core';\nimport { ModelTokenUsageData, TokenUsageFrontendService } from './token-usage-frontend-service';\nimport { TokenUsage, TokenUsageService } from '../common/token-usage-service';\nimport { TokenUsageServiceClient } from '../common/protocol';\n\n@injectable()\nexport class TokenUsageServiceClientImpl implements TokenUsageServiceClient {\n    private readonly _onTokenUsageUpdated = new Emitter<TokenUsage>();\n    readonly onTokenUsageUpdated = this._onTokenUsageUpdated.event;\n\n    notifyTokenUsage(usage: TokenUsage): void {\n        this._onTokenUsageUpdated.fire(usage);\n    }\n\n}\n\n@injectable()\nexport class TokenUsageFrontendServiceImpl implements TokenUsageFrontendService {\n\n    @inject(TokenUsageServiceClient)\n    protected readonly tokenUsageServiceClient: TokenUsageServiceClient;\n\n    @inject(TokenUsageService)\n    protected readonly tokenUsageService: TokenUsageService;\n\n    private readonly _onTokenUsageUpdated = new Emitter<ModelTokenUsageData[]>();\n    readonly onTokenUsageUpdated = this._onTokenUsageUpdated.event;\n\n    private cachedUsageData: ModelTokenUsageData[] = [];\n\n    @postConstruct()\n    protected init(): void {\n        this.tokenUsageServiceClient.onTokenUsageUpdated(() => {\n            this.getTokenUsageData().then(data => {\n                this._onTokenUsageUpdated.fire(data);\n            });\n        });\n    }\n\n    /**\n     * Gets the current token usage data for all models\n     */\n    async getTokenUsageData(): Promise<ModelTokenUsageData[]> {\n        try {\n            const usages = await this.tokenUsageService.getTokenUsages();\n            this.cachedUsageData = this.aggregateTokenUsages(usages);\n            return this.cachedUsageData;\n        } catch (error) {\n            console.error('Failed to get token usage data:', error);\n            return [];\n        }\n    }\n\n    /**\n     * Aggregates token usages by model\n     */\n    private aggregateTokenUsages(usages: TokenUsage[]): ModelTokenUsageData[] {\n        // Group by model\n        const modelMap = new Map<string, {\n            inputTokens: number;\n            outputTokens: number;\n            cachedInputTokens: number;\n            readCachedInputTokens: number;\n            lastUsed?: Date;\n        }>();\n\n        // Process each usage record\n        for (const usage of usages) {\n            const existing = modelMap.get(usage.model);\n\n            if (existing) {\n                existing.inputTokens += usage.inputTokens;\n                existing.outputTokens += usage.outputTokens;\n\n                // Add cached tokens if they exist\n                if (usage.cachedInputTokens !== undefined) {\n                    existing.cachedInputTokens += usage.cachedInputTokens;\n                }\n\n                // Add read cached tokens if they exist\n                if (usage.readCachedInputTokens !== undefined) {\n                    existing.readCachedInputTokens += usage.readCachedInputTokens;\n                }\n\n                // Update last used if this usage is more recent\n                if (!existing.lastUsed || (usage.timestamp && usage.timestamp > existing.lastUsed)) {\n                    existing.lastUsed = usage.timestamp;\n                }\n            } else {\n                modelMap.set(usage.model, {\n                    inputTokens: usage.inputTokens,\n                    outputTokens: usage.outputTokens,\n                    cachedInputTokens: usage.cachedInputTokens || 0,\n                    readCachedInputTokens: usage.readCachedInputTokens || 0,\n                    lastUsed: usage.timestamp\n                });\n            }\n        }\n\n        // Convert map to array of model usage data\n        const result: ModelTokenUsageData[] = [];\n\n        for (const [modelId, data] of modelMap.entries()) {\n            const modelData: ModelTokenUsageData = {\n                modelId,\n                inputTokens: data.inputTokens,\n                outputTokens: data.outputTokens,\n                lastUsed: data.lastUsed\n            };\n\n            // Only include cache-related fields if they have non-zero values\n            if (data.cachedInputTokens > 0) {\n                modelData.cachedInputTokens = data.cachedInputTokens;\n            }\n\n            if (data.readCachedInputTokens > 0) {\n                modelData.readCachedInputTokens = data.readCachedInputTokens;\n            }\n\n            result.push(modelData);\n        }\n\n        return result;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2025 EclipseSource GmbH.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Event } from '@theia/core';\n\n/**\n * Data structure for token usage data specific to a model.\n */\nexport interface ModelTokenUsageData {\n    /** The model identifier */\n    modelId: string;\n    /** Number of input tokens used */\n    inputTokens: number;\n    /** Number of output tokens used */\n    outputTokens: number;\n    /** Number of input tokens written to cache */\n    cachedInputTokens?: number;\n    /** Number of input tokens read from cache */\n    readCachedInputTokens?: number;\n    /** Date when the model was last used */\n    lastUsed?: Date;\n}\n\n/**\n * Service for managing token usage data on the frontend.\n */\nexport const TokenUsageFrontendService = Symbol('TokenUsageFrontendService');\nexport interface TokenUsageFrontendService {\n    /**\n     * Event emitted when token usage data is updated\n     */\n    readonly onTokenUsageUpdated: Event<ModelTokenUsageData[]>;\n\n    /**\n     * Gets the current token usage data for all models\n     */\n    getTokenUsageData(): Promise<ModelTokenUsageData[]>;\n}\n","// *****************************************************************************\n// Copyright (C) 2025 EclipseSource GmbH.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { environment } from '@theia/core';\n\n/**\n * Result of a window blink attempt\n */\nexport interface WindowBlinkResult {\n    /** Whether the window blink was successful */\n    success: boolean;\n    /** Error message if the blink failed */\n    error?: string;\n}\n\n/**\n * Service for blinking/flashing the application window to get user attention.\n */\n@injectable()\nexport class WindowBlinkService {\n\n    private isElectron: boolean;\n\n    constructor() {\n        this.isElectron = environment.electron.is();\n    }\n\n    /**\n     * Blink/flash the window to get user attention.\n     * The implementation varies depending on the platform and environment.\n     *\n     * @param agentName Optional name of the agent to include in the blink notification\n     */\n    async blinkWindow(agentName?: string): Promise<WindowBlinkResult> {\n        try {\n            if (this.isElectron) {\n                await this.blinkElectronWindow(agentName);\n            } else {\n                await this.blinkBrowserWindow(agentName);\n            }\n            return { success: true };\n        } catch (error) {\n            console.warn('Failed to blink window:', error);\n            try {\n                if (document.hidden) {\n                    this.focusWindow();\n                }\n                return { success: true };\n            } catch (fallbackError) {\n                return {\n                    success: false,\n                    error: error instanceof Error ? error.message : 'Failed to blink window'\n                };\n            }\n        }\n    }\n\n    private async blinkElectronWindow(agentName?: string): Promise<void> {\n        await this.blinkDocumentTitle(agentName);\n\n        if (document.hidden) {\n            try {\n                const theiaCoreAPI = (window as unknown as { electronTheiaCore?: { focusWindow?: () => void } }).electronTheiaCore;\n                if (theiaCoreAPI?.focusWindow) {\n                    theiaCoreAPI.focusWindow();\n                } else {\n                    window.focus();\n                }\n            } catch (error) {\n                console.debug('Could not focus hidden window:', error);\n            }\n        }\n    }\n\n    private async blinkBrowserWindow(agentName?: string): Promise<void> {\n        await this.blinkDocumentTitle(agentName);\n        this.blinkWithVisibilityAPI();\n        if (document.hidden) {\n            this.focusWindow();\n        }\n    }\n\n    private async blinkDocumentTitle(agentName?: string): Promise<void> {\n        const originalTitle = document.title;\n        const alertTitle = agentName\n            ? `🔔 Theia - Agent \"${agentName}\" Completed`\n            : '🔔 Theia - Agent Completed';\n\n        let blinkCount = 0;\n        const maxBlinks = 6;\n\n        const blinkInterval = setInterval(() => {\n            if (blinkCount >= maxBlinks) {\n                clearInterval(blinkInterval);\n                document.title = originalTitle;\n                return;\n            }\n\n            document.title = blinkCount % 2 === 0 ? alertTitle : originalTitle;\n            blinkCount++;\n        }, 500);\n    }\n\n    private blinkWithVisibilityAPI(): void {\n        // This method provides visual attention-getting behavior without creating notifications\n        // as notifications are handled by the OSNotificationService to avoid duplicates\n        if (!this.isElectron && typeof document.hidden !== 'undefined') {\n            // Focus the window if it's hidden to get user attention\n            if (document.hidden) {\n                this.focusWindow();\n            }\n        }\n    }\n\n    private focusWindow(): void {\n        try {\n            window.focus();\n\n            // Try to scroll to top to create some visual movement\n            if (document.body.scrollTop > 0 || document.documentElement.scrollTop > 0) {\n                const currentScroll = document.documentElement.scrollTop || document.body.scrollTop;\n                window.scrollTo(0, 0);\n                setTimeout(() => {\n                    window.scrollTo(0, currentScroll);\n                }, 100);\n            }\n        } catch (error) {\n            console.debug('Could not focus window:', error);\n        }\n    }\n\n    /**\n     * Check if window blinking is supported in the current environment.\n     */\n    isBlinkSupported(): boolean {\n        if (this.isElectron) {\n            const theiaCoreAPI = (window as unknown as { electronTheiaCore?: { focusWindow?: () => void } }).electronTheiaCore;\n            return !!(theiaCoreAPI?.focusWindow);\n        }\n\n        // In browser, we can always provide some form of attention-getting behavior\n        return true;\n    }\n\n    /**\n     * Get information about the blinking capabilities.\n     */\n    getBlinkCapabilities(): {\n        supported: boolean;\n        method: 'electron' | 'browser' | 'none';\n        features: string[];\n    } {\n        const features: string[] = [];\n        let method: 'electron' | 'browser' | 'none' = 'none';\n\n        if (this.isElectron) {\n            method = 'electron';\n            const theiaCoreAPI = (window as unknown as { electronTheiaCore?: { focusWindow?: () => void } }).electronTheiaCore;\n\n            if (theiaCoreAPI?.focusWindow) {\n                features.push('electronTheiaCore.focusWindow');\n                features.push('document.title blinking');\n                features.push('window.focus');\n            }\n        } else {\n            method = 'browser';\n            features.push('document.title');\n            features.push('window.focus');\n\n            if (typeof document.hidden !== 'undefined') {\n                features.push('Page Visibility API');\n            }\n        }\n\n        return {\n            supported: features.length > 0,\n            method,\n            features\n        };\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2025 EclipseSource GmbH.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { CommandService, ILogger, nls } from '@theia/core';\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport * as monaco from '@theia/monaco-editor-core';\nimport {\n    AIVariable,\n    AIVariableContribution,\n    AIVariableService,\n    AIVariableResolutionRequest,\n    AIVariableContext,\n    ResolvedAIVariable,\n    AIVariableResolverWithVariableDependencies,\n    AIVariableArg\n} from './variable-service';\nimport { isCustomizedPromptFragment, PromptService } from './prompt-service';\nimport { PromptText } from './prompt-text';\n\nexport const PROMPT_VARIABLE: AIVariable = {\n    id: 'prompt-provider',\n    description: nls.localize('theia/ai/core/promptVariable/description', 'Resolves prompt templates via the prompt service'),\n    name: 'prompt',\n    args: [\n        { name: 'id', description: nls.localize('theia/ai/core/promptVariable/argDescription', 'The prompt template id to resolve') }\n    ]\n};\n\n@injectable()\nexport class PromptVariableContribution implements AIVariableContribution, AIVariableResolverWithVariableDependencies {\n\n    @inject(CommandService)\n    protected readonly commandService: CommandService;\n\n    @inject(PromptService)\n    protected readonly promptService: PromptService;\n\n    @inject(ILogger)\n    protected logger: ILogger;\n\n    registerVariables(service: AIVariableService): void {\n        service.registerResolver(PROMPT_VARIABLE, this);\n        service.registerArgumentPicker(PROMPT_VARIABLE, this.triggerArgumentPicker.bind(this));\n        service.registerArgumentCompletionProvider(PROMPT_VARIABLE, this.provideArgumentCompletionItems.bind(this));\n    }\n\n    canResolve(request: AIVariableResolutionRequest, context: AIVariableContext): number {\n        if (request.variable.name === PROMPT_VARIABLE.name) {\n            return 1;\n        }\n        return -1;\n    }\n\n    async resolve(\n        request: AIVariableResolutionRequest,\n        context: AIVariableContext,\n        resolveDependency?: (variable: AIVariableArg) => Promise<ResolvedAIVariable | undefined>\n    ): Promise<ResolvedAIVariable | undefined> {\n        if (request.variable.name === PROMPT_VARIABLE.name) {\n            const promptId = request.arg?.trim();\n            if (promptId) {\n                const resolvedPrompt = await this.promptService.getResolvedPromptFragmentWithoutFunctions(promptId, undefined, context, resolveDependency);\n                if (resolvedPrompt) {\n                    return {\n                        variable: request.variable,\n                        value: resolvedPrompt.text,\n                        allResolvedDependencies: resolvedPrompt.variables\n                    };\n                }\n            }\n        }\n        this.logger.debug(`Could not resolve prompt variable '${request.variable.name}' with arg '${request.arg}'. Returning empty string.`);\n        return {\n            variable: request.variable,\n            value: '',\n            allResolvedDependencies: []\n        };\n    }\n\n    protected async triggerArgumentPicker(): Promise<string | undefined> {\n        // Trigger the suggestion command to show argument completions\n        this.commandService.executeCommand('editor.action.triggerSuggest');\n        // Return undefined because we don't actually pick the argument here.\n        // The argument is selected and inserted by the monaco editor's completion mechanism.\n        return undefined;\n    }\n\n    protected async provideArgumentCompletionItems(\n        model: monaco.editor.ITextModel,\n        position: monaco.Position\n    ): Promise<monaco.languages.CompletionItem[] | undefined> {\n        const lineContent = model.getLineContent(position.lineNumber);\n\n        // Only provide completions once the variable argument separator is typed\n        const triggerCharIndex = lineContent.lastIndexOf(PromptText.VARIABLE_SEPARATOR_CHAR, position.column - 1);\n        if (triggerCharIndex === -1) {\n            return undefined;\n        }\n\n        // Check if the text immediately before the trigger is the prompt variable, i.e #prompt\n        const requiredVariable = `${PromptText.VARIABLE_CHAR}${PROMPT_VARIABLE.name}`;\n        if (triggerCharIndex < requiredVariable.length ||\n            lineContent.substring(triggerCharIndex - requiredVariable.length, triggerCharIndex) !== requiredVariable) {\n            return undefined;\n        }\n\n        const range = new monaco.Range(position.lineNumber, triggerCharIndex + 2, position.lineNumber, position.column);\n\n        const activePrompts = this.promptService.getActivePromptFragments();\n        let builtinPromptCompletions: monaco.languages.CompletionItem[] | undefined = undefined;\n\n        if (activePrompts.length > 0) {\n            builtinPromptCompletions = [];\n            activePrompts.forEach(prompt => (builtinPromptCompletions!.push(\n                {\n                    label: prompt.id,\n                    kind: isCustomizedPromptFragment(prompt) ? monaco.languages.CompletionItemKind.Enum : monaco.languages.CompletionItemKind.Variable,\n                    insertText: prompt.id,\n                    range,\n                    detail: isCustomizedPromptFragment(prompt) ?\n                        nls.localize('theia/ai/core/promptVariable/completions/detail/custom', 'Customized prompt fragment') :\n                        nls.localize('theia/ai/core/promptVariable/completions/detail/builtin', 'Built-in prompt fragment'),\n                    sortText: `${prompt.id}`\n                })));\n        }\n\n        return builtinPromptCompletions;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport * from './textmate-registry';\nexport * from './textmate-contribution';\nexport * from './monaco-textmate-service';\nexport * from './monaco-textmate-frontend-bindings';\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport * from './workspace-commands';\nexport * from './workspace-service';\nexport * from './canonical-uri-service';\nexport * from './workspace-frontend-contribution';\nexport * from './workspace-frontend-module';\nexport * from './workspace-preferences';\nexport * from './workspace-trust-service';\n","'use strict';\n\n\nvar loader = require('./lib/loader');\nvar dumper = require('./lib/dumper');\n\n\nfunction renamed(from, to) {\n  return function () {\n    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' +\n      'Use yaml.' + to + ' instead, which is now safe by default.');\n  };\n}\n\n\nmodule.exports.Type                = require('./lib/type');\nmodule.exports.Schema              = require('./lib/schema');\nmodule.exports.FAILSAFE_SCHEMA     = require('./lib/schema/failsafe');\nmodule.exports.JSON_SCHEMA         = require('./lib/schema/json');\nmodule.exports.CORE_SCHEMA         = require('./lib/schema/core');\nmodule.exports.DEFAULT_SCHEMA      = require('./lib/schema/default');\nmodule.exports.load                = loader.load;\nmodule.exports.loadAll             = loader.loadAll;\nmodule.exports.dump                = dumper.dump;\nmodule.exports.YAMLException       = require('./lib/exception');\n\n// Re-export all types in case user wants to create custom schema\nmodule.exports.types = {\n  binary:    require('./lib/type/binary'),\n  float:     require('./lib/type/float'),\n  map:       require('./lib/type/map'),\n  null:      require('./lib/type/null'),\n  pairs:     require('./lib/type/pairs'),\n  set:       require('./lib/type/set'),\n  timestamp: require('./lib/type/timestamp'),\n  bool:      require('./lib/type/bool'),\n  int:       require('./lib/type/int'),\n  merge:     require('./lib/type/merge'),\n  omap:      require('./lib/type/omap'),\n  seq:       require('./lib/type/seq'),\n  str:       require('./lib/type/str')\n};\n\n// Removed functions from JS-YAML 3.0.x\nmodule.exports.safeLoad            = renamed('safeLoad', 'load');\nmodule.exports.safeLoadAll         = renamed('safeLoadAll', 'loadAll');\nmodule.exports.safeDump            = renamed('safeDump', 'dump');\n","'use strict';\n\n\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nmodule.exports.isNothing      = isNothing;\nmodule.exports.isObject       = isObject;\nmodule.exports.toArray        = toArray;\nmodule.exports.repeat         = repeat;\nmodule.exports.isNegativeZero = isNegativeZero;\nmodule.exports.extend         = extend;\n","'use strict';\n\n/*eslint-disable no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar DEFAULT_SCHEMA      = require('./schema/default');\n\nvar _toString       = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar CHAR_BOM                  = 0xFEFF;\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_CARRIAGE_RETURN      = 0x0D; /* CR */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_EQUALS               = 0x3D; /* = */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nvar DEPRECATED_BASE60_SYNTAX = /^[-+]?[0-9_]+(?::[0-9_]+)+(?:\\.[0-9_]*)?$/;\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new YAMLException('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\n\nvar QUOTING_TYPE_SINGLE = 1,\n    QUOTING_TYPE_DOUBLE = 2;\n\nfunction State(options) {\n  this.schema        = options['schema'] || DEFAULT_SCHEMA;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n  this.quotingType   = options['quotingType'] === '\"' ? QUOTING_TYPE_DOUBLE : QUOTING_TYPE_SINGLE;\n  this.forceQuotes   = options['forceQuotes'] || false;\n  this.replacer      = typeof options['replacer'] === 'function' ? options['replacer'] : null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn’t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== CHAR_BOM)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// [34] ns-char ::= nb-char - s-white\n// [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n// [26] b-char  ::= b-line-feed | b-carriage-return\n// Including s-white (for some reason, examples doesn't match specs in this aspect)\n// ns-char ::= c-printable - b-line-feed - b-carriage-return - c-byte-order-mark\nfunction isNsCharOrWhitespace(c) {\n  return isPrintable(c)\n    && c !== CHAR_BOM\n    // - b-char\n    && c !== CHAR_CARRIAGE_RETURN\n    && c !== CHAR_LINE_FEED;\n}\n\n// [127]  ns-plain-safe(c) ::= c = flow-out  ⇒ ns-plain-safe-out\n//                             c = flow-in   ⇒ ns-plain-safe-in\n//                             c = block-key ⇒ ns-plain-safe-out\n//                             c = flow-key  ⇒ ns-plain-safe-in\n// [128] ns-plain-safe-out ::= ns-char\n// [129]  ns-plain-safe-in ::= ns-char - c-flow-indicator\n// [130]  ns-plain-char(c) ::=  ( ns-plain-safe(c) - “:” - “#” )\n//                            | ( /* An ns-char preceding */ “#” )\n//                            | ( “:” /* Followed by an ns-plain-safe(c) */ )\nfunction isPlainSafe(c, prev, inblock) {\n  var cIsNsCharOrWhitespace = isNsCharOrWhitespace(c);\n  var cIsNsChar = cIsNsCharOrWhitespace && !isWhitespace(c);\n  return (\n    // ns-plain-safe\n    inblock ? // c = flow-in\n      cIsNsCharOrWhitespace\n      : cIsNsCharOrWhitespace\n        // - c-flow-indicator\n        && c !== CHAR_COMMA\n        && c !== CHAR_LEFT_SQUARE_BRACKET\n        && c !== CHAR_RIGHT_SQUARE_BRACKET\n        && c !== CHAR_LEFT_CURLY_BRACKET\n        && c !== CHAR_RIGHT_CURLY_BRACKET\n  )\n    // ns-plain-char\n    && c !== CHAR_SHARP // false on '#'\n    && !(prev === CHAR_COLON && !cIsNsChar) // false on ': '\n    || (isNsCharOrWhitespace(prev) && !isWhitespace(prev) && c === CHAR_SHARP) // change to true on '[^ ]#'\n    || (prev === CHAR_COLON && cIsNsChar); // change to true on ':[^ ]'\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  // No support of ( ( “?” | “:” | “-” ) /* Followed by an ns-plain-safe(c)) */ ) part\n  return isPrintable(c) && c !== CHAR_BOM\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “\"”\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_EQUALS\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | “%” | “@” | “`”)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Simplified test for values allowed as the last character in plain style.\nfunction isPlainSafeLast(c) {\n  // just not whitespace or colon, it will be checked to be plain character later\n  return !isWhitespace(c) && c !== CHAR_COLON;\n}\n\n// Same as 'string'.codePointAt(pos), but works in older browsers.\nfunction codePointAt(string, pos) {\n  var first = string.charCodeAt(pos), second;\n  if (first >= 0xD800 && first <= 0xDBFF && pos + 1 < string.length) {\n    second = string.charCodeAt(pos + 1);\n    if (second >= 0xDC00 && second <= 0xDFFF) {\n      // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n    }\n  }\n  return first;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth,\n  testAmbiguousType, quotingType, forceQuotes, inblock) {\n\n  var i;\n  var char = 0;\n  var prevChar = null;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(codePointAt(string, 0))\n          && isPlainSafeLast(codePointAt(string, string.length - 1));\n\n  if (singleLineOnly || forceQuotes) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    if (plain && !forceQuotes && !testAmbiguousType(string)) {\n      return STYLE_PLAIN;\n    }\n    return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  if (!forceQuotes) {\n    return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n  }\n  return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    • No ending newline => unaffected; already using strip \"-\" chomping.\n//    • Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey, inblock) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"\"' : \"''\";\n    }\n    if (!state.noCompatMode) {\n      if (DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1 || DEPRECATED_BASE60_SYNTAX.test(string)) {\n        return state.quotingType === QUOTING_TYPE_DOUBLE ? ('\"' + string + '\"') : (\"'\" + string + \"'\");\n      }\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth,\n      testAmbiguity, state.quotingType, state.forceQuotes && !iskey, inblock)) {\n\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string, lineWidth) + '\"';\n      default:\n        throw new YAMLException('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char = 0;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n    char = codePointAt(string, i);\n    escapeSeq = ESCAPE_SEQUENCES[char];\n\n    if (!escapeSeq && isPrintable(char)) {\n      result += string[i];\n      if (char >= 0x10000) result += string[i + 1];\n    } else {\n      result += escapeSeq || encodeHex(char);\n    }\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level, value, false, false) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level, null, false, false))) {\n\n      if (_result !== '') _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level + 1, value, true, true, false, true) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level + 1, null, true, true, false, true))) {\n\n      if (!compact || _result !== '') {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n\n    pairBuffer = '';\n    if (_result !== '') pairBuffer += ', ';\n\n    if (state.condenseFlow) pairBuffer += '\"';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new YAMLException('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || _result !== '') {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      if (explicit) {\n        if (type.multi && type.representName) {\n          state.tag = type.representName(object);\n        } else {\n          state.tag = type.tag;\n        }\n      } else {\n        state.tag = '?';\n      }\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new YAMLException('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey, isblockseq) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString.call(state.dump);\n  var inblock = block;\n  var tagStr;\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      if (block && (state.dump.length !== 0)) {\n        if (state.noArrayIndent && !isblockseq && level > 0) {\n          writeBlockSequence(state, level - 1, state.dump, compact);\n        } else {\n          writeBlockSequence(state, level, state.dump, compact);\n        }\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey, inblock);\n      }\n    } else if (type === '[object Undefined]') {\n      return false;\n    } else {\n      if (state.skipInvalid) return false;\n      throw new YAMLException('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      // Need to encode all characters except those allowed by the spec:\n      //\n      // [35] ns-dec-digit    ::=  [#x30-#x39] /* 0-9 */\n      // [36] ns-hex-digit    ::=  ns-dec-digit\n      //                         | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */\n      // [37] ns-ascii-letter ::=  [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */\n      // [38] ns-word-char    ::=  ns-dec-digit | ns-ascii-letter | “-”\n      // [39] ns-uri-char     ::=  “%” ns-hex-digit ns-hex-digit | ns-word-char | “#”\n      //                         | “;” | “/” | “?” | “:” | “@” | “&” | “=” | “+” | “$” | “,”\n      //                         | “_” | “.” | “!” | “~” | “*” | “'” | “(” | “)” | “[” | “]”\n      //\n      // Also need to encode '!' because it has special meaning (end of tag prefix).\n      //\n      tagStr = encodeURI(\n        state.tag[0] === '!' ? state.tag.slice(1) : state.tag\n      ).replace(/!/g, '%21');\n\n      if (state.tag[0] === '!') {\n        tagStr = '!' + tagStr;\n      } else if (tagStr.slice(0, 18) === 'tag:yaml.org,2002:') {\n        tagStr = '!!' + tagStr.slice(18);\n      } else {\n        tagStr = '!<' + tagStr + '>';\n      }\n\n      state.dump = tagStr + ' ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump(input, options) {\n  options = options || {};\n\n  var state = new State(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  var value = input;\n\n  if (state.replacer) {\n    value = state.replacer.call({ '': value }, '', value);\n  }\n\n  if (writeNode(state, 0, value, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nmodule.exports.dump = dump;\n","// YAML error class. http://stackoverflow.com/questions/8458984\n//\n'use strict';\n\n\nfunction formatError(exception, compact) {\n  var where = '', message = exception.reason || '(unknown reason)';\n\n  if (!exception.mark) return message;\n\n  if (exception.mark.name) {\n    where += 'in \"' + exception.mark.name + '\" ';\n  }\n\n  where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';\n\n  if (!compact && exception.mark.snippet) {\n    where += '\\n\\n' + exception.mark.snippet;\n  }\n\n  return message + ' ' + where;\n}\n\n\nfunction YAMLException(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = formatError(this, false);\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException.prototype = Object.create(Error.prototype);\nYAMLException.prototype.constructor = YAMLException;\n\n\nYAMLException.prototype.toString = function toString(compact) {\n  return this.name + ': ' + formatError(this, compact);\n};\n\n\nmodule.exports = YAMLException;\n","'use strict';\n\n/*eslint-disable max-len,no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar makeSnippet         = require('./snippet');\nvar DEFAULT_SCHEMA      = require('./schema/default');\n\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || DEFAULT_SCHEMA;\n  this.onWarning = options['onWarning'] || null;\n  // (Hidden) Remove? makes the loader to expect YAML 1.1 documents\n  // if such documents have no explicit %YAML directive\n  this.legacy    = options['legacy']    || false;\n\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  // position of first leading tab in the current line,\n  // used to make sure there are no tabs in the indentation\n  this.firstTabInLine = -1;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  var mark = {\n    name:     state.filename,\n    buffer:   state.input.slice(0, -1), // omit trailing \\0\n    position: state.position,\n    line:     state.line,\n    column:   state.position - state.lineStart\n  };\n\n  mark.snippet = makeSnippet(mark);\n\n  return new YAMLException(message, mark);\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    try {\n      prefix = decodeURIComponent(prefix);\n    } catch (err) {\n      throwError(state, 'tag prefix is malformed: ' + prefix);\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode,\n  startLine, startLineStart, startPos) {\n\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty.call(overridableKeys, keyNode) &&\n        _hasOwnProperty.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.lineStart = startLineStart || state.lineStart;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n\n    // used for this specific key only because Object.defineProperty is slow\n    if (keyNode === '__proto__') {\n      Object.defineProperty(_result, keyNode, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: valueNode\n      });\n    } else {\n      _result[keyNode] = valueNode;\n    }\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n  state.firstTabInLine = -1;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      if (ch === 0x09/* Tab */ && state.firstTabInLine === -1) {\n        state.firstTabInLine = state.position;\n      }\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _lineStart,\n      _pos,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = Object.create(null),\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    } else if (ch === 0x2C/* , */) {\n      // \"flow collection entries can never be completely empty\", as per YAML 1.2, section 7.4\n      throwError(state, \"expected the node content, but found ','\");\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line; // Save the current line.\n    _lineStart = state.lineStart;\n    _pos = state.position;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _keyLine,\n      _keyLineStart,\n      _keyPos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = Object.create(null),\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (!atExplicitKey && state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else {\n      _keyLine = state.line;\n      _keyLineStart = state.lineStart;\n      _keyPos = state.position;\n\n      if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n        // Neither implicit nor explicit notation.\n        // Reading is done. Go to the epilogue.\n        break;\n      }\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (atExplicitKey) {\n        _keyLine = state.line;\n        _keyLineStart = state.lineStart;\n        _keyPos = state.position;\n      }\n\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  try {\n    tagName = decodeURIComponent(tagName);\n  } catch (err) {\n    throwError(state, 'tag name is malformed: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!_hasOwnProperty.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      typeList,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag === null) {\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = state.result;\n    }\n\n  } else if (state.tag === '?') {\n    // Implicit resolving is not allowed for non-scalar types, and '?'\n    // non-specific tag is only automatically assigned to plain scalars.\n    //\n    // We only need to check kind conformity in case user explicitly assigns '?'\n    // tag, for example like this: \"!<?> [0]\"\n    //\n    if (state.result !== null && state.kind !== 'scalar') {\n      throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n    }\n\n    for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n      type = state.implicitTypes[typeIndex];\n\n      if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        state.result = type.construct(state.result);\n        state.tag = type.tag;\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n        break;\n      }\n    }\n  } else if (state.tag !== '!') {\n    if (_hasOwnProperty.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n    } else {\n      // looking for multi type\n      type = null;\n      typeList = state.typeMap.multi[state.kind || 'fallback'];\n\n      for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {\n        if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {\n          type = typeList[typeIndex];\n          break;\n        }\n      }\n    }\n\n    if (!type) {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n\n    if (state.result !== null && type.kind !== state.kind) {\n      throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n    }\n\n    if (!type.resolve(state.result, state.tag)) { // `state.result` updated in resolver if matched\n      throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n    } else {\n      state.result = type.construct(state.result, state.tag);\n      if (state.anchor !== null) {\n        state.anchorMap[state.anchor] = state.result;\n      }\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = Object.create(null);\n  state.anchorMap = Object.create(null);\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State(input, options);\n\n  var nullpos = input.indexOf('\\0');\n\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  var documents = loadDocuments(input, options);\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new YAMLException('expected a single document in the stream, but found more');\n}\n\n\nmodule.exports.loadAll = loadAll;\nmodule.exports.load    = load;\n","'use strict';\n\n/*eslint-disable max-len*/\n\nvar YAMLException = require('./exception');\nvar Type          = require('./type');\n\n\nfunction compileList(schema, name) {\n  var result = [];\n\n  schema[name].forEach(function (currentType) {\n    var newIndex = result.length;\n\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag &&\n          previousType.kind === currentType.kind &&\n          previousType.multi === currentType.multi) {\n\n        newIndex = previousIndex;\n      }\n    });\n\n    result[newIndex] = currentType;\n  });\n\n  return result;\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {},\n        multi: {\n          scalar: [],\n          sequence: [],\n          mapping: [],\n          fallback: []\n        }\n      }, index, length;\n\n  function collectType(type) {\n    if (type.multi) {\n      result.multi[type.kind].push(type);\n      result.multi['fallback'].push(type);\n    } else {\n      result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n    }\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema(definition) {\n  return this.extend(definition);\n}\n\n\nSchema.prototype.extend = function extend(definition) {\n  var implicit = [];\n  var explicit = [];\n\n  if (definition instanceof Type) {\n    // Schema.extend(type)\n    explicit.push(definition);\n\n  } else if (Array.isArray(definition)) {\n    // Schema.extend([ type1, type2, ... ])\n    explicit = explicit.concat(definition);\n\n  } else if (definition && (Array.isArray(definition.implicit) || Array.isArray(definition.explicit))) {\n    // Schema.extend({ explicit: [ type1, type2, ... ], implicit: [ type1, type2, ... ] })\n    if (definition.implicit) implicit = implicit.concat(definition.implicit);\n    if (definition.explicit) explicit = explicit.concat(definition.explicit);\n\n  } else {\n    throw new YAMLException('Schema.extend argument should be a Type, [ Type ], ' +\n      'or a schema definition ({ implicit: [...], explicit: [...] })');\n  }\n\n  implicit.forEach(function (type) {\n    if (!(type instanceof Type)) {\n      throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n\n    if (type.loadKind && type.loadKind !== 'scalar') {\n      throw new YAMLException('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n\n    if (type.multi) {\n      throw new YAMLException('There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.');\n    }\n  });\n\n  explicit.forEach(function (type) {\n    if (!(type instanceof Type)) {\n      throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n  });\n\n  var result = Object.create(Schema.prototype);\n\n  result.implicit = (this.implicit || []).concat(implicit);\n  result.explicit = (this.explicit || []).concat(explicit);\n\n  result.compiledImplicit = compileList(result, 'implicit');\n  result.compiledExplicit = compileList(result, 'explicit');\n  result.compiledTypeMap  = compileMap(result.compiledImplicit, result.compiledExplicit);\n\n  return result;\n};\n\n\nmodule.exports = Schema;\n","// Standard YAML's Core schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2804923\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, Core schema has no distinctions from JSON schema is JS-YAML.\n\n\n'use strict';\n\n\nmodule.exports = require('./json');\n","// JS-YAML's default schema for `safeLoad` function.\n// It is not described in the YAML specification.\n//\n// This schema is based on standard YAML's Core schema and includes most of\n// extra types described at YAML tag repository. (http://yaml.org/type/)\n\n\n'use strict';\n\n\nmodule.exports = require('./core').extend({\n  implicit: [\n    require('../type/timestamp'),\n    require('../type/merge')\n  ],\n  explicit: [\n    require('../type/binary'),\n    require('../type/omap'),\n    require('../type/pairs'),\n    require('../type/set')\n  ]\n});\n","// Standard YAML's Failsafe schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2802346\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  explicit: [\n    require('../type/str'),\n    require('../type/seq'),\n    require('../type/map')\n  ]\n});\n","// Standard YAML's JSON schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2803231\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, this schema is not such strict as defined in the YAML specification.\n// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.\n\n\n'use strict';\n\n\nmodule.exports = require('./failsafe').extend({\n  implicit: [\n    require('../type/null'),\n    require('../type/bool'),\n    require('../type/int'),\n    require('../type/float')\n  ]\n});\n","'use strict';\n\n\nvar common = require('./common');\n\n\n// get snippet for a single line, respecting maxLength\nfunction getLine(buffer, lineStart, lineEnd, position, maxLineLength) {\n  var head = '';\n  var tail = '';\n  var maxHalfLength = Math.floor(maxLineLength / 2) - 1;\n\n  if (position - lineStart > maxHalfLength) {\n    head = ' ... ';\n    lineStart = position - maxHalfLength + head.length;\n  }\n\n  if (lineEnd - position > maxHalfLength) {\n    tail = ' ...';\n    lineEnd = position + maxHalfLength - tail.length;\n  }\n\n  return {\n    str: head + buffer.slice(lineStart, lineEnd).replace(/\\t/g, '→') + tail,\n    pos: position - lineStart + head.length // relative position\n  };\n}\n\n\nfunction padStart(string, max) {\n  return common.repeat(' ', max - string.length) + string;\n}\n\n\nfunction makeSnippet(mark, options) {\n  options = Object.create(options || null);\n\n  if (!mark.buffer) return null;\n\n  if (!options.maxLength) options.maxLength = 79;\n  if (typeof options.indent      !== 'number') options.indent      = 1;\n  if (typeof options.linesBefore !== 'number') options.linesBefore = 3;\n  if (typeof options.linesAfter  !== 'number') options.linesAfter  = 2;\n\n  var re = /\\r?\\n|\\r|\\0/g;\n  var lineStarts = [ 0 ];\n  var lineEnds = [];\n  var match;\n  var foundLineNo = -1;\n\n  while ((match = re.exec(mark.buffer))) {\n    lineEnds.push(match.index);\n    lineStarts.push(match.index + match[0].length);\n\n    if (mark.position <= match.index && foundLineNo < 0) {\n      foundLineNo = lineStarts.length - 2;\n    }\n  }\n\n  if (foundLineNo < 0) foundLineNo = lineStarts.length - 1;\n\n  var result = '', i, line;\n  var lineNoLength = Math.min(mark.line + options.linesAfter, lineEnds.length).toString().length;\n  var maxLineLength = options.maxLength - (options.indent + lineNoLength + 3);\n\n  for (i = 1; i <= options.linesBefore; i++) {\n    if (foundLineNo - i < 0) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo - i],\n      lineEnds[foundLineNo - i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo - i]),\n      maxLineLength\n    );\n    result = common.repeat(' ', options.indent) + padStart((mark.line - i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n' + result;\n  }\n\n  line = getLine(mark.buffer, lineStarts[foundLineNo], lineEnds[foundLineNo], mark.position, maxLineLength);\n  result += common.repeat(' ', options.indent) + padStart((mark.line + 1).toString(), lineNoLength) +\n    ' | ' + line.str + '\\n';\n  result += common.repeat('-', options.indent + lineNoLength + 3 + line.pos) + '^' + '\\n';\n\n  for (i = 1; i <= options.linesAfter; i++) {\n    if (foundLineNo + i >= lineEnds.length) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo + i],\n      lineEnds[foundLineNo + i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo + i]),\n      maxLineLength\n    );\n    result += common.repeat(' ', options.indent) + padStart((mark.line + i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n';\n  }\n\n  return result.replace(/\\n$/, '');\n}\n\n\nmodule.exports = makeSnippet;\n","'use strict';\n\nvar YAMLException = require('./exception');\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'multi',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'representName',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new YAMLException('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.options       = options; // keep original options in case user wants to extend this type later\n  this.tag           = tag;\n  this.kind          = options['kind']          || null;\n  this.resolve       = options['resolve']       || function () { return true; };\n  this.construct     = options['construct']     || function (data) { return data; };\n  this.instanceOf    = options['instanceOf']    || null;\n  this.predicate     = options['predicate']     || null;\n  this.represent     = options['represent']     || null;\n  this.representName = options['representName'] || null;\n  this.defaultStyle  = options['defaultStyle']  || null;\n  this.multi         = options['multi']         || false;\n  this.styleAliases  = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new YAMLException('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nmodule.exports = Type;\n","'use strict';\n\n/*eslint-disable no-bitwise*/\n\n\nvar Type = require('../type');\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  return new Uint8Array(result);\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(obj) {\n  return Object.prototype.toString.call(obj) ===  '[object Uint8Array]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:[0-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'o') {\n      // base 8\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isOctCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n  }\n\n  // base 10 (except 0)\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  return true;\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch;\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n    if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0o'  + obj.toString(8) : '-0o'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; },\n    empty:     function () { return '';     }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nvar _toString       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _toString = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n"],"names":[],"sourceRoot":""}