{"version":3,"file":"node_modules_theia_metrics_lib_browser_metrics-frontend-module_js.js","mappings":";;;;;;;;AAAA,+GAA6C;;;;;;;;;;;;;;;;ACA7C,gFAAgF;AAChF,oDAAoD;AACpD,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;AAChF,oIAAkE;AAElE,wGAA8E;AAC9E,oJAA4D;AAC5D,2GAA2D;AAGpD,IAAM,sCAAsC,GAA5C,MAAM,sCAAsC;IAA5C;QAUM,OAAE,GAAG,gBAAI,CAAC,KAAK,EAAE,CAAC;IAkB/B,CAAC;IAhBG,UAAU;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAES,KAAK,CAAC,YAAY;QACxB,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;QACjD,IAAI,QAAQ,KAAK,eAAQ,CAAC,KAAK,EAAE,CAAC;YAC9B,OAAO;QACX,CAAC;QACD,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;QACzE,IAAI,CAAC,SAAS,CAAC,yBAAyB,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;IAC5E,CAAC;IAES,MAAM,CAAC,MAAyB;QACtC,IAAI,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;IACpE,CAAC;CACJ;AA5BY,wFAAsC;AAErC;IADT,sBAAM,EAAC,gBAAS,CAAC;sCACG,gBAAS;yEAAC;AAGrB;IADT,sBAAM,EAAC,uCAA8B,CAAC;;mFACuB;AAGpD;IADT,sBAAM,EAAC,cAAO,CAAC;;sEACU;iDARjB,sCAAsC;IADlD,0BAAU,GAAE;GACA,sCAAsC,CA4BlD;;;;;;;;;;;;;AClDD,gFAAgF;AAChF,oDAAoD;AACpD,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;AAEhF,oIAA+D;AAC/D,qNAAqG;AACrG,2GAA+F;AAC/F,wHAAuG;AAEvG,qBAAe,IAAI,2BAAe,CAAC,IAAI,CAAC,EAAE;IACtC,IAAI,CAAC,yCAA+B,CAAC,CAAC,EAAE,CAAC,kFAAsC,CAAC,CAAC,gBAAgB,EAAE,CAAC;IACpG,IAAI,CAAC,uCAA8B,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;QACtD,MAAM,UAAU,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,qCAA2B,CAAC,CAAC;QAClE,OAAO,UAAU,CAAC,WAAW,CAAiC,2CAAkC,CAAC,CAAC;IACtG,CAAC,CAAC,CAAC,gBAAgB,EAAE,CAAC;AAC1B,CAAC,CAAC,CAAC;;;;;;;;;;;;;AC3BH,gFAAgF;AAChF,oDAAoD;AACpD,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;AAEhF,6KAAmD;;;;;;;;;;;;;AChBnD,gFAAgF;AAChF,oDAAoD;AACpD,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;;AAInE,0CAAkC,GAAG,oCAAoC,CAAC;AAE1E,sCAA8B,GAAG,MAAM,CAAC,gCAAgC,CAAC,CAAC","sources":["webpack:///./node_modules/@theia/core/shared/@lumino/coreutils/index.js?","webpack:///./node_modules/@theia/metrics/src/browser/metrics-frontend-application-contribution.ts?","webpack:///./node_modules/@theia/metrics/src/browser/metrics-frontend-module.ts?","webpack:///./node_modules/@theia/metrics/src/common/index.ts?","webpack:///./node_modules/@theia/metrics/src/common/measurement-notification-service.ts?"],"sourcesContent":["module.exports = require('@lumino/coreutils');\n","// *****************************************************************************\n// Copyright (C) 2023 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { FrontendApplicationContribution } from '@theia/core/lib/browser';\nimport { ILogger, LogLevel, MeasurementResult, Stopwatch } from '@theia/core';\nimport { UUID } from '@theia/core/shared/@lumino/coreutils';\nimport { MeasurementNotificationService } from '../common';\n\n@injectable()\nexport class MetricsFrontendApplicationContribution implements FrontendApplicationContribution {\n    @inject(Stopwatch)\n    protected stopwatch: Stopwatch;\n\n    @inject(MeasurementNotificationService)\n    protected notificationService: MeasurementNotificationService;\n\n    @inject(ILogger)\n    protected logger: ILogger;\n\n    readonly id = UUID.uuid4();\n\n    initialize(): void {\n        this.doInitialize();\n    }\n\n    protected async doInitialize(): Promise<void> {\n        const logLevel = await this.logger.getLogLevel();\n        if (logLevel !== LogLevel.DEBUG) {\n            return;\n        }\n        this.stopwatch.storedMeasurements.forEach(result => this.notify(result));\n        this.stopwatch.onDidAddMeasurementResult(result => this.notify(result));\n    }\n\n    protected notify(result: MeasurementResult): void {\n        this.notificationService.onFrontendMeasurement(this.id, result);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { MetricsFrontendApplicationContribution } from './metrics-frontend-application-contribution';\nimport { MeasurementNotificationService, measurementNotificationServicePath } from '../common';\nimport { FrontendApplicationContribution, WebSocketConnectionProvider } from '@theia/core/lib/browser';\n\nexport default new ContainerModule(bind => {\n    bind(FrontendApplicationContribution).to(MetricsFrontendApplicationContribution).inSingletonScope();\n    bind(MeasurementNotificationService).toDynamicValue(ctx => {\n        const connection = ctx.container.get(WebSocketConnectionProvider);\n        return connection.createProxy<MeasurementNotificationService>(measurementNotificationServicePath);\n    }).inSingletonScope();\n});\n","// *****************************************************************************\n// Copyright (C) 2023 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport * from './measurement-notification-service';\n","// *****************************************************************************\n// Copyright (C) 2023 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { MeasurementResult } from '@theia/core';\n\nexport const measurementNotificationServicePath = '/services/measurement-notification';\n\nexport const MeasurementNotificationService = Symbol('MeasurementNotificationService');\nexport interface MeasurementNotificationService {\n    /**\n     * Notify the backend when a fronted stopwatch provides a new measurement.\n     * @param frontendId The unique id associated with the frontend that sends the notification\n     * @param result The new measurement result\n     */\n    onFrontendMeasurement(frontendId: string, result: MeasurementResult): void;\n}\n"],"names":[],"sourceRoot":""}