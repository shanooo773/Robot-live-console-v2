{"version":3,"file":"vendors-node_modules_theia_keymaps_lib_browser_keymaps-frontend-module_js.js","mappings":"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","sources":["webpack:///./node_modules/@theia/core/src/browser/widgets/alert-message.tsx?","webpack:///./node_modules/@theia/core/shared/fuzzy/index.js?","webpack:///./node_modules/@theia/keymaps/src/browser/keybinding-schema-updater.ts?","webpack:///./node_modules/@theia/keymaps/src/browser/keybindings-widget.tsx?","webpack:///./node_modules/@theia/keymaps/src/browser/keymaps-frontend-contribution.ts?","webpack:///./node_modules/@theia/keymaps/src/browser/keymaps-frontend-module.ts?","webpack:///./node_modules/@theia/keymaps/src/browser/keymaps-monaco-contribution.ts?","webpack:///./node_modules/@theia/keymaps/src/browser/keymaps-service.ts?","webpack:///./node_modules/@theia/keymaps/src/browser/style/index.css?","webpack:///./node_modules/@theia/preferences/src/browser/monaco-jsonc-editor.ts?","webpack:///./node_modules/@theia/userstorage/src/browser/index.ts?","webpack:///./node_modules/@theia/userstorage/src/browser/user-storage-contribution.ts?","webpack:///./node_modules/@theia/userstorage/src/browser/user-storage-frontend-module.ts?","webpack:///./node_modules/@theia/userstorage/src/browser/user-storage-uri.ts?","webpack:///./node_modules/@theia/keymaps/src/browser/style/index.css?./node_modules/css-loader/dist/cjs.js"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport React = require('react');\nimport { codicon } from './widget';\n\nexport type MessageType = keyof AlertMessageIcon;\n\ninterface AlertMessageIcon {\n    INFO: string;\n    SUCCESS: string;\n    WARNING: string;\n    ERROR: string;\n}\n\nconst AlertMessageIcon = {\n    INFO: codicon('info'),\n    SUCCESS: codicon('pass'),\n    WARNING: codicon('warning'),\n    ERROR: codicon('error')\n};\n\nexport interface AlertMessageProps {\n    type: MessageType;\n    header: string;\n    children?: React.ReactNode\n}\n\nexport class AlertMessage extends React.Component<AlertMessageProps> {\n\n    override render(): React.ReactNode {\n        return <div className='theia-alert-message-container'>\n            <div className={`theia-alert theia-${this.props.type.toLowerCase()}-alert`}>\n                <div className='theia-message-header'>\n                    <i className={AlertMessageIcon[this.props.type]}></i>\n                    {this.props.header}\n                </div>\n                <div className='theia-message-content'>{this.props.children}</div>\n            </div>\n        </div>;\n    }\n\n}\n","module.exports = require('fuzzy');\n","// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { nls, CommandRegistry, deepClone } from '@theia/core/lib/common';\nimport { JsonSchemaContribution, JsonSchemaDataStore, JsonSchemaRegisterContext } from '@theia/core/lib/browser/json-schema-store';\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { IJSONSchema } from '@theia/core/lib/common/json-schema';\n\n@injectable()\nexport class KeybindingSchemaUpdater implements JsonSchemaContribution {\n    protected readonly uri = new URI(keybindingSchemaId);\n    @inject(CommandRegistry) protected readonly commandRegistry: CommandRegistry;\n    @inject(JsonSchemaDataStore) protected readonly schemaStore: JsonSchemaDataStore;\n\n    @postConstruct()\n    protected init(): void {\n        this.updateSchema();\n        this.commandRegistry.onCommandsChanged(() => this.updateSchema());\n    }\n\n    registerSchemas(store: JsonSchemaRegisterContext): void {\n        store.registerSchema({\n            fileMatch: ['keybindings.json', 'keymaps.json'],\n            url: this.uri.toString(),\n        });\n    }\n\n    protected updateSchema(): void {\n        const schema = deepClone(keybindingSchema);\n        const enumValues = schema.items.allOf[0].properties!.command.anyOf[1].enum!;\n        const enumDescriptions = schema.items.allOf[0].properties!.command.anyOf[1].enumDescriptions!;\n        for (const command of this.commandRegistry.getAllCommands()) {\n            if (command.handlers.length > 0 && !command.id.startsWith('_')) {\n                enumValues.push(command.id);\n                enumDescriptions.push(command.label ?? '');\n            }\n        }\n        this.schemaStore.setSchema(this.uri, schema);\n    }\n}\n\nconst keybindingSchemaId = 'vscode://schemas/keybindings';\nexport const keybindingSchema = {\n    $id: keybindingSchemaId,\n    type: 'array',\n    title: 'Keybinding Configuration File',\n    default: [],\n    definitions: {\n        key: { type: 'string', description: nls.localizeByDefault('Key or key sequence (separated by space)') },\n    },\n    items: {\n        type: 'object',\n        defaultSnippets: [{ body: { key: '$1', command: '$2', when: '$3' } }],\n        allOf: [\n            {\n                required: ['command'],\n                properties: {\n                    command: {\n                        anyOf: [{ type: 'string' }, { enum: <string[]>[], enumDescriptions: <string[]>[] }], description: nls.localizeByDefault('Name of the command to execute')\n                    },\n                    when: { type: 'string', description: nls.localizeByDefault('Condition when the key is active.') },\n                    args: { description: nls.localizeByDefault('Arguments to pass to the command to execute.') },\n                    context: {\n                        type: 'string',\n                        description: nls.localizeByDefault('Condition when the key is active.'),\n                        deprecationMessage: nls.localize('theia/keybinding-schema-updater/deprecation', 'Use `when` clause instead.')\n                    }\n                }\n            },\n            {\n                anyOf: [\n                    { required: ['key'], properties: { key: { $ref: '#/definitions/key' }, } },\n                    { required: ['keybinding'], properties: { keybinding: { $ref: '#/definitions/key' } } }\n                ]\n            }\n        ]\n    },\n    allowComments: true,\n    allowTrailingCommas: true,\n} as const satisfies IJSONSchema;\n","// *****************************************************************************\n// Copyright (C) 2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport React = require('@theia/core/shared/react');\nimport debounce = require('@theia/core/shared/lodash.debounce');\nimport * as fuzzy from '@theia/core/shared/fuzzy';\nimport { injectable, inject, postConstruct, unmanaged } from '@theia/core/shared/inversify';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport { CommandRegistry, Command } from '@theia/core/lib/common/command';\nimport { Keybinding } from '@theia/core/lib/common/keybinding';\nimport { ReactWidget } from '@theia/core/lib/browser/widgets/react-widget';\nimport {\n    KeybindingRegistry, SingleTextInputDialog, KeySequence, ConfirmDialog, Message, KeybindingScope,\n    SingleTextInputDialogProps, Key, ScopedKeybinding, codicon, StatefulWidget, Widget, ContextMenuRenderer, SELECTED_CLASS\n} from '@theia/core/lib/browser';\nimport { KeymapsService } from './keymaps-service';\nimport { AlertMessage } from '@theia/core/lib/browser/widgets/alert-message';\nimport { DisposableCollection, isOSX, isObject } from '@theia/core';\nimport { nls } from '@theia/core/lib/common/nls';\n\n/**\n * Representation of a keybinding item for the view.\n */\nexport interface KeybindingItem {\n    command: Command\n    keybinding?: ScopedKeybinding\n    /** human-readable labels can contain highlighting */\n    labels: {\n        id: RenderableLabel;\n        command: RenderableLabel;\n        keybinding: RenderableLabel;\n        context: RenderableLabel;\n        source: RenderableLabel;\n    }\n    visible?: boolean;\n}\n\nexport namespace KeybindingItem {\n    export function is(arg: unknown): arg is KeybindingItem {\n        return isObject(arg) && 'command' in arg && 'labels' in arg;\n    }\n\n    export function keybinding(item: KeybindingItem): Keybinding {\n        return item.keybinding ?? {\n            command: item.command.id,\n            keybinding: ''\n        };\n    }\n}\n\nexport interface RenderableLabel {\n    readonly value: string;\n    segments?: RenderableStringSegment[];\n}\n\nexport interface RenderableStringSegment {\n    value: string;\n    match: boolean;\n    key?: boolean;\n}\n\n/**\n * Representation of an individual table cell.\n */\nexport interface CellData {\n    /**\n     * The cell value.\n     */\n    value: string,\n    /**\n     * Indicates if a cell's value is currently highlighted.\n     */\n    highlighted: boolean,\n}\n\n@injectable()\nexport class KeybindingWidget extends ReactWidget implements StatefulWidget {\n\n    @inject(CommandRegistry)\n    protected readonly commandRegistry: CommandRegistry;\n\n    @inject(KeybindingRegistry)\n    protected readonly keybindingRegistry: KeybindingRegistry;\n\n    @inject(KeymapsService)\n    protected readonly keymapsService: KeymapsService;\n\n    @inject(ContextMenuRenderer)\n    protected readonly contextMenuRenderer: ContextMenuRenderer;\n\n    static readonly ID = 'keybindings.view.widget';\n    static readonly LABEL = nls.localizeByDefault('Keyboard Shortcuts');\n    static readonly CONTEXT_MENU = ['keybinding-context-menu'];\n    static readonly COPY_MENU = [...KeybindingWidget.CONTEXT_MENU, 'a_copy'];\n    static readonly EDIT_MENU = [...KeybindingWidget.CONTEXT_MENU, 'b_edit'];\n    static readonly ADD_MENU = [...KeybindingWidget.CONTEXT_MENU, 'c_add'];\n    static readonly REMOVE_MENU = [...KeybindingWidget.CONTEXT_MENU, 'd_remove'];\n    static readonly SHOW_MENU = [...KeybindingWidget.CONTEXT_MENU, 'e_show'];\n\n    /**\n     * The list of all available keybindings.\n     */\n    protected items: KeybindingItem[] = [];\n\n    /**\n     * The current user search query.\n     */\n    protected query: string = '';\n\n    /**\n     * The regular expression used to extract values between fuzzy results.\n     */\n    protected readonly regexp = /<match>(.*?)<\\/match>/g;\n    /**\n     * The regular expression used to extract values between the keybinding separator.\n     */\n    protected readonly keybindingSeparator = /<match>\\+<\\/match>/g;\n\n    /**\n     * The fuzzy search options.\n     * The `pre` and `post` options are used to wrap fuzzy matches.\n     */\n    protected readonly fuzzyOptions = {\n        pre: '<match>',\n        post: '</match>',\n    };\n\n    protected readonly onDidUpdateEmitter = new Emitter<void>();\n    readonly onDidUpdate: Event<void> = this.onDidUpdateEmitter.event;\n    protected readonly onRenderCallbacks = new DisposableCollection();\n    protected onRender = () => this.onRenderCallbacks.dispose();\n\n    /**\n     * Search keybindings.\n     */\n    protected readonly searchKeybindings: () => void = debounce(() => this.doSearchKeybindings(), 50);\n\n    constructor(@unmanaged() options?: Widget.IOptions) {\n        super(options);\n        this.onRender = this.onRender.bind(this);\n    }\n\n    /**\n     * Initialize the widget.\n     */\n    @postConstruct()\n    protected init(): void {\n        this.id = KeybindingWidget.ID;\n        this.title.label = KeybindingWidget.LABEL;\n        this.title.caption = KeybindingWidget.LABEL;\n        this.title.iconClass = codicon('three-bars');\n        this.title.closable = true;\n        this.updateItemsAndRerender();\n\n        // Listen to changes made in the `keymaps.json` and update the view accordingly.\n        if (this.keymapsService.onDidChangeKeymaps) {\n            this.toDispose.push(this.keymapsService.onDidChangeKeymaps(() => {\n                this.items = this.getItems();\n                this.doSearchKeybindings();\n            }));\n        }\n        this.toDispose.push(this.keybindingRegistry.onKeybindingsChanged(this.updateItemsAndRerender));\n    }\n\n    protected updateItemsAndRerender = debounce(() => {\n        this.items = this.getItems();\n        this.update();\n        if (this.hasSearch()) {\n            this.doSearchKeybindings();\n        }\n    }, 100, { leading: false, trailing: true });\n\n    /**\n     * Determine if there currently is a search term.\n     * @returns `true` if a search term is present.\n     */\n    hasSearch(): boolean {\n        return !!this.query.length;\n    }\n\n    /**\n     * Clear the search and reset the view.\n     */\n    clearSearch(): void {\n        const search = this.findSearchField();\n        if (search) {\n            search.value = '';\n            this.query = '';\n            this.doSearchKeybindings();\n        }\n    }\n\n    /**\n     * Show keybinding items with the same key sequence as the given item.\n     * @param item the keybinding item\n     */\n    showSameKeybindings(item: KeybindingItem): void {\n        const keybinding = item.keybinding;\n        if (keybinding) {\n            const search = this.findSearchField();\n            if (search) {\n                const query = `\"${this.keybindingRegistry.acceleratorFor(keybinding, '+', true).join(' ')}\"`;\n                search.value = query;\n                this.query = query;\n                this.doSearchKeybindings();\n            }\n        }\n    }\n\n    protected override onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.focusInputField();\n    }\n\n    /**\n     * Perform a search based on the user's search query.\n     */\n    protected doSearchKeybindings(): void {\n        this.onDidUpdateEmitter.fire(undefined);\n        const searchField = this.findSearchField();\n        this.query = searchField ? searchField.value.trim().toLocaleLowerCase() : '';\n        let query = this.query;\n        const startsWithQuote = query.startsWith('\"');\n        const endsWithQuote = query.endsWith('\"');\n        const matchKeybindingOnly = startsWithQuote && endsWithQuote;\n        if (startsWithQuote) {\n            query = query.slice(1);\n        }\n        if (endsWithQuote) {\n            query = query.slice(0, -1);\n        }\n        const queryItems = query.split(/[+\\s]/);\n        this.items.forEach(item => {\n            let matched = !this.query;\n            if (!matchKeybindingOnly) {\n                matched = this.formatAndMatchCommand(item) || matched;\n            }\n            matched = this.formatAndMatchKeybinding(item, queryItems, matchKeybindingOnly) || matched;\n            if (!matchKeybindingOnly) {\n                matched = this.formatAndMatchContext(item) || matched;\n                matched = this.formatAndMatchSource(item) || matched;\n            }\n            item.visible = matched;\n        });\n        this.update();\n    }\n\n    protected formatAndMatchCommand(item: KeybindingItem): boolean {\n        item.labels.command = this.toRenderableLabel(item.labels.command.value);\n        return Boolean(item.labels.command.segments);\n    }\n\n    protected formatAndMatchKeybinding(item: KeybindingItem, queryItems: string[], exactMatch?: boolean): boolean {\n        if (item.keybinding) {\n            const unmatchedTerms = queryItems.filter(Boolean);\n            const segments = this.keybindingRegistry.resolveKeybinding(item.keybinding).reduce<RenderableStringSegment[]>((collection, code, codeIndex) => {\n                if (codeIndex !== 0) {\n                    // Two non-breaking spaces.\n                    collection.push({ value: '\\u00a0\\u00a0', match: false, key: false });\n                }\n                const displayChunks = this.keybindingRegistry.componentsForKeyCode(code);\n                const matchChunks = isOSX ? this.keybindingRegistry.componentsForKeyCode(code, true) : displayChunks;\n\n                displayChunks.forEach((chunk, chunkIndex) => {\n                    if (chunkIndex !== 0) {\n                        collection.push({ value: '+', match: false, key: false });\n                    }\n                    const indexOfTerm = unmatchedTerms.indexOf(matchChunks[chunkIndex].toLocaleLowerCase());\n                    const chunkMatches = indexOfTerm > -1;\n                    if (chunkMatches) { unmatchedTerms.splice(indexOfTerm, 1); }\n                    collection.push({ value: chunk, match: chunkMatches, key: true });\n                });\n                return collection;\n            }, []);\n            item.labels.keybinding = { value: item.labels.keybinding.value, segments };\n            if (unmatchedTerms.length) {\n                return false;\n            }\n            if (exactMatch) {\n                return !segments.some(segment => segment.key && !segment.match);\n            }\n            return true;\n        }\n        item.labels.keybinding = { value: '' };\n        return false;\n    }\n\n    protected formatAndMatchContext(item: KeybindingItem): boolean {\n        item.labels.context = this.toRenderableLabel(item.labels.context.value);\n        return Boolean(item.labels.context.segments);\n    }\n\n    protected formatAndMatchSource(item: KeybindingItem): boolean {\n        item.labels.source = this.toRenderableLabel(item.labels.source.value);\n        return Boolean(item.labels.source.segments);\n    }\n\n    protected toRenderableLabel(label: string, query: string = this.query): RenderableLabel {\n        if (label && query) {\n            const fuzzyMatch = fuzzy.match(query, label, this.fuzzyOptions);\n            if (fuzzyMatch) {\n                return {\n                    value: label,\n                    segments: fuzzyMatch.rendered.split(this.fuzzyOptions.pre).reduce<RenderableStringSegment[]>((collection, segment) => {\n                        const [maybeMatch, notMatch] = segment.split(this.fuzzyOptions.post);\n                        if (notMatch === undefined) {\n                            collection.push({ value: maybeMatch, match: false });\n                        } else {\n                            collection.push({ value: maybeMatch, match: true }, { value: notMatch, match: false });\n                        }\n                        return collection;\n                    }, [])\n                };\n            }\n        }\n        return { value: label };\n    }\n\n    /**\n     * Get the search input if available.\n     * @returns the search input if available.\n     */\n    protected findSearchField(): HTMLInputElement | null {\n        return document.getElementById('search-kb') as HTMLInputElement;\n    }\n\n    /**\n     * Set the focus the search input field if available.\n     */\n    protected focusInputField(): void {\n        const input = document.getElementById('search-kb');\n        if (input) {\n            (input as HTMLInputElement).focus();\n            (input as HTMLInputElement).select();\n        }\n    }\n\n    /**\n     * Render the view.\n     */\n    protected render(): React.ReactNode {\n        return <div id='kb-main-container'>\n            {this.renderSearch()}\n            {(this.items.length > 0) ? this.renderTable() : this.renderMessage()}\n        </div>;\n    }\n\n    /**\n     * Render the search container with the search input.\n     */\n    protected renderSearch(): React.ReactNode {\n        return <div>\n            <div className='search-kb-container'>\n                <input\n                    id='search-kb'\n                    ref={this.onRender}\n                    className={`theia-input${(this.items.length > 0) ? '' : ' no-kb'}`}\n                    type='text'\n                    spellCheck={false}\n                    placeholder={nls.localizeByDefault('Type to search in keybindings')}\n                    autoComplete='off'\n                    onKeyUp={this.searchKeybindings}\n                />\n            </div>\n        </div>;\n    }\n\n    /**\n     * Render the warning message when no search results are found.\n     */\n    protected renderMessage(): React.ReactNode {\n        return <AlertMessage\n            type='WARNING'\n            header='No results found!'\n        />;\n    }\n\n    /**\n     * Render the keybindings table.\n     */\n    protected renderTable(): React.ReactNode {\n        return <div id='kb-table-container'>\n            <div className='kb'>\n                <table>\n                    <thead>\n                        <tr>\n                            <th className='th-action'></th>\n                            <th className='th-label'>{nls.localizeByDefault('Command')}</th>\n                            <th className='th-keybinding'>{nls.localizeByDefault('Keybinding')}</th>\n                            <th className='th-context'>{nls.localizeByDefault('When')}</th>\n                            <th className='th-source'>{nls.localizeByDefault('Source')}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.renderRows()}\n                    </tbody>\n                </table>\n            </div>\n        </div>;\n    }\n\n    /**\n     * Render the table rows.\n     */\n    protected renderRows(): React.ReactNode {\n        return <React.Fragment>\n            {this.items.map((item, index) => item.visible !== false && this.renderRow(item, index))}\n        </React.Fragment>;\n    }\n\n    protected renderRow(item: KeybindingItem, index: number): React.ReactNode {\n        const { command, keybinding } = item;\n        // TODO get rid of array functions in event handlers\n        return <tr className='kb-item-row' key={index} onDoubleClick={event => this.handleItemDoubleClick(item, index, event)}\n            onClick={event => this.handleItemClick(item, index, event)}\n            onContextMenu={event => this.handleItemContextMenu(item, index, event)}>\n            <td className='kb-actions'>\n                {this.renderActions(item)}\n            </td>\n            <td className='kb-label' title={this.getCommandLabel(command)}>\n                {this.renderMatchedData(item.labels.command)}\n            </td>\n            <td title={this.getKeybindingLabel(keybinding)} className='kb-keybinding monaco-keybinding'>\n                {this.renderKeybinding(item)}\n            </td>\n            <td className='kb-context' title={this.getContextLabel(keybinding)}>\n                <code>{this.renderMatchedData(item.labels.context)}</code>\n            </td>\n            <td className='kb-source' title={this.getScopeLabel(keybinding)}>\n                <code className='td-source'>{this.renderMatchedData(item.labels.source)}</code>\n            </td>\n        </tr>;\n    }\n\n    protected handleItemClick(item: KeybindingItem, index: number, event: React.MouseEvent<HTMLElement>): void {\n        event.preventDefault();\n        this.selectItem(item, index, event.currentTarget);\n    }\n\n    protected handleItemDoubleClick(item: KeybindingItem, index: number, event: React.MouseEvent<HTMLElement>): void {\n        event.preventDefault();\n        this.selectItem(item, index, event.currentTarget);\n        this.editKeybinding(item);\n    }\n\n    protected handleItemContextMenu(item: KeybindingItem, index: number, event: React.MouseEvent<HTMLElement>): void {\n        event.preventDefault();\n        this.selectItem(item, index, event.currentTarget);\n        this.contextMenuRenderer.render({\n            menuPath: KeybindingWidget.CONTEXT_MENU,\n            anchor: event.nativeEvent,\n            args: [item, this],\n            context: event.currentTarget\n        });\n    }\n\n    protected selectItem(item: KeybindingItem, index: number, element: HTMLElement): void {\n        if (!element.classList.contains(SELECTED_CLASS)) {\n            const selected = element.parentElement?.getElementsByClassName(SELECTED_CLASS)[0];\n            if (selected) {\n                selected.classList.remove(SELECTED_CLASS);\n            }\n            element.classList.add(SELECTED_CLASS);\n        }\n    }\n\n    /**\n     * Render the actions container with action icons.\n     * @param item the keybinding item for the row.\n     */\n    protected renderActions(item: KeybindingItem): React.ReactNode {\n        return <span className='kb-actions-icons'>{this.renderEdit(item)}{this.renderReset(item)}</span>;\n    }\n\n    /**\n     * Render the edit action used to update a keybinding.\n     * @param item the keybinding item for the row.\n     */\n    protected renderEdit(item: KeybindingItem): React.ReactNode {\n        return <a title='Edit Keybinding' href='#' onClick={e => {\n            e.preventDefault();\n            this.editKeybinding(item);\n        }}><i className={`${codicon('edit', true)} kb-action-item`}></i></a>;\n    }\n\n    /**\n     * Render the reset action to reset the custom keybinding.\n     * Only visible if a keybinding has a `user` scope.\n     * @param item the keybinding item for the row.\n     */\n    protected renderReset(item: KeybindingItem): React.ReactNode {\n        return this.canResetKeybinding(item)\n            ? <a title='Reset Keybinding' href='#' onClick={e => {\n                e.preventDefault();\n                this.resetKeybinding(item);\n            }}><i className={`${codicon('discard', true)} kb-action-item`}></i></a> : '';\n    }\n\n    /**\n     * Render the keybinding.\n     * @param keybinding the keybinding value.\n     */\n    protected renderKeybinding(keybinding: KeybindingItem): React.ReactNode {\n        if (!keybinding.keybinding) {\n            return undefined;\n        }\n\n        if (keybinding.labels.keybinding.segments) {\n            return keybinding.labels.keybinding.segments.map((segment, index) => {\n                if (segment.key) {\n                    return <span key={index} className='monaco-keybinding-key'>\n                        <span className={`${segment.match ? 'fuzzy-match' : ''}`}>{segment.value}</span>\n                    </span>;\n                } else {\n                    return <span key={index} className='monaco-keybinding-separator'>\n                        {segment.value}\n                    </span>;\n                }\n            });\n        }\n\n        console.warn('Unexpectedly encountered a keybinding without segment divisions');\n        return keybinding.labels.keybinding.value;\n    }\n\n    /**\n     * Get the list of keybinding items.\n     *\n     * @returns the list of keybinding items.\n     */\n    protected getItems(): KeybindingItem[] {\n        // Sort the commands alphabetically.\n        const commands = this.commandRegistry.commands;\n        const items: KeybindingItem[] = [];\n        // Build the keybinding items.\n        for (let i = 0; i < commands.length; i++) {\n            const command = commands[i];\n            // Skip internal commands prefixed by `_`.\n            if (command.id.startsWith('_')) {\n                continue;\n            }\n            const keybindings = this.keybindingRegistry.getKeybindingsForCommand(command.id);\n            keybindings.forEach(keybinding => {\n                const item = this.createKeybindingItem(command, keybinding);\n                items.push(item);\n            });\n            // we might not have any keybindings for the command\n            if (keybindings.length < 1) {\n                const item = this.createKeybindingItem(command);\n                items.push(item);\n            }\n        }\n\n        return this.sortKeybindings(items);\n    }\n\n    protected createKeybindingItem(command: Command, keybinding?: ScopedKeybinding): KeybindingItem {\n        const item = {\n            command,\n            keybinding,\n            labels: {\n                id: { value: command.id },\n                command: { value: this.getCommandLabel(command) },\n                keybinding: { value: this.getKeybindingLabel(keybinding) || '' },\n                context: { value: this.getContextLabel(keybinding) || '' },\n                source: { value: this.getScopeLabel(keybinding) || '' }\n            }\n        };\n        this.formatAndMatchCommand(item);\n        this.formatAndMatchKeybinding(item, []);\n        this.formatAndMatchContext(item);\n        this.formatAndMatchSource(item);\n        return item;\n    }\n\n    /**\n     * @returns the input array, sorted.\n     * The sort priority is as follows: items with keybindings before those without, then alphabetical by command.\n     */\n    protected sortKeybindings(bindings: KeybindingItem[]): KeybindingItem[] {\n        return bindings.sort((a, b) => {\n            if (a.keybinding && !b.keybinding) {\n                return -1;\n            }\n            if (b.keybinding && !a.keybinding) {\n                return 1;\n            }\n            return this.compareItem(a.command, b.command);\n        });\n    }\n\n    /**\n     * Get the human-readable label for a given command.\n     * @param command the command.\n     *\n     * @returns a human-readable label for the given command.\n     */\n    protected getCommandLabel(command: Command): string {\n        if (command.label) {\n            // Prefix the command label with the category if it exists, else return the simple label.\n            return command.category ? `${command.category}: ${command.label}` : command.label;\n        }\n        return command.id;\n    }\n\n    protected getKeybindingLabel(keybinding: ScopedKeybinding | undefined): string | undefined {\n        return keybinding && keybinding.keybinding;\n    }\n\n    protected getContextLabel(keybinding: ScopedKeybinding | undefined): string | undefined {\n        return keybinding ? keybinding.context || keybinding.when : undefined;\n    }\n\n    protected getScopeLabel(keybinding: ScopedKeybinding | undefined): string | undefined {\n        let scope = keybinding && keybinding.scope;\n        if (scope !== undefined) {\n            if (scope < KeybindingScope.USER) {\n                scope = KeybindingScope.DEFAULT;\n            }\n            return KeybindingScope[scope].toLocaleLowerCase();\n        }\n        return undefined;\n    }\n\n    /**\n     * Compare two commands.\n     * - Commands with a label should be prioritized and alphabetically sorted.\n     * - Commands without a label (id) should be placed at the bottom.\n     * @param a the first command.\n     * @param b the second command.\n     *\n     * @returns an integer indicating whether `a` comes before, after or is equivalent to `b`.\n     * - returns `-1` if `a` occurs before `b`.\n     * - returns `1` if `a` occurs after `b`.\n     * - returns `0` if they are equivalent.\n     */\n    protected compareItem(a: Command, b: Command): number {\n        const labelA = this.getCommandLabel(a);\n        const labelB = this.getCommandLabel(b);\n        if (labelA === a.id && labelB === b.id) {\n            return labelA.toLowerCase().localeCompare(labelB.toLowerCase());\n        }\n        if (labelA === a.id) {\n            return 1;\n        }\n        if (labelB === b.id) {\n            return -1;\n        }\n        return labelA.toLowerCase().localeCompare(labelB.toLowerCase());\n    }\n\n    /**\n     * Prompt users to update the keybinding for the given command.\n     * @param item the keybinding item.\n     */\n    editKeybinding(item: KeybindingItem): void {\n        const command = item.command.id;\n        const oldKeybinding = item.keybinding;\n        const dialog = new EditKeybindingDialog({\n            title: nls.localize('theia/keymaps/editKeybindingTitle', 'Edit Keybinding for {0}', item.labels.command.value),\n            maxWidth: 400,\n            initialValue: oldKeybinding?.keybinding,\n            validate: newKeybinding => this.validateKeybinding(command, oldKeybinding?.keybinding, newKeybinding),\n        }, this.keymapsService, item, this.canResetKeybinding(item));\n        dialog.open().then(async keybinding => {\n            if (keybinding && keybinding !== oldKeybinding?.keybinding) {\n                await this.keymapsService.setKeybinding({\n                    ...oldKeybinding,\n                    command,\n                    keybinding\n                }, oldKeybinding);\n            }\n        });\n    }\n\n    /**\n     * Prompt users to update when expression for the given keybinding.\n     * @param item the keybinding item\n     */\n    editWhenExpression(item: KeybindingItem): void {\n        const keybinding = item.keybinding;\n        if (!keybinding) {\n            return;\n        }\n        const dialog = new SingleTextInputDialog({\n            title: nls.localize('theia/keymaps/editWhenExpressionTitle', 'Edit When Expression for {0}', item.labels.command.value),\n            maxWidth: 400,\n            initialValue: keybinding.when\n        });\n        dialog.open().then(async when => {\n            if (when === undefined) {\n                return; // cancelled by the user\n            }\n            if (when !== (keybinding.when ?? '')) {\n                if (when === '') {\n                    when = undefined;\n                }\n                await this.keymapsService.setKeybinding({\n                    ...keybinding,\n                    when\n                }, keybinding);\n            }\n        });\n    }\n\n    /**\n     * Prompt users to add a keybinding for the given command.\n     * @param item the keybinding item\n     */\n    addKeybinding(item: KeybindingItem): void {\n        const command = item.command.id;\n        const dialog = new SingleTextInputDialog({\n            title: nls.localize('theia/keymaps/addKeybindingTitle', 'Add Keybinding for {0}', item.labels.command.value),\n            maxWidth: 400,\n            validate: newKeybinding => this.validateKeybinding(command, undefined, newKeybinding),\n        });\n        dialog.open().then(async keybinding => {\n            if (keybinding) {\n                await this.keymapsService.setKeybinding({\n                    ...item.keybinding,\n                    command,\n                    keybinding\n                }, undefined);\n            }\n        });\n    }\n\n    /**\n     * Prompt users for confirmation before resetting.\n     * @param command the command label.\n     *\n     * @returns a Promise which resolves to `true` if a user accepts resetting.\n     */\n    protected async confirmResetKeybinding(item: KeybindingItem): Promise<boolean> {\n        const message = document.createElement('div');\n        const question = document.createElement('p');\n        question.textContent = nls.localize('theia/keymaps/resetKeybindingConfirmation', 'Do you really want to reset this keybinding to its default value?');\n        message.append(question);\n        const info = document.createElement('p');\n        info.textContent = nls.localize('theia/keymaps/resetMultipleKeybindingsWarning', 'If multiple keybindings exist for this command, all of them will be reset.');\n        message.append(info);\n\n        const dialog = new ConfirmDialog({\n            title: nls.localize('theia/keymaps/resetKeybindingTitle', 'Reset keybinding for {0}', this.getCommandLabel(item.command)),\n            msg: message\n        });\n        return !!await dialog.open();\n    }\n\n    /**\n     * Reset the keybinding to its default value.\n     * @param item the keybinding item.\n     */\n    async resetKeybinding(item: KeybindingItem): Promise<void> {\n        const confirmed = await this.confirmResetKeybinding(item);\n        if (confirmed) {\n            this.keymapsService.removeKeybinding(item.command.id);\n        }\n    }\n\n    /**\n     * Whether the keybinding can be reset to its default value.\n     * @param item the keybinding item\n     */\n    canResetKeybinding(item: KeybindingItem): boolean {\n        return item.keybinding?.scope === KeybindingScope.USER || this.keymapsService.hasKeybinding('-' + item.command.id);\n    }\n\n    /**\n     * Validate the provided keybinding value against its previous value.\n     * @param command the command label.\n     * @param oldKeybinding the old keybinding value.\n     * @param keybinding the new keybinding value.\n     *\n     * @returns the end user message to display.\n     */\n    protected validateKeybinding(command: string, oldKeybinding: string | undefined, keybinding: string): string {\n        if (!keybinding) {\n            return nls.localize('theia/keymaps/requiredKeybindingValidation', 'keybinding value is required');\n        }\n        try {\n            const binding = { command, keybinding };\n            KeySequence.parse(keybinding);\n            if (oldKeybinding === keybinding) {\n                return ''; // if old and new keybindings match, quietly reject update\n            }\n            if (this.keybindingRegistry.containsKeybindingInScope(binding)) {\n                return nls.localize('theia/keymaps/keybindingCollidesValidation', 'keybinding currently collides');\n            }\n            return '';\n        } catch (error) {\n            return error;\n        }\n    }\n\n    /**\n     * Build the cell data with highlights if applicable.\n     * @param raw the raw cell value.\n     *\n     * @returns the list of cell data.\n     */\n    protected buildCellData(raw: string): CellData[] {\n        const data: CellData[] = [];\n\n        if (this.query === '') {\n            return data;\n        }\n\n        let following = raw;\n        let leading;\n        let result;\n\n        const regexp = new RegExp(this.regexp);\n\n        while (result = regexp.exec(raw)) {\n            const splitLeftIndex = following.indexOf(result[0]);\n            const splitRightIndex = splitLeftIndex + result[0].length;\n\n            leading = following.slice(0, splitLeftIndex);\n            following = following.slice(splitRightIndex);\n\n            if (leading) {\n                data.push({ value: leading, highlighted: false });\n            }\n            data.push({ value: result[1], highlighted: true });\n        }\n\n        if (following) {\n            data.push({ value: following, highlighted: false });\n        }\n\n        return data;\n    }\n\n    /**\n     * Render the fuzzy representation of a matched result.\n     * @param property one of the `KeybindingItem` properties.\n     */\n    protected renderMatchedData(property: RenderableLabel): React.ReactNode {\n        if (property.segments) {\n            return <>\n                {\n                    property.segments.map((segment, index) => segment.match\n                        ? <span key={index} className='fuzzy-match'>{segment.value}</span>\n                        : <span key={index}>{segment.value}</span>)\n                }\n            </>;\n        }\n        return property.value;\n    }\n\n    storeState(): object | undefined {\n        return { query: this.query };\n    }\n\n    restoreState(oldState: { query: string }): void {\n        if (typeof oldState?.query === 'string') {\n            this.onRenderCallbacks.push({\n                dispose: () => {\n                    const searchField = this.findSearchField();\n                    if (searchField) {\n                        searchField.value = oldState.query;\n                        this.searchKeybindings();\n                    }\n                }\n            });\n        }\n    }\n}\n/**\n * Dialog used to edit keybindings, and reset custom keybindings.\n */\nclass EditKeybindingDialog extends SingleTextInputDialog {\n\n    /**\n     * The keybinding item in question.\n     */\n    protected item: KeybindingItem;\n\n    /**\n     * HTMLButtonElement used to reset custom keybindings.\n     * Custom keybindings have a `User` scope (exist in `keymaps.json`).\n     */\n    protected resetButton: HTMLButtonElement | undefined;\n\n    constructor(\n        @inject(SingleTextInputDialogProps) props: SingleTextInputDialogProps,\n        @inject(KeymapsService) protected readonly keymapsService: KeymapsService,\n        item: KeybindingItem,\n        canReset: boolean\n    ) {\n        super(props);\n        this.item = item;\n        // Add the `Reset` button if the command currently has a custom keybinding.\n        if (canReset) {\n            this.appendResetButton();\n        }\n    }\n\n    protected override onAfterAttach(msg: Message): void {\n        super.onAfterAttach(msg);\n        if (this.resetButton) {\n            this.addResetAction(this.resetButton, 'click');\n        }\n    }\n\n    /**\n     * Add `Reset` action used to reset a custom keybinding, and close the dialog.\n     * @param element the HTML element in question.\n     * @param additionalEventTypes additional event types.\n     */\n    protected addResetAction<K extends keyof HTMLElementEventMap>(element: HTMLElement, ...additionalEventTypes: K[]): void {\n        this.addKeyListener(element, Key.ENTER, () => {\n            this.reset();\n            this.close();\n        }, ...additionalEventTypes);\n    }\n\n    /**\n     * Create the `Reset` button, and append it to the dialog.\n     *\n     * @returns the `Reset` button.\n     */\n    protected appendResetButton(): HTMLButtonElement {\n        // Create the `Reset` button.\n        const resetButtonTitle = nls.localizeByDefault('Reset');\n        this.resetButton = this.createButton(resetButtonTitle);\n        // Add the `Reset` button to the dialog control panel, before the `Accept` button.\n        this.controlPanel.insertBefore(this.resetButton, this.acceptButton!);\n        this.resetButton.title = nls.localizeByDefault('Reset Keybinding');\n        this.resetButton.classList.add('secondary');\n        return this.resetButton;\n    }\n\n    /**\n     * Perform keybinding reset.\n     */\n    protected reset(): void {\n        this.keymapsService.removeKeybinding(this.item.command.id);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport {\n    CommandContribution,\n    Command,\n    CommandRegistry,\n    MenuContribution,\n    MenuModelRegistry\n} from '@theia/core/lib/common';\nimport { AbstractViewContribution, codicon, Widget } from '@theia/core/lib/browser';\nimport { ClipboardService } from '@theia/core/lib/browser/clipboard-service';\nimport { CommonCommands, CommonMenus } from '@theia/core/lib/browser/common-frontend-contribution';\nimport { KeymapsService } from './keymaps-service';\nimport { Keybinding } from '@theia/core/lib/common/keybinding';\nimport { KeybindingRegistry } from '@theia/core/lib/browser/keybinding';\nimport { KeybindingItem, KeybindingWidget } from './keybindings-widget';\nimport { TabBarToolbarContribution, TabBarToolbarRegistry } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { nls } from '@theia/core/lib/common/nls';\n\nexport namespace KeymapsCommands {\n    export const OPEN_KEYMAPS = Command.toDefaultLocalizedCommand({\n        id: 'keymaps:open',\n        category: CommonCommands.PREFERENCES_CATEGORY,\n        label: 'Open Keyboard Shortcuts',\n    });\n    export const OPEN_KEYMAPS_JSON = Command.toDefaultLocalizedCommand({\n        id: 'keymaps:openJson',\n        category: CommonCommands.PREFERENCES_CATEGORY,\n        label: 'Open Keyboard Shortcuts (JSON)',\n    });\n    export const OPEN_KEYMAPS_JSON_TOOLBAR: Command = {\n        id: 'keymaps:openJson.toolbar',\n        iconClass: codicon('json')\n    };\n    export const CLEAR_KEYBINDINGS_SEARCH: Command = {\n        id: 'keymaps.clearSearch',\n        iconClass: codicon('clear-all')\n    };\n    export const COPY_KEYBINDING = Command.toLocalizedCommand({\n        id: 'keymaps:keybinding.copy',\n        category: CommonCommands.PREFERENCES_CATEGORY,\n        label: 'Copy Keybinding'\n    }, 'theia/keymaps/keybinding/copy', CommonCommands.PREFERENCES_CATEGORY_KEY);\n    export const COPY_COMMAND_ID = Command.toLocalizedCommand({\n        id: 'keymaps:keybinding.copyCommandId',\n        category: CommonCommands.PREFERENCES_CATEGORY,\n        label: 'Copy Keybinding Command ID'\n    }, 'theia/keymaps/keybinding/copyCommandId', CommonCommands.PREFERENCES_CATEGORY_KEY);\n    export const COPY_COMMAND_TITLE = Command.toLocalizedCommand({\n        id: 'keymaps:keybinding.copyCommandTitle',\n        category: CommonCommands.PREFERENCES_CATEGORY,\n        label: 'Copy Keybinding Command Title'\n    }, 'theia/keymaps/keybinding/copyCommandTitle', CommonCommands.PREFERENCES_CATEGORY_KEY);\n    export const EDIT_KEYBINDING = Command.toLocalizedCommand({\n        id: 'keymaps:keybinding.edit',\n        category: CommonCommands.PREFERENCES_CATEGORY,\n        label: 'Edit Keybinding...'\n    }, 'theia/keymaps/keybinding/edit', CommonCommands.PREFERENCES_CATEGORY_KEY);\n    export const EDIT_WHEN_EXPRESSION = Command.toLocalizedCommand({\n        id: 'keymaps:keybinding.editWhenExpression',\n        category: CommonCommands.PREFERENCES_CATEGORY,\n        label: 'Edit Keybinding When Expression...'\n    }, 'theia/keymaps/keybinding/editWhenExpression', CommonCommands.PREFERENCES_CATEGORY_KEY);\n    export const ADD_KEYBINDING = Command.toDefaultLocalizedCommand({\n        id: 'keymaps:keybinding.add',\n        category: CommonCommands.PREFERENCES_CATEGORY,\n        label: 'Add Keybinding...'\n    });\n    export const REMOVE_KEYBINDING = Command.toDefaultLocalizedCommand({\n        id: 'keymaps:keybinding.remove',\n        category: CommonCommands.PREFERENCES_CATEGORY,\n        label: 'Remove Keybinding'\n    });\n    export const RESET_KEYBINDING = Command.toDefaultLocalizedCommand({\n        id: 'keymaps:keybinding.reset',\n        category: CommonCommands.PREFERENCES_CATEGORY,\n        label: 'Reset Keybinding'\n    });\n    export const SHOW_SAME = Command.toDefaultLocalizedCommand({\n        id: 'keymaps:keybinding.showSame',\n        category: CommonCommands.PREFERENCES_CATEGORY,\n        label: 'Show Same Keybindings'\n    });\n}\n\n@injectable()\nexport class KeymapsFrontendContribution extends AbstractViewContribution<KeybindingWidget> implements CommandContribution, MenuContribution, TabBarToolbarContribution {\n\n    @inject(KeymapsService)\n    protected readonly keymaps: KeymapsService;\n\n    @inject(ClipboardService)\n    protected readonly clipboard: ClipboardService;\n\n    constructor() {\n        super({\n            widgetId: KeybindingWidget.ID,\n            widgetName: KeybindingWidget.LABEL,\n            defaultWidgetOptions: {\n                area: 'main'\n            },\n        });\n    }\n\n    override registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(KeymapsCommands.OPEN_KEYMAPS, {\n            isEnabled: () => true,\n            execute: () => this.openView({ activate: true })\n        });\n        commands.registerCommand(KeymapsCommands.OPEN_KEYMAPS_JSON, {\n            isEnabled: () => true,\n            execute: () => this.keymaps.open()\n        });\n        commands.registerCommand(KeymapsCommands.OPEN_KEYMAPS_JSON_TOOLBAR, {\n            isEnabled: w => this.withWidget(w, () => true),\n            isVisible: w => this.withWidget(w, () => true),\n            execute: w => this.withWidget(w, widget => this.keymaps.open(widget)),\n        });\n        commands.registerCommand(KeymapsCommands.CLEAR_KEYBINDINGS_SEARCH, {\n            isEnabled: w => this.withWidget(w, widget => widget.hasSearch()),\n            isVisible: w => this.withWidget(w, () => true),\n            execute: w => this.withWidget(w, widget => widget.clearSearch()),\n        });\n        commands.registerCommand(KeymapsCommands.COPY_KEYBINDING, {\n            isEnabled: (...args) => this.withItem(() => true, ...args),\n            isVisible: (...args) => this.withItem(() => true, ...args),\n            execute: (...args) => this.withItem(item => this.clipboard.writeText(\n                JSON.stringify(Keybinding.apiObjectify(KeybindingItem.keybinding(item)), undefined, '  ')\n            ), ...args)\n        });\n        commands.registerCommand(KeymapsCommands.COPY_COMMAND_ID, {\n            isEnabled: (...args) => this.withItem(() => true, ...args),\n            isVisible: (...args) => this.withItem(() => true, ...args),\n            execute: (...args) => this.withItem(item => this.clipboard.writeText(item.command.id), ...args)\n        });\n        commands.registerCommand(KeymapsCommands.COPY_COMMAND_TITLE, {\n            isEnabled: (...args) => this.withItem(item => !!item.command.label, ...args),\n            isVisible: (...args) => this.withItem(() => true, ...args),\n            execute: (...args) => this.withItem(item => this.clipboard.writeText(item.command.label!), ...args)\n        });\n        commands.registerCommand(KeymapsCommands.EDIT_KEYBINDING, {\n            isEnabled: (...args) => this.withWidgetItem(() => true, ...args),\n            isVisible: (...args) => this.withWidgetItem(() => true, ...args),\n            execute: (...args) => this.withWidgetItem((item, widget) => widget.editKeybinding(item), ...args)\n        });\n        commands.registerCommand(KeymapsCommands.EDIT_WHEN_EXPRESSION, {\n            isEnabled: (...args) => this.withWidgetItem(item => !!item.keybinding, ...args),\n            isVisible: (...args) => this.withWidgetItem(() => true, ...args),\n            execute: (...args) => this.withWidgetItem((item, widget) => widget.editWhenExpression(item), ...args)\n        });\n        commands.registerCommand(KeymapsCommands.ADD_KEYBINDING, {\n            isEnabled: (...args) => this.withWidgetItem(item => !!item.keybinding, ...args),\n            isVisible: (...args) => this.withWidgetItem(item => !!item.keybinding, ...args),\n            execute: (...args) => this.withWidgetItem((item, widget) => widget.addKeybinding(item), ...args)\n        });\n        commands.registerCommand(KeymapsCommands.REMOVE_KEYBINDING, {\n            isEnabled: (...args) => this.withItem(item => !!item.keybinding, ...args),\n            isVisible: (...args) => this.withItem(() => true, ...args),\n            execute: (...args) => this.withItem(item => this.keymaps.unsetKeybinding(item.keybinding!), ...args)\n        });\n        commands.registerCommand(KeymapsCommands.RESET_KEYBINDING, {\n            isEnabled: (...args) => this.withWidgetItem((item, widget) => widget.canResetKeybinding(item), ...args),\n            isVisible: (...args) => this.withWidgetItem(() => true, ...args),\n            execute: (...args) => this.withWidgetItem((item, widget) => widget.resetKeybinding(item), ...args)\n        });\n        commands.registerCommand(KeymapsCommands.SHOW_SAME, {\n            isEnabled: (...args) => this.withWidgetItem(item => !!item.keybinding, ...args),\n            isVisible: (...args) => this.withWidgetItem(() => true, ...args),\n            execute: (...args) => this.withWidgetItem((item, widget) => widget.showSameKeybindings(item), ...args)\n        });\n    }\n\n    override registerMenus(menus: MenuModelRegistry): void {\n        menus.registerMenuAction(CommonMenus.FILE_SETTINGS_SUBMENU_OPEN, {\n            commandId: KeymapsCommands.OPEN_KEYMAPS.id,\n            label: nls.localizeByDefault('Keyboard Shortcuts'),\n            order: 'a20'\n        });\n        menus.registerMenuAction(CommonMenus.MANAGE_SETTINGS, {\n            commandId: KeymapsCommands.OPEN_KEYMAPS.id,\n            label: nls.localizeByDefault('Keyboard Shortcuts'),\n            order: 'a30'\n        });\n        menus.registerMenuAction(KeybindingWidget.COPY_MENU, {\n            commandId: KeymapsCommands.COPY_KEYBINDING.id,\n            label: nls.localizeByDefault('Copy'),\n            order: 'a'\n        });\n        menus.registerMenuAction(KeybindingWidget.COPY_MENU, {\n            commandId: KeymapsCommands.COPY_COMMAND_ID.id,\n            label: nls.localizeByDefault('Copy Command ID'),\n            order: 'b'\n        });\n        menus.registerMenuAction(KeybindingWidget.COPY_MENU, {\n            commandId: KeymapsCommands.COPY_COMMAND_TITLE.id,\n            label: nls.localizeByDefault('Copy Command Title'),\n            order: 'c'\n        });\n        menus.registerMenuAction(KeybindingWidget.EDIT_MENU, {\n            commandId: KeymapsCommands.EDIT_KEYBINDING.id,\n            label: nls.localize('theia/keymaps/editKeybinding', 'Edit Keybinding...'),\n            order: 'a'\n        });\n        menus.registerMenuAction(KeybindingWidget.EDIT_MENU, {\n            commandId: KeymapsCommands.EDIT_WHEN_EXPRESSION.id,\n            label: nls.localize('theia/keymaps/editWhenExpression', 'Edit When Expression...'),\n            order: 'b'\n        });\n        menus.registerMenuAction(KeybindingWidget.ADD_MENU, {\n            commandId: KeymapsCommands.ADD_KEYBINDING.id,\n            label: nls.localizeByDefault('Add Keybinding...'),\n            order: 'a'\n        });\n        menus.registerMenuAction(KeybindingWidget.REMOVE_MENU, {\n            commandId: KeymapsCommands.REMOVE_KEYBINDING.id,\n            label: nls.localizeByDefault('Remove Keybinding'),\n            order: 'a'\n        });\n        menus.registerMenuAction(KeybindingWidget.REMOVE_MENU, {\n            commandId: KeymapsCommands.RESET_KEYBINDING.id,\n            label: nls.localizeByDefault('Reset Keybinding'),\n            order: 'b'\n        });\n        menus.registerMenuAction(KeybindingWidget.SHOW_MENU, {\n            commandId: KeymapsCommands.SHOW_SAME.id,\n            label: nls.localizeByDefault('Show Same Keybindings'),\n            order: 'a'\n        });\n    }\n\n    override registerKeybindings(keybindings: KeybindingRegistry): void {\n        keybindings.registerKeybinding({\n            command: KeymapsCommands.OPEN_KEYMAPS.id,\n            keybinding: 'ctrl+alt+,'\n        });\n    }\n\n    async registerToolbarItems(toolbar: TabBarToolbarRegistry): Promise<void> {\n        const widget = await this.widget;\n        const onDidChange = widget.onDidUpdate;\n        toolbar.registerItem({\n            id: KeymapsCommands.OPEN_KEYMAPS_JSON_TOOLBAR.id,\n            command: KeymapsCommands.OPEN_KEYMAPS_JSON_TOOLBAR.id,\n            tooltip: nls.localizeByDefault('Open Keyboard Shortcuts (JSON)'),\n            priority: 0,\n        });\n        toolbar.registerItem({\n            id: KeymapsCommands.CLEAR_KEYBINDINGS_SEARCH.id,\n            command: KeymapsCommands.CLEAR_KEYBINDINGS_SEARCH.id,\n            tooltip: nls.localizeByDefault('Clear Keybindings Search Input'),\n            priority: 1,\n            onDidChange,\n        });\n    }\n\n    /**\n     * Determine if the current widget is the keybindings widget.\n     */\n    protected withWidget<T>(widget: Widget | undefined = this.tryGetWidget(), fn: (widget: KeybindingWidget) => T): T | false {\n        if (widget instanceof KeybindingWidget && widget.id === KeybindingWidget.ID) {\n            return fn(widget);\n        }\n        return false;\n    }\n\n    protected withItem<T>(fn: (item: KeybindingItem, ...rest: unknown[]) => T, ...args: unknown[]): T | false {\n        const [item] = args;\n        if (KeybindingItem.is(item)) {\n            return fn(item, args.slice(1));\n        }\n        return false;\n    }\n\n    protected withWidgetItem<T>(fn: (item: KeybindingItem, widget: KeybindingWidget, ...rest: unknown[]) => T, ...args: unknown[]): T | false {\n        const [item, widget] = args;\n        if (widget instanceof KeybindingWidget && widget.id === KeybindingWidget.ID && KeybindingItem.is(item)) {\n            return fn(item, widget, args.slice(2));\n        }\n        return false;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport './keymaps-monaco-contribution';\nimport '../../src/browser/style/index.css';\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { KeymapsService } from './keymaps-service';\nimport { KeymapsFrontendContribution } from './keymaps-frontend-contribution';\nimport { CommandContribution, MenuContribution } from '@theia/core/lib/common';\nimport { KeybindingContribution } from '@theia/core/lib/browser/keybinding';\nimport { TabBarToolbarContribution } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { noopWidgetStatusBarContribution, WidgetFactory, WidgetStatusBarContribution } from '@theia/core/lib/browser';\nimport { KeybindingWidget } from './keybindings-widget';\nimport { KeybindingSchemaUpdater } from './keybinding-schema-updater';\nimport { JsonSchemaContribution } from '@theia/core/lib/browser/json-schema-store';\n\nexport default new ContainerModule(bind => {\n    bind(KeymapsService).toSelf().inSingletonScope();\n    bind(KeymapsFrontendContribution).toSelf().inSingletonScope();\n    bind(CommandContribution).toService(KeymapsFrontendContribution);\n    bind(KeybindingContribution).toService(KeymapsFrontendContribution);\n    bind(MenuContribution).toService(KeymapsFrontendContribution);\n    bind(KeybindingWidget).toSelf();\n    bind(TabBarToolbarContribution).toService(KeymapsFrontendContribution);\n    bind(WidgetFactory).toDynamicValue(context => ({\n        id: KeybindingWidget.ID,\n        createWidget: () => context.container.get<KeybindingWidget>(KeybindingWidget),\n    })).inSingletonScope();\n    bind(KeybindingSchemaUpdater).toSelf().inSingletonScope();\n    bind(JsonSchemaContribution).toService(KeybindingSchemaUpdater);\n    bind(WidgetStatusBarContribution).toConstantValue(noopWidgetStatusBarContribution(KeybindingWidget));\n});\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport * as monaco from '@theia/monaco-editor-core';\n\nmonaco.languages.register({\n    id: 'jsonc',\n    'aliases': [\n        'JSON with Comments'\n    ],\n    'filenames': [\n        'keymaps.json'\n    ]\n});\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { OpenerService, open, WidgetOpenerOptions, Widget } from '@theia/core/lib/browser';\nimport { KeybindingRegistry, KeybindingScope, ScopedKeybinding } from '@theia/core/lib/browser/keybinding';\nimport { Keybinding, RawKeybinding } from '@theia/core/lib/common/keybinding';\nimport { UserStorageUri } from '@theia/userstorage/lib/browser';\nimport * as jsoncparser from 'jsonc-parser';\nimport { Emitter } from '@theia/core/lib/common/event';\nimport { MonacoTextModelService } from '@theia/monaco/lib/browser/monaco-text-model-service';\nimport { MonacoEditorModel } from '@theia/monaco/lib/browser/monaco-editor-model';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport URI from '@theia/core/lib/common/uri';\nimport { MonacoWorkspace } from '@theia/monaco/lib/browser/monaco-workspace';\nimport { MessageService } from '@theia/core/lib/common/message-service';\nimport { MonacoJSONCEditor } from '@theia/preferences/lib/browser/monaco-jsonc-editor';\n\n@injectable()\nexport class KeymapsService {\n\n    @inject(MonacoWorkspace)\n    protected readonly workspace: MonacoWorkspace;\n\n    @inject(MonacoTextModelService)\n    protected readonly textModelService: MonacoTextModelService;\n\n    @inject(KeybindingRegistry)\n    protected readonly keybindingRegistry: KeybindingRegistry;\n\n    @inject(OpenerService)\n    protected readonly opener: OpenerService;\n\n    @inject(MessageService)\n    protected readonly messageService: MessageService;\n\n    @inject(MonacoJSONCEditor)\n    protected readonly jsoncEditor: MonacoJSONCEditor;\n\n    protected readonly changeKeymapEmitter = new Emitter<void>();\n    readonly onDidChangeKeymaps = this.changeKeymapEmitter.event;\n\n    protected model: MonacoEditorModel | undefined;\n    protected readonly deferredModel = new Deferred<MonacoEditorModel>();\n\n    /**\n     * Initialize the keybinding service.\n     */\n    @postConstruct()\n    protected init(): void {\n        this.doInit();\n    }\n\n    protected async doInit(): Promise<void> {\n        const reference = await this.textModelService.createModelReference(UserStorageUri.resolve('keymaps.json'));\n        this.model = reference.object;\n        this.deferredModel.resolve(this.model);\n\n        this.reconcile();\n        this.model.onDidChangeContent(() => this.reconcile());\n        this.model.onDirtyChanged(() => this.reconcile());\n        this.model.onDidChangeValid(() => this.reconcile());\n        this.keybindingRegistry.onKeybindingsChanged(() => this.changeKeymapEmitter.fire(undefined));\n    }\n\n    /**\n     * Reconcile all the keybindings, registering them to the registry.\n     */\n    protected reconcile(): void {\n        const model = this.model;\n        if (!model || model.dirty) {\n            return;\n        }\n        try {\n            const keybindings: Keybinding[] = [];\n            if (model.valid) {\n                const content = model.getText();\n                const json = jsoncparser.parse(content, undefined, { disallowComments: false });\n                if (Array.isArray(json)) {\n                    for (const value of json) {\n                        if (Keybinding.is(value)) {\n                            keybindings.push(value);\n                        } else if (RawKeybinding.is(value)) {\n                            keybindings.push(Keybinding.apiObjectify(value));\n                        }\n                    }\n                }\n            }\n            this.keybindingRegistry.setKeymap(KeybindingScope.USER, keybindings);\n        } catch (e) {\n            console.error(`Failed to load keymaps from '${model.uri}'.`, e);\n        }\n    }\n\n    /**\n     * Open the keybindings widget.\n     * @param ref the optional reference for opening the widget.\n     */\n    async open(ref?: Widget): Promise<void> {\n        const model = await this.deferredModel.promise;\n        const options: WidgetOpenerOptions = {\n            widgetOptions: ref ? { area: 'main', mode: 'split-right', ref } : { area: 'main' },\n            mode: 'activate'\n        };\n        if (!model.valid) {\n            await model.save();\n        }\n        await open(this.opener, new URI(model.uri), options);\n    }\n\n    /**\n     * Set the keybinding in the JSON.\n     * @param newKeybinding the new JSON keybinding\n     * @param oldKeybinding the old JSON keybinding\n     */\n    async setKeybinding(newKeybinding: Keybinding, oldKeybinding: ScopedKeybinding | undefined): Promise<void> {\n        return this.updateKeymap(() => {\n            const keybindings: Keybinding[] = [...this.keybindingRegistry.getKeybindingsByScope(KeybindingScope.USER)];\n            if (!oldKeybinding) {\n                Keybinding.addKeybinding(keybindings, newKeybinding);\n                return keybindings;\n            } else if (oldKeybinding.scope === KeybindingScope.DEFAULT) {\n                Keybinding.addKeybinding(keybindings, newKeybinding);\n                const disabledBinding = {\n                    ...oldKeybinding,\n                    command: '-' + oldKeybinding.command\n                };\n                Keybinding.addKeybinding(keybindings, disabledBinding);\n                return keybindings;\n            } else if (Keybinding.replaceKeybinding(keybindings, oldKeybinding, newKeybinding)) {\n                return keybindings;\n            }\n        });\n    }\n\n    /**\n     * Unset the given keybinding in the JSON.\n     * If the given keybinding has a default scope, it will be disabled in the JSON.\n     * Otherwise, it will be removed from the JSON.\n     * @param keybinding the keybinding to unset\n     */\n    unsetKeybinding(keybinding: ScopedKeybinding): Promise<void> {\n        return this.updateKeymap(() => {\n            const keybindings = this.keybindingRegistry.getKeybindingsByScope(KeybindingScope.USER);\n            if (keybinding.scope === KeybindingScope.DEFAULT) {\n                const result: Keybinding[] = [...keybindings];\n                const disabledBinding = {\n                    ...keybinding,\n                    command: '-' + keybinding.command\n                };\n                Keybinding.addKeybinding(result, disabledBinding);\n                return result;\n            } else {\n                const filtered = keybindings.filter(a => !Keybinding.equals(a, keybinding, false, true));\n                if (filtered.length !== keybindings.length) {\n                    return filtered;\n                }\n            }\n        });\n    }\n\n    /**\n     * Whether there is a keybinding with the given command id in the JSON.\n     * @param commandId the keybinding command id\n     */\n    hasKeybinding(commandId: string): boolean {\n        const keybindings = this.keybindingRegistry.getKeybindingsByScope(KeybindingScope.USER);\n        return keybindings.some(a => a.command === commandId);\n    }\n\n    /**\n     * Remove the keybindings with the given command id from the JSON.\n     * This includes disabled keybindings.\n     * @param commandId the keybinding command id.\n     */\n    removeKeybinding(commandId: string): Promise<void> {\n        return this.updateKeymap(() => {\n            const keybindings = this.keybindingRegistry.getKeybindingsByScope(KeybindingScope.USER);\n            const removedCommand = '-' + commandId;\n            const filtered = keybindings.filter(a => a.command !== commandId && a.command !== removedCommand);\n            if (filtered.length !== keybindings.length) {\n                return filtered;\n            }\n        });\n    }\n\n    protected async updateKeymap(op: () => Keybinding[] | void): Promise<void> {\n        const model = await this.deferredModel.promise;\n        try {\n            const keybindings = op();\n            if (keybindings && this.model) {\n                await this.jsoncEditor.setValue(this.model, [], keybindings.map(binding => Keybinding.apiObjectify(binding)));\n            }\n        } catch (e) {\n            const message = `Failed to update a keymap in '${model.uri}'.`;\n            this.messageService.error(`${message} Please check if it is corrupted.`);\n            console.error(`${message}`, e);\n        }\n    }\n\n}\n","import api from \"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../css-loader/dist/cjs.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","// *****************************************************************************\n// Copyright (C) 2021 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as jsoncparser from 'jsonc-parser';\nimport { MonacoEditorModel } from '@theia/monaco/lib/browser/monaco-editor-model';\nimport { MonacoWorkspace } from '@theia/monaco/lib/browser/monaco-workspace';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport * as monaco from '@theia/monaco-editor-core';\n\n@injectable()\nexport class MonacoJSONCEditor {\n    @inject(MonacoWorkspace) protected readonly workspace: MonacoWorkspace;\n\n    async setValue(model: MonacoEditorModel, path: jsoncparser.JSONPath, value: unknown, shouldSave = true): Promise<void> {\n        const edits = this.getEditOperations(model, path, value);\n        if (edits.length > 0) {\n            await this.workspace.applyBackgroundEdit(model, edits, shouldSave);\n        }\n    }\n\n    getEditOperations(model: MonacoEditorModel, path: jsoncparser.JSONPath, value: unknown): monaco.editor.IIdentifiedSingleEditOperation[] {\n        const textModel = model.textEditorModel;\n        const content = model.getText().trim();\n        // Everything is already undefined - no need for changes.\n        if (!content && value === undefined) {\n            return [];\n        }\n        // Delete the entire document.\n        if (!path.length && value === undefined) {\n            return [{\n                range: textModel.getFullModelRange(),\n                text: null, // eslint-disable-line no-null/no-null\n                forceMoveMarkers: false\n            }];\n        }\n        const { insertSpaces, tabSize, defaultEOL } = textModel.getOptions();\n        const jsonCOptions = {\n            formattingOptions: {\n                insertSpaces,\n                tabSize,\n                eol: defaultEOL === monaco.editor.DefaultEndOfLine.LF ? '\\n' : '\\r\\n'\n            }\n        };\n        return jsoncparser.modify(content, path, value, jsonCOptions).map(edit => {\n            const start = textModel.getPositionAt(edit.offset);\n            const end = textModel.getPositionAt(edit.offset + edit.length);\n            return {\n                range: monaco.Range.fromPositions(start, end),\n                text: edit.content || null, // eslint-disable-line no-null/no-null\n                forceMoveMarkers: false\n            };\n        });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport * from './user-storage-uri';\nexport * from './user-storage-frontend-module';\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { EnvVariablesServer } from '@theia/core/lib/common/env-variables';\nimport { FileSystemProvider } from '@theia/filesystem/lib/common/files';\nimport { FileService, FileServiceContribution } from '@theia/filesystem/lib/browser/file-service';\nimport { DelegatingFileSystemProvider } from '@theia/filesystem/lib/common/delegating-file-system-provider';\nimport { UserStorageUri } from './user-storage-uri';\nimport { MaybePromise } from '@theia/core';\n\n@injectable()\nexport class UserStorageContribution implements FileServiceContribution {\n\n    @inject(EnvVariablesServer)\n    protected readonly environments: EnvVariablesServer;\n\n    registerFileSystemProviders(service: FileService): void {\n        service.onWillActivateFileSystemProvider(event => {\n            if (event.scheme === UserStorageUri.scheme) {\n                event.waitUntil((async () => {\n                    const provider = await this.createProvider(service);\n                    service.registerProvider(UserStorageUri.scheme, provider);\n                })());\n            }\n        });\n    }\n\n    protected getDelegate(service: FileService): MaybePromise<FileSystemProvider> {\n        return service.activateProvider('file');\n    }\n\n    protected async getCongigDirUri(): Promise<URI> {\n        return new URI(await this.environments.getConfigDirUri());\n    }\n\n    protected async createProvider(service: FileService): Promise<FileSystemProvider> {\n        const delegate = await this.getDelegate(service);\n        const configDirUri = await this.getCongigDirUri();\n        return new DelegatingFileSystemProvider(delegate, {\n            uriConverter: {\n                to: resource => {\n                    const relativePath = UserStorageUri.relative(resource);\n                    if (relativePath) {\n                        return configDirUri.resolve(relativePath).normalizePath();\n                    }\n                    return undefined;\n                },\n                from: resource => {\n                    const relativePath = configDirUri.relative(resource);\n                    if (relativePath) {\n                        return UserStorageUri.resolve(relativePath);\n                    }\n                    return undefined;\n                }\n            }\n        }, new DisposableCollection(\n            delegate.watch(configDirUri, { excludes: [], recursive: true })\n        ));\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { FileServiceContribution } from '@theia/filesystem/lib/browser/file-service';\nimport { UserStorageContribution } from './user-storage-contribution';\n\nexport default new ContainerModule(bind => {\n    bind(UserStorageContribution).toSelf().inSingletonScope();\n    bind(FileServiceContribution).toService(UserStorageContribution);\n});\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport URI from '@theia/core/lib/common/uri';\n\nexport const UserStorageUri = new URI('user-storage:/user');\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\n#kb-main-container {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n\n#kb-table-container {\n  flex: 1;\n  overflow: auto;\n  user-select: none;\n}\n\n.fuzzy-match {\n  font-weight: 600;\n  color: var(--theia-list-highlightForeground);\n}\n\n.kb-actions {\n  text-align: center;\n  vertical-align: middle;\n}\n\n.kb-action-item {\n  visibility: hidden;\n}\n\n.kb table {\n  border-spacing: 0;\n  border-collapse: separate;\n  background-color: var(--theia-editor-background);\n  width: 100%;\n  table-layout: fixed;\n}\n\n.kb table tr {\n  min-height: var(--theia-icon-size);\n}\n\n.th-action,\n.th-keybinding,\n.kb-actions,\n.kb-keybinding {\n  min-height: 18px;\n  overflow: hidden;\n  vertical-align: middle;\n  white-space: nowrap;\n}\n\n.th-action,\n.kb-actions {\n  padding: 2px 0px 5px 0px;\n}\n\n.th-keybinding,\n.kb-keybinding {\n  padding: 2px 10px 5px 10px;\n}\n\n.th-label,\n.th-source,\n.th-context,\n.th-keybinding,\n.kb-label,\n.kb-source,\n.kb-context {\n  padding: 2px 10px 5px 10px;\n  min-height: 18px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  vertical-align: middle;\n  white-space: nowrap;\n}\n\n.kb table th {\n  font-size: var(--theia-ui-font-size1);\n}\n\n.kb table td code {\n  font-size: 90%;\n}\n\n.td-source {\n  text-transform: lowercase;\n}\n\n.kb table tr:nth-child(odd) {\n  background-color: rgba(130, 130, 130, 0.04);\n}\n\n.kb table tbody tr:hover {\n  background-color: var(--theia-list-hoverBackground);\n  color: var(--theia-list-hoverForeground);\n}\n\n.kb table tbody tr.theia-mod-selected {\n  background-color: var(--theia-list-inactiveSelectionBackground);\n  color: var(--theia-list-inactiveSelectionForeground);\n}\n\n.kb table tbody tr:hover .kb-action-item,\n.kb table tbody tr.theia-mod-selected .kb-action-item {\n  visibility: visible;\n  color: var(--theia-icon-foreground);\n  text-decoration: none;\n}\n\n.kb table th {\n  word-break: keep-all;\n  padding-bottom: 5px;\n  padding-top: 5px;\n  text-align: left;\n  vertical-align: middle;\n  position: sticky;\n  top: 0;\n  background-color: var(--theia-editorWidget-background);\n  text-transform: capitalize;\n}\n\n.kb table .th-action {\n  width: 4%;\n}\n\n.kb table .th-label {\n  width: 25%;\n}\n\n.kb table .th-keybinding {\n  width: 20%;\n}\n\n.kb table .th-source {\n  width: 10%;\n}\n\n.kb table .th-context {\n  width: 25%;\n}\n\n.no-kb {\n  border: 1px solid var(--theia-editorWarning-foreground);\n}\n\n#search-kb {\n  height: 25px;\n  flex: 1;\n}\n\n.vs #search-kb {\n  border: 1px solid #ddd;\n}\n\n.search-kb-container {\n  padding: 10px;\n  display: flex;\n}\n\n.kb-item-row td a,\n.kb-item-row td a:active,\n.kb-item-row td a:focus {\n  outline: 0;\n  border: none;\n}\n\n.kb-actions-icons {\n  display: block;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@theia/keymaps/src/browser/style/index.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;EACE,aAAa;EACb,sBAAsB;EACtB,YAAY;AACd;;AAEA;EACE,OAAO;EACP,cAAc;EACd,iBAAiB;AACnB;;AAEA;EACE,gBAAgB;EAChB,4CAA4C;AAC9C;;AAEA;EACE,kBAAkB;EAClB,sBAAsB;AACxB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,iBAAiB;EACjB,yBAAyB;EACzB,gDAAgD;EAChD,WAAW;EACX,mBAAmB;AACrB;;AAEA;EACE,kCAAkC;AACpC;;AAEA;;;;EAIE,gBAAgB;EAChB,gBAAgB;EAChB,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;;EAEE,wBAAwB;AAC1B;;AAEA;;EAEE,0BAA0B;AAC5B;;AAEA;;;;;;;EAOE,0BAA0B;EAC1B,gBAAgB;EAChB,gBAAgB;EAChB,uBAAuB;EACvB,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,qCAAqC;AACvC;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,2CAA2C;AAC7C;;AAEA;EACE,mDAAmD;EACnD,wCAAwC;AAC1C;;AAEA;EACE,+DAA+D;EAC/D,oDAAoD;AACtD;;AAEA;;EAEE,mBAAmB;EACnB,mCAAmC;EACnC,qBAAqB;AACvB;;AAEA;EACE,oBAAoB;EACpB,mBAAmB;EACnB,gBAAgB;EAChB,gBAAgB;EAChB,sBAAsB;EACtB,gBAAgB;EAChB,MAAM;EACN,sDAAsD;EACtD,0BAA0B;AAC5B;;AAEA;EACE,SAAS;AACX;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,uDAAuD;AACzD;;AAEA;EACE,YAAY;EACZ,OAAO;AACT;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,aAAa;AACf;;AAEA;;;EAGE,UAAU;EACV,YAAY;AACd;;AAEA;EACE,cAAc;AAChB\",\"sourcesContent\":[\"/********************************************************************************\\n * Copyright (C) 2018 Ericsson and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n#kb-main-container {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%;\\n}\\n\\n#kb-table-container {\\n  flex: 1;\\n  overflow: auto;\\n  user-select: none;\\n}\\n\\n.fuzzy-match {\\n  font-weight: 600;\\n  color: var(--theia-list-highlightForeground);\\n}\\n\\n.kb-actions {\\n  text-align: center;\\n  vertical-align: middle;\\n}\\n\\n.kb-action-item {\\n  visibility: hidden;\\n}\\n\\n.kb table {\\n  border-spacing: 0;\\n  border-collapse: separate;\\n  background-color: var(--theia-editor-background);\\n  width: 100%;\\n  table-layout: fixed;\\n}\\n\\n.kb table tr {\\n  min-height: var(--theia-icon-size);\\n}\\n\\n.th-action,\\n.th-keybinding,\\n.kb-actions,\\n.kb-keybinding {\\n  min-height: 18px;\\n  overflow: hidden;\\n  vertical-align: middle;\\n  white-space: nowrap;\\n}\\n\\n.th-action,\\n.kb-actions {\\n  padding: 2px 0px 5px 0px;\\n}\\n\\n.th-keybinding,\\n.kb-keybinding {\\n  padding: 2px 10px 5px 10px;\\n}\\n\\n.th-label,\\n.th-source,\\n.th-context,\\n.th-keybinding,\\n.kb-label,\\n.kb-source,\\n.kb-context {\\n  padding: 2px 10px 5px 10px;\\n  min-height: 18px;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  vertical-align: middle;\\n  white-space: nowrap;\\n}\\n\\n.kb table th {\\n  font-size: var(--theia-ui-font-size1);\\n}\\n\\n.kb table td code {\\n  font-size: 90%;\\n}\\n\\n.td-source {\\n  text-transform: lowercase;\\n}\\n\\n.kb table tr:nth-child(odd) {\\n  background-color: rgba(130, 130, 130, 0.04);\\n}\\n\\n.kb table tbody tr:hover {\\n  background-color: var(--theia-list-hoverBackground);\\n  color: var(--theia-list-hoverForeground);\\n}\\n\\n.kb table tbody tr.theia-mod-selected {\\n  background-color: var(--theia-list-inactiveSelectionBackground);\\n  color: var(--theia-list-inactiveSelectionForeground);\\n}\\n\\n.kb table tbody tr:hover .kb-action-item,\\n.kb table tbody tr.theia-mod-selected .kb-action-item {\\n  visibility: visible;\\n  color: var(--theia-icon-foreground);\\n  text-decoration: none;\\n}\\n\\n.kb table th {\\n  word-break: keep-all;\\n  padding-bottom: 5px;\\n  padding-top: 5px;\\n  text-align: left;\\n  vertical-align: middle;\\n  position: sticky;\\n  top: 0;\\n  background-color: var(--theia-editorWidget-background);\\n  text-transform: capitalize;\\n}\\n\\n.kb table .th-action {\\n  width: 4%;\\n}\\n\\n.kb table .th-label {\\n  width: 25%;\\n}\\n\\n.kb table .th-keybinding {\\n  width: 20%;\\n}\\n\\n.kb table .th-source {\\n  width: 10%;\\n}\\n\\n.kb table .th-context {\\n  width: 25%;\\n}\\n\\n.no-kb {\\n  border: 1px solid var(--theia-editorWarning-foreground);\\n}\\n\\n#search-kb {\\n  height: 25px;\\n  flex: 1;\\n}\\n\\n.vs #search-kb {\\n  border: 1px solid #ddd;\\n}\\n\\n.search-kb-container {\\n  padding: 10px;\\n  display: flex;\\n}\\n\\n.kb-item-row td a,\\n.kb-item-row td a:active,\\n.kb-item-row td a:focus {\\n  outline: 0;\\n  border: none;\\n}\\n\\n.kb-actions-icons {\\n  display: block;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":[],"sourceRoot":""}