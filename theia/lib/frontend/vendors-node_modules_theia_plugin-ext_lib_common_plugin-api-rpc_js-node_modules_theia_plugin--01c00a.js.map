{"version":3,"file":"vendors-node_modules_theia_plugin-ext_lib_common_plugin-api-rpc_js-node_modules_theia_plugin--01c00a.js","mappings":"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","sources":["webpack:///./node_modules/@theia/plugin-ext/src/common/errors.ts?","webpack:///./node_modules/@theia/plugin-ext/src/common/paths-util.ts?","webpack:///./node_modules/@theia/plugin-ext/src/common/plugin-api-rpc-model.ts?","webpack:///./node_modules/@theia/plugin-ext/src/common/plugin-api-rpc.ts?","webpack:///./node_modules/@theia/plugin-ext/src/common/rpc-protocol.ts?","webpack:///./node_modules/@theia/plugin-ext/src/common/types.ts?","webpack:///./node_modules/@theia/plugin-ext/src/main/browser/hierarchy/hierarchy-types-converters.ts?","webpack:///./node_modules/@theia/plugin-ext/src/plugin/types-impl.ts?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { isObject } from '@theia/core/lib/common/types';\n\nexport function illegalArgument(message?: string): Error {\n    if (message) {\n        return new Error(`Illegal argument: ${message}`);\n    } else {\n        return new Error('Illegal argument');\n    }\n}\n\nexport function readonly(name?: string): Error {\n    if (name) {\n        return new Error(`readonly property '${name} cannot be changed'`);\n    } else {\n        return new Error('readonly property cannot be changed');\n    }\n}\n\nexport function disposed(what: string): Error {\n    const result = new Error(`${what} has been disposed`);\n    result.name = 'DISPOSED';\n    return result;\n}\n\ninterface Errno {\n    readonly code: string;\n    readonly errno: number\n}\nconst ENOENT = 'ENOENT' as const;\n\ntype ErrnoException = Error & Errno;\nfunction isErrnoException(arg: unknown): arg is ErrnoException {\n    return arg instanceof Error\n        && isObject<Partial<Errno>>(arg)\n        && typeof arg.code === 'string'\n        && typeof arg.errno === 'number';\n}\n\n/**\n * _(No such file or directory)_: Commonly raised by `fs` operations to indicate that a component of the specified pathname does not exist — no entity (file or directory) could be\n * found by the given path.\n */\nexport function isENOENT(\n    arg: unknown\n): arg is ErrnoException & Readonly<{ code: typeof ENOENT }> {\n    return isErrnoException(arg) && arg.code === ENOENT;\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n// file copied from https://github.com/wjordan/browser-path/blob/master/src/node_path.ts\n// Original license:\n/*\n====\n\nCopyright (c) 2015 John Vilk and other contributors.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n====\n*/\n\nimport { sep } from '@theia/core/lib/common/paths';\n\nconst replaceRegex = new RegExp('//+', 'g');\n\nexport function resolve(...paths: string[]): string {\n    let processed: string[] = [];\n    for (const p of paths) {\n        if (typeof p !== 'string') {\n            throw new TypeError('Invalid argument type to path.join: ' + (typeof p));\n        } else if (p !== '') {\n            if (p.charAt(0) === sep) {\n                processed = [];\n            }\n            processed.push(p);\n        }\n    }\n\n    const resolved = normalize(processed.join(sep));\n    if (resolved.length > 1 && resolved.charAt(resolved.length - 1) === sep) {\n        return resolved.substring(0, resolved.length - 1);\n    }\n\n    return resolved;\n}\n\nexport function relative(from: string, to: string): string {\n    let i: number;\n\n    from = resolve(from);\n    to = resolve(to);\n    const fromSegments = from.split(sep);\n    const toSegments = to.split(sep);\n\n    toSegments.shift();\n    fromSegments.shift();\n\n    let upCount = 0;\n    let downSegments: string[] = [];\n\n    for (i = 0; i < fromSegments.length; i++) {\n        const seg = fromSegments[i];\n        if (seg === toSegments[i]) {\n            continue;\n        }\n\n        upCount = fromSegments.length - i;\n        break;\n    }\n\n    downSegments = toSegments.slice(i);\n\n    if (fromSegments.length === 1 && fromSegments[0] === '') {\n        upCount = 0;\n    }\n\n    if (upCount > fromSegments.length) {\n        upCount = fromSegments.length;\n    }\n\n    let rv = '';\n    for (i = 0; i < upCount; i++) {\n        rv += '../';\n    }\n    rv += downSegments.join(sep);\n\n    if (rv.length > 1 && rv.charAt(rv.length - 1) === sep) {\n        rv = rv.substring(0, rv.length - 1);\n    }\n    return rv;\n}\nexport function normalize(p: string): string {\n\n    if (p === '') {\n        p = '.';\n    }\n\n    const absolute = p.charAt(0) === sep;\n\n    p = removeDuplicateSeparators(p);\n\n    const components = p.split(sep);\n    const goodComponents: string[] = [];\n    for (const c of components) {\n        if (c === '.') {\n            continue;\n        } else if (c === '..' && (absolute || (!absolute && goodComponents.length > 0 && goodComponents[0] !== '..'))) {\n            goodComponents.pop();\n        } else {\n            goodComponents.push(c);\n        }\n    }\n\n    if (!absolute && goodComponents.length < 2) {\n        switch (goodComponents.length) {\n            case 1:\n                if (goodComponents[0] === '') {\n                    goodComponents.unshift('.');\n                }\n                break;\n            default:\n                goodComponents.push('.');\n        }\n    }\n    p = goodComponents.join(sep);\n    if (absolute && p.charAt(0) !== sep) {\n        p = sep + p;\n    }\n    return p;\n}\n\nfunction removeDuplicateSeparators(p: string): string {\n    p = p.replace(replaceRegex, sep);\n    return p;\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as theia from '@theia/plugin';\nimport type * as monaco from '@theia/monaco-editor-core';\nimport { MarkdownString as MarkdownStringDTO } from '@theia/core/lib/common/markdown-rendering';\nimport { UriComponents } from './uri-components';\nimport { CompletionItemTag, DocumentPasteEditKind, SnippetString } from '../plugin/types-impl';\nimport { Event as TheiaEvent } from '@theia/core/lib/common/event';\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport { SerializedRegExp } from './plugin-api-rpc';\n\n// Should contains internal Plugin API types\n\n/**\n * Represents options to configure the behavior of showing a document in an editor.\n */\nexport interface TextDocumentShowOptions {\n    /**\n     * An optional selection to apply for the document in the editor.\n     */\n    selection?: Range;\n\n    /**\n     * An optional flag that when `true` will stop the editor from taking focus.\n     */\n    preserveFocus?: boolean;\n\n    /**\n     * An optional flag that controls if an editor-tab will be replaced\n     * with the next editor or if it will be kept.\n     */\n    preview?: boolean;\n\n    /**\n     * Denotes a location of an editor in the window. Editors can be arranged in a grid\n     * and each column represents one editor location in that grid by counting the editors\n     * in order of their appearance.\n     */\n    viewColumn?: theia.ViewColumn;\n}\n\nexport interface Range {\n    /**\n     * Line number on which the range starts (starts at 1).\n     */\n    readonly startLineNumber: number;\n    /**\n     * Column on which the range starts in line `startLineNumber` (starts at 1).\n     */\n    readonly startColumn: number;\n    /**\n     * Line number on which the range ends.\n     */\n    readonly endLineNumber: number;\n    /**\n     * Column on which the range ends in line `endLineNumber`.\n     */\n    readonly endColumn: number;\n}\n\nexport interface Position {\n    /**\n     * line number (starts at 1)\n     */\n    readonly lineNumber: number,\n    /**\n     * column (starts at 1)\n     */\n    readonly column: number\n}\n\nexport { MarkdownStringDTO as MarkdownString };\n\nexport interface SerializedDocumentFilter {\n    $serialized: true;\n    language?: string;\n    scheme?: string;\n    pattern?: theia.GlobPattern;\n    notebookType?: string;\n}\n\nexport enum CompletionTriggerKind {\n    Invoke = 0,\n    TriggerCharacter = 1,\n    TriggerForIncompleteCompletions = 2\n}\n\nexport interface CompletionContext {\n    triggerKind: CompletionTriggerKind;\n    triggerCharacter?: string;\n}\n\nexport enum CompletionItemInsertTextRule {\n    KeepWhitespace = 1,\n    InsertAsSnippet = 4\n}\n\nexport interface Completion {\n    label: string | theia.CompletionItemLabel;\n    label2?: string;\n    kind: CompletionItemKind;\n    detail?: string;\n    documentation?: string | MarkdownStringDTO;\n    sortText?: string;\n    filterText?: string;\n    preselect?: boolean;\n    insertText: string;\n    insertTextRules?: CompletionItemInsertTextRule;\n    range?: Range | {\n        insert: Range;\n        replace: Range;\n    };\n    commitCharacters?: string[];\n    additionalTextEdits?: SingleEditOperation[];\n    command?: Command;\n    tags?: CompletionItemTag[];\n    /** @deprecated use tags instead. */\n    deprecated?: boolean;\n}\n\nexport interface SingleEditOperation {\n    range: Range;\n    text: string | null;\n    /**\n     * This indicates that this operation has \"insert\" semantics.\n     * i.e. forceMoveMarkers = true => if `range` is collapsed, all markers at the position will be moved.\n     */\n    forceMoveMarkers?: boolean;\n}\n\nexport interface Command {\n    id: string;\n    title: string;\n    tooltip?: string;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    arguments?: any[];\n}\n\nexport enum CompletionItemKind {\n    Method = 0,\n    Function = 1,\n    Constructor = 2,\n    Field = 3,\n    Variable = 4,\n    Class = 5,\n    Struct = 6,\n    Interface = 7,\n    Module = 8,\n    Property = 9,\n    Event = 10,\n    Operator = 11,\n    Unit = 12,\n    Value = 13,\n    Constant = 14,\n    Enum = 15,\n    EnumMember = 16,\n    Keyword = 17,\n    Text = 18,\n    Color = 19,\n    File = 20,\n    Reference = 21,\n    Customcolor = 22,\n    Folder = 23,\n    TypeParameter = 24,\n    User = 25,\n    Issue = 26,\n    Snippet = 27\n}\n\nexport class IdObject {\n    id?: number;\n}\nexport interface CompletionDto extends Completion {\n    id: number;\n    parentId: number;\n}\n\nexport interface CompletionResultDto extends IdObject {\n    id: number;\n    defaultRange: {\n        insert: Range,\n        replace: Range\n    }\n    completions: CompletionDto[];\n    incomplete?: boolean;\n}\n\nexport interface MarkerData {\n    code?: string;\n    severity: MarkerSeverity;\n    message: string;\n    source?: string;\n    startLineNumber: number;\n    startColumn: number;\n    endLineNumber: number;\n    endColumn: number;\n    relatedInformation?: RelatedInformation[];\n    tags?: MarkerTag[];\n}\n\nexport interface RelatedInformation {\n    resource: string;\n    message: string;\n    startLineNumber: number;\n    startColumn: number;\n    endLineNumber: number;\n    endColumn: number;\n}\n\nexport enum MarkerSeverity {\n    Hint = 1,\n    Info = 2,\n    Warning = 4,\n    Error = 8,\n}\n\nexport enum MarkerTag {\n    Unnecessary = 1,\n    Deprecated = 2,\n}\n\nexport interface ParameterInformation {\n    label: string | [number, number];\n    documentation?: string | MarkdownStringDTO;\n}\n\nexport interface SignatureInformation {\n    label: string;\n    documentation?: string | MarkdownStringDTO;\n    parameters: ParameterInformation[];\n    activeParameter?: number;\n}\n\nexport interface SignatureHelp extends IdObject {\n    signatures: SignatureInformation[];\n    activeSignature: number;\n    activeParameter: number;\n}\n\nexport interface SignatureHelpContext {\n    triggerKind: theia.SignatureHelpTriggerKind;\n    triggerCharacter?: string;\n    isRetrigger: boolean;\n    activeSignatureHelp?: SignatureHelp;\n}\n\nexport interface Hover {\n    contents: MarkdownStringDTO[];\n    range?: Range;\n}\n\nexport interface HoverProvider {\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken): Hover | undefined | Thenable<Hover | undefined>;\n}\n\nexport interface EvaluatableExpression {\n    range: Range;\n    expression?: string;\n}\n\nexport interface EvaluatableExpressionProvider {\n    provideEvaluatableExpression(model: monaco.editor.ITextModel, position: monaco.Position,\n        token: monaco.CancellationToken): EvaluatableExpression | undefined | Thenable<EvaluatableExpression | undefined>;\n}\n\nexport interface InlineValueContext {\n    frameId: number;\n    stoppedLocation: Range;\n}\n\nexport interface InlineValueText {\n    type: 'text';\n    range: Range;\n    text: string;\n}\n\nexport interface InlineValueVariableLookup {\n    type: 'variable';\n    range: Range;\n    variableName?: string;\n    caseSensitiveLookup: boolean;\n}\n\nexport interface InlineValueEvaluatableExpression {\n    type: 'expression';\n    range: Range;\n    expression?: string;\n}\n\nexport type InlineValue = InlineValueText | InlineValueVariableLookup | InlineValueEvaluatableExpression;\n\nexport interface InlineValuesProvider {\n    onDidChangeInlineValues?: TheiaEvent<void> | undefined;\n    provideInlineValues(model: monaco.editor.ITextModel, viewPort: Range, context: InlineValueContext, token: monaco.CancellationToken):\n        InlineValue[] | undefined | Thenable<InlineValue[] | undefined>;\n}\n\nexport enum DocumentHighlightKind {\n    Text = 0,\n    Read = 1,\n    Write = 2\n}\n\nexport interface DocumentHighlight {\n    range: Range;\n    kind?: DocumentHighlightKind;\n}\n\nexport interface DocumentHighlightProvider {\n    provideDocumentHighlights(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken): DocumentHighlight[] | undefined;\n}\n\nexport interface FormattingOptions {\n    tabSize: number;\n    insertSpaces: boolean;\n}\n\nexport interface TextEdit {\n    range: Range;\n    text: string;\n    eol?: monaco.editor.EndOfLineSequence;\n}\n\nexport interface DocumentDropEdit {\n    insertText: string | SnippetString;\n    additionalEdit?: WorkspaceEdit;\n}\n\nexport interface DocumentDropEditProviderMetadata {\n    readonly providedDropEditKinds?: readonly DocumentPasteEditKind[];\n    readonly dropMimeTypes: readonly string[];\n}\n\nexport interface DataTransferFileDTO {\n    readonly id: string;\n    readonly name: string;\n    readonly uri?: UriComponents;\n}\n\nexport interface DataTransferItemDTO {\n    readonly asString: string;\n    readonly fileData: DataTransferFileDTO | undefined;\n    readonly uriListData?: ReadonlyArray<string | UriComponents>;\n}\n\nexport interface DataTransferDTO {\n    readonly items: Array<[/* type */string, DataTransferItemDTO]>;\n}\n\nexport interface Location {\n    uri: UriComponents;\n    range: Range;\n}\n\nexport type Definition = Location | Location[] | LocationLink[];\n\nexport interface LocationLink {\n    uri: UriComponents;\n    range: Range;\n    originSelectionRange?: Range;\n    targetSelectionRange?: Range;\n}\n\nexport interface DefinitionProvider {\n    provideDefinition(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken): Definition | undefined;\n}\n\nexport interface DeclarationProvider {\n    provideDeclaration(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken): Definition | undefined;\n}\n\n/**\n * Value-object that contains additional information when\n * requesting references.\n */\nexport interface ReferenceContext {\n\n    /**\n     * Include the declaration of the current symbol.\n     */\n    includeDeclaration: boolean;\n}\n\nexport type CacheId = number;\nexport type ChainedCacheId = [CacheId, CacheId];\n\nexport type CachedSessionItem<T> = T & { cacheId?: ChainedCacheId };\nexport type CachedSession<T> = T & { cacheId?: CacheId };\n\nexport interface DocumentLink {\n    cacheId?: ChainedCacheId,\n    range: Range;\n    url?: UriComponents | string;\n    tooltip?: string;\n}\n\nexport interface DocumentLinkProvider {\n    provideLinks(model: monaco.editor.ITextModel, token: monaco.CancellationToken): DocumentLink[] | undefined | PromiseLike<DocumentLink[] | undefined>;\n    resolveLink?: (link: DocumentLink, token: monaco.CancellationToken) => DocumentLink | PromiseLike<DocumentLink[]>;\n}\n\nexport interface CodeLensSymbol {\n    range: Range;\n    command?: Command;\n}\n\nexport interface CodeAction {\n    cacheId: number;\n    title: string;\n    command?: Command;\n    edit?: WorkspaceEdit;\n    diagnostics?: MarkerData[];\n    kind?: string;\n    disabled?: { reason: string };\n    isPreferred?: boolean;\n}\n\nexport enum CodeActionTriggerKind {\n    Invoke = 1,\n    Automatic = 2,\n}\n\nexport interface CodeActionContext {\n    only?: string;\n    trigger: CodeActionTriggerKind\n}\n\nexport type CodeActionProviderDocumentation = ReadonlyArray<{ command: Command, kind: string }>;\n\nexport interface CodeActionProvider {\n    provideCodeActions(\n        model: monaco.editor.ITextModel,\n        range: Range | Selection,\n        context: monaco.languages.CodeActionContext,\n        token: monaco.CancellationToken\n    ): CodeAction[] | PromiseLike<CodeAction[]>;\n\n    providedCodeActionKinds?: string[];\n}\n\n// copied from https://github.com/microsoft/vscode/blob/b165e20587dd0797f37251515bc9e4dbe513ede8/src/vs/editor/common/modes.ts\nexport interface WorkspaceEditMetadata {\n    needsConfirmation: boolean;\n    label: string;\n    description?: string;\n    iconPath?: UriComponents | {\n        id: string;\n    } | {\n        light: UriComponents;\n        dark: UriComponents;\n    };\n}\n\nexport interface WorkspaceFileEdit {\n    newResource?: UriComponents;\n    oldResource?: UriComponents;\n    options?: { overwrite?: boolean, ignoreIfNotExists?: boolean, ignoreIfExists?: boolean, recursive?: boolean };\n    metadata?: WorkspaceEditMetadata;\n}\n\nexport interface WorkspaceTextEdit {\n    resource: UriComponents;\n    modelVersionId?: number;\n    textEdit: TextEdit;\n    metadata?: WorkspaceEditMetadata;\n}\n\nexport interface WorkspaceEdit {\n    edits: Array<WorkspaceTextEdit | WorkspaceFileEdit>;\n}\n\nexport enum SymbolKind {\n    File = 0,\n    Module = 1,\n    Namespace = 2,\n    Package = 3,\n    Class = 4,\n    Method = 5,\n    Property = 6,\n    Field = 7,\n    Constructor = 8,\n    Enum = 9,\n    Interface = 10,\n    Function = 11,\n    Variable = 12,\n    Constant = 13,\n    String = 14,\n    Number = 15,\n    Boolean = 16,\n    Array = 17,\n    Object = 18,\n    Key = 19,\n    Null = 20,\n    EnumMember = 21,\n    Struct = 22,\n    Event = 23,\n    Operator = 24,\n    TypeParameter = 25\n}\n\nexport enum SymbolTag {\n    Deprecated = 1\n}\n\nexport interface DocumentSymbol {\n    name: string;\n    detail: string;\n    kind: SymbolKind;\n    tags: ReadonlyArray<SymbolTag>;\n    containerName?: string;\n    range: Range;\n    selectionRange: Range;\n    children?: DocumentSymbol[];\n}\n\nexport interface WorkspaceRootsChangeEvent {\n    roots: string[];\n}\n\nexport interface WorkspaceFolder {\n    uri: UriComponents;\n    name: string;\n    index: number;\n}\n\nexport interface Breakpoint {\n    readonly id: string;\n    readonly enabled: boolean;\n    readonly condition?: string;\n    readonly hitCondition?: string;\n    readonly logMessage?: string;\n    readonly location?: Location;\n    readonly functionName?: string;\n}\n\nexport interface WorkspaceSymbolParams {\n    query: string\n}\n\nexport interface FoldingContext {\n}\n\nexport interface FoldingRange {\n    start: number;\n    end: number;\n    kind?: FoldingRangeKind;\n}\n\nexport class FoldingRangeKind {\n    static readonly Comment = new FoldingRangeKind('comment');\n    static readonly Imports = new FoldingRangeKind('imports');\n    static readonly Region = new FoldingRangeKind('region');\n    public constructor(public value: string) { }\n}\n\nexport interface SelectionRange {\n    range: Range;\n}\n\nexport interface Color {\n    readonly red: number;\n    readonly green: number;\n    readonly blue: number;\n    readonly alpha: number;\n}\n\nexport interface ColorPresentation {\n    label: string;\n    textEdit?: TextEdit;\n    additionalTextEdits?: TextEdit[];\n}\n\nexport interface ColorInformation {\n    range: Range;\n    color: Color;\n}\n\nexport interface DocumentColorProvider {\n    provideDocumentColors(model: monaco.editor.ITextModel): PromiseLike<ColorInformation[]>;\n    provideColorPresentations(model: monaco.editor.ITextModel, colorInfo: ColorInformation): PromiseLike<ColorPresentation[]>;\n}\n\nexport interface Rejection {\n    rejectReason?: string;\n}\n\nexport interface RenameLocation {\n    range: Range;\n    text: string;\n}\n\nexport class HierarchyItem {\n    _sessionId?: string;\n    _itemId?: string;\n\n    kind: SymbolKind;\n    tags?: readonly SymbolTag[];\n    name: string;\n    detail?: string;\n    uri: UriComponents;\n    range: Range;\n    selectionRange: Range;\n}\n\nexport class TypeHierarchyItem extends HierarchyItem { }\n\nexport interface CallHierarchyItem extends HierarchyItem {\n    data?: unknown;\n}\n\nexport interface CallHierarchyIncomingCall {\n    from: CallHierarchyItem;\n    fromRanges: Range[];\n}\n\nexport interface CallHierarchyOutgoingCall {\n    to: CallHierarchyItem;\n    fromRanges: Range[];\n}\n\nexport interface LinkedEditingRanges {\n    ranges: Range[];\n    wordPattern?: SerializedRegExp;\n}\n\nexport interface SearchInWorkspaceResult {\n    root: string;\n    fileUri: string;\n    matches: SearchMatch[];\n}\n\nexport interface SearchMatch {\n    line: number;\n    character: number;\n    length: number;\n    lineText: string | LinePreview;\n\n}\nexport interface LinePreview {\n    text: string;\n    character: number;\n}\n\n/**\n * @deprecated Use {@link theia.AuthenticationSession} instead.\n */\nexport interface AuthenticationSession extends theia.AuthenticationSession {\n}\n\n/**\n * @deprecated Use {@link theia.AuthenticationProviderAuthenticationSessionsChangeEvent} instead.\n */\nexport interface AuthenticationSessionsChangeEvent extends theia.AuthenticationProviderAuthenticationSessionsChangeEvent {\n}\n\n/**\n * @deprecated Use {@link theia.AuthenticationProviderInformation} instead.\n */\nexport interface AuthenticationProviderInformation extends theia.AuthenticationProviderInformation {\n}\n\nexport interface CommentOptions {\n    /**\n     * An optional string to show on the comment input box when it's collapsed.\n     */\n    prompt?: string;\n\n    /**\n     * An optional string to show as placeholder in the comment input box when it's focused.\n     */\n    placeHolder?: string;\n}\n\nexport enum CommentMode {\n    Editing = 0,\n    Preview = 1\n}\n\nexport interface Comment {\n    readonly uniqueIdInThread: number;\n    readonly body: MarkdownStringDTO;\n    readonly userName: string;\n    readonly userIconPath?: string;\n    readonly contextValue?: string;\n    readonly label?: string;\n    readonly mode?: CommentMode;\n    /** Timestamp serialized as ISO date string via Date.prototype.toISOString */\n    readonly timestamp?: string;\n}\n\nexport enum CommentThreadState {\n    Unresolved = 0,\n    Resolved = 1\n}\n\nexport enum CommentThreadCollapsibleState {\n    /**\n     * Determines an item is collapsed\n     */\n    Collapsed = 0,\n    /**\n     * Determines an item is expanded\n     */\n    Expanded = 1\n}\n\nexport interface CommentInput {\n    value: string;\n    uri: URI;\n}\n\nexport interface CommentThread {\n    commentThreadHandle: number;\n    controllerHandle: number;\n    extensionId?: string;\n    threadId: string;\n    resource: string | null;\n    range: Range | undefined;\n    label: string | undefined;\n    contextValue: string | undefined;\n    comments: Comment[] | undefined;\n    onDidChangeComments: TheiaEvent<Comment[] | undefined>;\n    collapsibleState?: CommentThreadCollapsibleState;\n    state?: CommentThreadState;\n    input?: CommentInput;\n    onDidChangeInput: TheiaEvent<CommentInput | undefined>;\n    onDidChangeRange: TheiaEvent<Range | undefined>;\n    onDidChangeLabel: TheiaEvent<string | undefined>;\n    onDidChangeState: TheiaEvent<CommentThreadState | undefined>;\n    onDidChangeCollapsibleState: TheiaEvent<CommentThreadCollapsibleState | undefined>;\n    isDisposed: boolean;\n    canReply: boolean | theia.CommentAuthorInformation;\n    onDidChangeCanReply: TheiaEvent<boolean | theia.CommentAuthorInformation>;\n}\n\nexport interface CommentThreadChangedEventMain extends CommentThreadChangedEvent {\n    owner: string;\n}\n\nexport interface CommentThreadChangedEvent {\n    /**\n     * Added comment threads.\n     */\n    readonly added: CommentThread[];\n\n    /**\n     * Removed comment threads.\n     */\n    readonly removed: CommentThread[];\n\n    /**\n     * Changed comment threads.\n     */\n    readonly changed: CommentThread[];\n}\n\nexport interface CommentingRanges {\n    readonly resource: URI;\n    ranges: Range[];\n    fileComments: boolean;\n}\n\nexport interface CommentInfo {\n    extensionId?: string;\n    threads: CommentThread[];\n    commentingRanges: CommentingRanges;\n}\n\nexport interface ProvidedTerminalLink extends theia.TerminalLink {\n    providerId: string\n}\n\nexport interface InlayHintLabelPart {\n    label: string;\n    tooltip?: string | MarkdownStringDTO;\n    location?: Location;\n    command?: Command;\n}\n\nexport interface InlayHint {\n    position: { lineNumber: number, column: number };\n    label: string | InlayHintLabelPart[];\n    tooltip?: string | MarkdownStringDTO | undefined;\n    kind?: InlayHintKind;\n    textEdits?: TextEdit[];\n    paddingLeft?: boolean;\n    paddingRight?: boolean;\n}\n\nexport enum InlayHintKind {\n    Type = 1,\n    Parameter = 2,\n}\n\nexport interface InlayHintsProvider {\n    onDidChangeInlayHints?: TheiaEvent<void> | undefined;\n    provideInlayHints(model: monaco.editor.ITextModel, range: Range, token: monaco.CancellationToken): InlayHint[] | undefined | Thenable<InlayHint[] | undefined>;\n    resolveInlayHint?(hint: InlayHint, token: monaco.CancellationToken): InlayHint[] | undefined | Thenable<InlayHint[] | undefined>;\n}\n\n/**\n * How an {@link InlineCompletionsProvider inline completion provider} was triggered.\n */\nexport enum InlineCompletionTriggerKind {\n    /**\n     * Completion was triggered automatically while editing.\n     * It is sufficient to return a single completion item in this case.\n     */\n    Automatic = 0,\n\n    /**\n     * Completion was triggered explicitly by a user gesture.\n     * Return multiple completion items to enable cycling through them.\n     */\n    Explicit = 1,\n}\n\nexport interface InlineCompletionContext {\n    /**\n     * How the completion was triggered.\n     */\n    readonly triggerKind: InlineCompletionTriggerKind;\n\n    readonly selectedSuggestionInfo: SelectedSuggestionInfo | undefined;\n}\n\nexport interface SelectedSuggestionInfo {\n    range: Range;\n    text: string;\n    isSnippetText: boolean;\n    completionKind: CompletionItemKind;\n}\n\nexport interface InlineCompletion {\n    /**\n     * The text to insert.\n     * If the text contains a line break, the range must end at the end of a line.\n     * If existing text should be replaced, the existing text must be a prefix of the text to insert.\n     *\n     * The text can also be a snippet. In that case, a preview with default parameters is shown.\n     * When accepting the suggestion, the full snippet is inserted.\n     */\n    readonly insertText: string | { snippet: string };\n\n    /**\n     * A text that is used to decide if this inline completion should be shown.\n     * An inline completion is shown if the text to replace is a subword of the filter text.\n     */\n    readonly filterText?: string;\n\n    /**\n     * An optional array of additional text edits that are applied when\n     * selecting this completion. Edits must not overlap with the main edit\n     * nor with themselves.\n     */\n    readonly additionalTextEdits?: SingleEditOperation[];\n\n    /**\n     * The range to replace.\n     * Must begin and end on the same line.\n     */\n    readonly range?: Range;\n\n    readonly command?: Command;\n\n    /**\n     * If set to `true`, unopened closing brackets are removed and unclosed opening brackets are closed.\n     * Defaults to `false`.\n     */\n    readonly completeBracketPairs?: boolean;\n}\n\nexport interface InlineCompletions<TItem extends InlineCompletion = InlineCompletion> {\n    readonly items: readonly TItem[];\n}\n\nexport interface InlineCompletionsProvider<T extends InlineCompletions = InlineCompletions> {\n    provideInlineCompletions(\n        model: monaco.editor.ITextModel,\n        position: monaco.Position,\n        context: InlineCompletionContext,\n        token: monaco.CancellationToken\n    ): T[] | undefined | Thenable<T[] | undefined>;\n\n    /**\n     * Will be called when an item is shown.\n     */\n    handleItemDidShow?(completions: T, item: T['items'][number]): void;\n\n    /**\n     * Will be called when a completions list is no longer in use and can be garbage-collected.\n     */\n    freeInlineCompletions(completions: T): void;\n}\n\nexport interface DebugStackFrameDTO {\n    readonly sessionId: string,\n    readonly frameId: number,\n    readonly threadId: number\n}\n\nexport interface DebugThreadDTO {\n    readonly sessionId: string,\n    readonly threadId: number\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { createProxyIdentifier, ProxyIdentifier, RPCProtocol } from './rpc-protocol';\nimport * as theia from '@theia/plugin';\nimport { PluginLifecycle, PluginModel, PluginMetadata, PluginPackage, IconUrl, PluginJsonValidationContribution } from './plugin-protocol';\nimport { QueryParameters } from './env';\nimport { TextEditorCursorStyle } from './editor-options';\nimport {\n    ConfigurationTarget,\n    TextEditorLineNumbersStyle,\n    EndOfLine,\n    OverviewRulerLane,\n    FileOperationOptions,\n    TextDocumentChangeReason,\n    IndentAction,\n    NotebookRendererScript,\n} from '../plugin/types-impl';\nimport { UriComponents } from './uri-components';\nimport {\n    SerializedDocumentFilter,\n    CompletionContext,\n    MarkdownString,\n    Range,\n    Completion,\n    CompletionResultDto,\n    MarkerData,\n    SignatureHelp,\n    Hover,\n    EvaluatableExpression,\n    InlineValue,\n    InlineValueContext,\n    DocumentHighlight,\n    FormattingOptions,\n    ChainedCacheId,\n    Definition,\n    DocumentLink,\n    CodeLensSymbol,\n    Command,\n    TextEdit,\n    DocumentSymbol,\n    ReferenceContext,\n    TextDocumentShowOptions,\n    WorkspaceRootsChangeEvent,\n    Location,\n    Breakpoint,\n    ColorPresentation,\n    RenameLocation,\n    SignatureHelpContext,\n    CodeAction,\n    CodeActionContext,\n    FoldingContext,\n    FoldingRange,\n    SelectionRange,\n    SearchInWorkspaceResult,\n    CallHierarchyItem,\n    CallHierarchyIncomingCall,\n    CallHierarchyOutgoingCall,\n    Comment,\n    CommentOptions,\n    CommentThreadState,\n    CommentThreadCollapsibleState,\n    CommentThread,\n    CommentThreadChangedEvent,\n    CodeActionProviderDocumentation,\n    LinkedEditingRanges,\n    ProvidedTerminalLink,\n    InlayHint,\n    CachedSession,\n    CachedSessionItem,\n    TypeHierarchyItem,\n    InlineCompletion,\n    InlineCompletions,\n    InlineCompletionContext,\n    DocumentDropEdit,\n    DataTransferDTO,\n    DocumentDropEditProviderMetadata,\n    DebugStackFrameDTO,\n    DebugThreadDTO\n} from './plugin-api-rpc-model';\nimport { ExtPluginApi } from './plugin-ext-api-contribution';\nimport { KeysToAnyValues, KeysToKeysToAnyValue } from './types';\nimport {\n    AuthenticationProviderAuthenticationSessionsChangeEvent,\n    CancellationToken,\n    Progress,\n    ProgressOptions,\n} from '@theia/plugin';\nimport { DebuggerDescription } from '@theia/debug/lib/common/debug-service';\nimport { DebugProtocol } from '@vscode/debugprotocol';\nimport { SymbolInformation } from '@theia/core/shared/vscode-languageserver-protocol';\nimport * as files from '@theia/filesystem/lib/common/files';\nimport { BinaryBuffer } from '@theia/core/lib/common/buffer';\nimport { ResourceLabelFormatter } from '@theia/core/lib/common/label-protocol';\nimport type {\n    InternalTimelineOptions,\n    Timeline,\n    TimelineChangeEvent,\n    TimelineProviderDescriptor\n} from '@theia/timeline/lib/common/timeline-model';\nimport { SerializableEnvironmentVariableCollection } from '@theia/terminal/lib/common/shell-terminal-protocol';\nimport { ThemeType } from '@theia/core/lib/common/theme';\nimport { Disposable } from '@theia/core/lib/common/disposable';\nimport { isString, isObject, QuickInputButtonHandle } from '@theia/core/lib/common';\nimport { Severity } from '@theia/core/lib/common/severity';\nimport { DebugConfiguration, DebugSessionOptions } from '@theia/debug/lib/common/debug-configuration';\nimport * as notebookCommon from '@theia/notebook/lib/common';\nimport { CellExecutionUpdateType, CellRange, NotebookCellExecutionState } from '@theia/notebook/lib/common';\nimport { LanguagePackBundle } from './language-pack-service';\nimport { AccessibilityInformation } from '@theia/core/lib/common/accessibility';\n\nimport { TreeDelta } from '@theia/test/lib/common/tree-delta';\nimport { TestItemDTO, TestOutputDTO, TestRunDTO, TestRunProfileDTO, TestRunRequestDTO, TestStateChangeDTO } from './test-types';\nimport { ArgumentProcessor } from './commands';\nimport { McpServerDefinitionRegistryMain, McpServerDefinitionRegistryExt } from './lm-protocol';\n\nexport interface PreferenceData {\n    [scope: number]: any;\n}\n\nexport interface Plugin {\n    pluginPath: string | undefined;\n    pluginFolder: string;\n    pluginUri: string;\n    model: PluginModel;\n    rawModel: PluginPackage;\n    lifecycle: PluginLifecycle;\n    isUnderDevelopment: boolean;\n}\n\nexport interface ConfigStorage {\n    hostLogPath: string;\n    hostStoragePath?: string;\n    hostGlobalStoragePath: string;\n}\n\nexport enum UIKind {\n\n    /**\n     * Extensions are accessed from a desktop application.\n     */\n    Desktop = 1,\n\n    /**\n     * Extensions are accessed from a web browser.\n     */\n    Web = 2\n}\n\nexport enum ExtensionKind {\n    /**\n     * Extension runs where the UI runs.\n     */\n    UI = 1,\n\n    /**\n     * Extension runs where the remote extension host runs.\n     */\n    Workspace = 2\n}\n\nexport interface EnvInit {\n    queryParams: QueryParameters;\n    language: string;\n    shell: string;\n    uiKind: UIKind;\n    appName: string;\n    appHost: string;\n    appRoot: string;\n    appUriScheme: string;\n}\n\nexport interface PluginAPI {\n\n}\n\nexport const PluginManager = Symbol.for('PluginManager');\nexport interface PluginManager {\n    getAllPlugins(): Plugin[];\n    getPluginById(pluginId: string): Plugin | undefined;\n    getPluginExport(pluginId: string): PluginAPI | undefined;\n    getPluginKind(): theia.ExtensionKind;\n    isRunning(pluginId: string): boolean;\n    isActive(pluginId: string): boolean;\n    activatePlugin(pluginId: string): PromiseLike<void>;\n    onDidChange: theia.Event<void>;\n}\n\nexport interface PluginAPIFactory {\n    (plugin: Plugin): typeof theia;\n}\n\nexport const emptyPlugin: Plugin = {\n    lifecycle: {\n        startMethod: 'empty',\n        stopMethod: 'empty'\n    },\n    model: {\n        id: 'emptyPlugin',\n        name: 'emptyPlugin',\n        publisher: 'Theia',\n        version: 'empty',\n        displayName: 'empty',\n        description: 'empty',\n        engine: {\n            type: 'empty',\n            version: 'empty'\n        },\n        packagePath: 'empty',\n        packageUri: 'empty',\n        entryPoint: {\n\n        }\n    },\n    pluginPath: 'empty',\n    pluginFolder: 'empty',\n    pluginUri: 'empty',\n    rawModel: {\n        name: 'emptyPlugin',\n        publisher: 'Theia',\n        version: 'empty',\n        displayName: 'empty',\n        description: 'empty',\n        engines: {\n            type: 'empty',\n            version: 'empty'\n        },\n        packagePath: 'empty'\n    },\n    isUnderDevelopment: false\n};\n\nexport interface PluginManagerInitializeParams {\n    preferences: PreferenceData\n    globalState: KeysToKeysToAnyValue\n    workspaceState: KeysToKeysToAnyValue\n    env: EnvInit\n    pluginKind: ExtensionKind\n    extApi?: ExtPluginApi[]\n    webview: WebviewInitData\n    jsonValidation: PluginJsonValidationContribution[]\n    supportedActivationEvents?: string[]\n}\n\nexport interface PluginManagerStartParams {\n    plugins: PluginMetadata[]\n    configStorage: ConfigStorage\n    activationEvents: string[]\n}\n\nexport interface AbstractPluginManagerExt<P extends Record<string, any>> {\n    /** initialize the manager, should be called only once */\n    $init(params: P): Promise<void>;\n\n    /** load and activate plugins */\n    $start(params: PluginManagerStartParams): Promise<void>;\n\n    /** deactivate the plugin */\n    $stop(pluginId: string): Promise<void>;\n\n    /** deactivate all plugins */\n    $stop(): Promise<void>;\n\n    $updateStoragePath(path: string | undefined): Promise<void>;\n\n    $activateByEvent(event: string): Promise<void>;\n\n    $activatePlugin(id: string): Promise<void>;\n}\n\nexport interface PluginManagerExt extends AbstractPluginManagerExt<PluginManagerInitializeParams> { }\n\nexport interface CommandRegistryMain {\n    $registerCommand(command: theia.CommandDescription): void;\n    $unregisterCommand(id: string): void;\n\n    $registerHandler(id: string): void;\n    $unregisterHandler(id: string): void;\n\n    $executeCommand<T>(id: string, ...args: any[]): PromiseLike<T | undefined>;\n    $getCommands(): PromiseLike<string[]>;\n    $getKeyBinding(commandId: string): PromiseLike<theia.CommandKeyBinding[] | undefined>;\n\n    registerArgumentProcessor(processor: ArgumentProcessor): void;\n}\n\nexport interface CommandRegistryExt {\n    $executeCommand<T>(id: string, ...ars: any[]): PromiseLike<T | undefined>;\n    registerArgumentProcessor(processor: ArgumentProcessor): void;\n}\n\nexport interface TerminalServiceExt {\n    $startProfile(providerId: string, cancellationToken: theia.CancellationToken): Promise<string>;\n    $terminalCreated(id: string, name: string): void;\n    $terminalNameChanged(id: string, name: string): void;\n    $terminalOpened(id: string, processId: number, terminalId: number, cols: number, rows: number): void;\n    $terminalClosed(id: string, exitStatus: theia.TerminalExitStatus | undefined): void;\n    $terminalOnInput(id: string, data: string): void;\n    $terminalSizeChanged(id: string, cols: number, rows: number): void;\n    $currentTerminalChanged(id: string | undefined): void;\n    $terminalOnInteraction(id: string): void;\n    $terminalShellTypeChanged(id: string, newShellType: string): void;\n    $initEnvironmentVariableCollections(collections: [string, string, boolean, SerializableEnvironmentVariableCollection][]): void;\n    $provideTerminalLinks(line: string, terminalId: string, token: theia.CancellationToken): Promise<ProvidedTerminalLink[]>;\n    $handleTerminalLink(link: ProvidedTerminalLink): Promise<void>;\n    getEnvironmentVariableCollection(extensionIdentifier: string): theia.GlobalEnvironmentVariableCollection;\n    $setShell(shell: string): void;\n    $reportOutputMatch(observerId: string, groups: string[]): void;\n}\nexport interface OutputChannelRegistryExt {\n    createOutputChannel(name: string, pluginInfo: PluginInfo): theia.OutputChannel,\n    createOutputChannel(name: string, pluginInfo: PluginInfo, options: { log: true }): theia.LogOutputChannel\n}\n\nexport interface ConnectionMain {\n    $createConnection(id: string): Promise<void>;\n    $deleteConnection(id: string): Promise<void>;\n    $sendMessage(id: string, message: string): void;\n}\n\nexport interface ConnectionExt {\n    $createConnection(id: string): Promise<void>;\n    $deleteConnection(id: string): Promise<void>\n    $sendMessage(id: string, message: string): void;\n}\n\nexport interface TerminalServiceMain {\n    /**\n     * Create new Terminal with Terminal options.\n     * @param options - object with parameters to create new terminal.\n     */\n    $createTerminal(id: string, options: TerminalOptions, parentId?: string, isPseudoTerminal?: boolean): Promise<string>;\n\n    /**\n     * Send text to the terminal by id.\n     * @param id - terminal widget id.\n     * @param text - text content.\n     * @param shouldExecute - in case true - Indicates that the text being sent should be executed rather than just inserted in the terminal.\n     */\n    $sendText(id: string, text: string, shouldExecute?: boolean): void;\n\n    /**\n     * Write data to the terminal by id.\n     * @param id - terminal widget id.\n     * @param data - data.\n     */\n    $write(id: string, data: string): void;\n\n    /**\n     * Resize the terminal by id.\n     * @param id - terminal widget id.\n     * @param cols - columns.\n     * @param rows - rows.\n     */\n    $resize(id: string, cols: number, rows: number): void;\n\n    /**\n     * Show terminal on the UI panel.\n     * @param id - terminal widget id.\n     * @param preserveFocus - set terminal focus in case true value, and don't set focus otherwise.\n     */\n    $show(id: string, preserveFocus?: boolean): void;\n\n    /**\n     * Hide UI panel where is located terminal widget.\n     * @param id - terminal widget id.\n     */\n    $hide(id: string): void;\n\n    /**\n     * Destroy terminal.\n     * @param id - terminal widget id.\n     */\n    $dispose(id: string): void;\n\n    /**\n     * Set the terminal widget name.\n     * @param id terminal widget id.\n     * @param name new terminal widget name.\n     */\n    $setName(id: string, name: string): void;\n\n    /**\n     * Send text to the terminal by id.\n     * @param id - terminal id.\n     * @param text - text content.\n     * @param addNewLine - in case true - add new line after the text, otherwise - don't apply new line.\n     */\n    $sendTextByTerminalId(id: number, text: string, addNewLine?: boolean): void;\n\n    /**\n     * Write data to the terminal by id.\n     * @param id - terminal id.\n     * @param data - data.\n     */\n    $writeByTerminalId(id: number, data: string): void;\n\n    /**\n     * Resize the terminal by id.\n     * @param id - terminal id.\n     * @param cols - columns.\n     * @param rows - rows.\n     */\n    $resizeByTerminalId(id: number, cols: number, rows: number): void;\n\n    /**\n     * Show terminal on the UI panel.\n     * @param id - terminal id.\n     * @param preserveFocus - set terminal focus in case true value, and don't set focus otherwise.\n     */\n    $showByTerminalId(id: number, preserveFocus?: boolean): void;\n\n    /**\n     * Hide UI panel where is located terminal widget.\n     * @param id - terminal id.\n     */\n    $hideByTerminalId(id: number): void;\n\n    /**\n     * Destroy terminal.\n     * @param id - terminal id.\n     * @param waitOnExit - Whether to wait for a key press before closing the terminal.\n     */\n    $disposeByTerminalId(id: number, waitOnExit?: boolean | string): void;\n\n    $setEnvironmentVariableCollection(persistent: boolean, extensionIdentifier: string, rootUri: string, collection: SerializableEnvironmentVariableCollection): void;\n\n    /**\n     * Set the terminal widget name.\n     * @param id terminal id.\n     * @param name new terminal widget name.\n     */\n    $setNameByTerminalId(id: number, name: string): void;\n\n    /**\n     * Register a new terminal link provider.\n     * @param providerId id of the terminal link provider to be registered.\n     */\n    $registerTerminalLinkProvider(providerId: string): Promise<void>;\n\n    /**\n     * Unregister the terminal link provider with the specified id.\n     * @param providerId id of the terminal link provider to be unregistered.\n     */\n    $unregisterTerminalLinkProvider(providerId: string): Promise<void>;\n\n    /**\n     * Register a new terminal observer.\n     * @param providerId id of the terminal link provider to be registered.\n     * @param nrOfLinesToMatch the number of lines to match the outputMatcherRegex against\n     * @param outputMatcherRegex the regex to match the output to\n     */\n    $registerTerminalObserver(id: string, nrOfLinesToMatch: number, outputMatcherRegex: string): unknown;\n\n    /**\n     * Unregister the terminal observer with the specified id.\n     * @param providerId id of the terminal observer to be unregistered.\n     */\n    $unregisterTerminalObserver(id: string): unknown;\n}\n\nexport interface TerminalOptions extends theia.TerminalOptions {\n    iconUrl?: string | { light: string; dark: string } | ThemeIcon;\n}\n\nexport interface AutoFocus {\n    autoFocusFirstEntry?: boolean;\n    // TODO\n}\n\nexport enum MainMessageType {\n    Error,\n    Warning,\n    Info\n}\n\nexport interface MainMessageOptions {\n    detail?: string;\n    modal?: boolean\n    onCloseActionHandle?: number\n}\n\nexport interface MainMessageItem {\n    title: string,\n    isCloseAffordance?: boolean;\n    handle?: number\n}\n\nexport interface MessageRegistryMain {\n    $showMessage(type: MainMessageType, message: string, options: MainMessageOptions, actions: MainMessageItem[]): PromiseLike<number | undefined>;\n}\n\nexport interface StatusBarMessageRegistryMain {\n    $setMessage(id: string,\n        name: string | undefined,\n        text: string | undefined,\n        priority: number,\n        alignment: theia.StatusBarAlignment,\n        color: string | undefined,\n        backgroundColor: string | undefined,\n        tooltip: string | theia.MarkdownString | undefined,\n        command: string | undefined,\n        accessibilityInformation: theia.AccessibilityInformation,\n        args: any[] | undefined): PromiseLike<void>;\n    $dispose(id: string): void;\n}\n\nexport interface QuickOpenExt {\n    $onItemSelected(handle: number): void;\n    $validateInput(input: string): Promise<string | { content: string; severity: Severity; } | null | undefined>;\n\n    $acceptOnDidAccept(sessionId: number): Promise<void>;\n    $acceptDidChangeValue(sessionId: number, changedValue: string): Promise<void>;\n    $acceptOnDidHide(sessionId: number): Promise<void>;\n    $acceptOnDidTriggerButton(sessionId: number, btn: QuickInputButtonHandle): Promise<void>;\n    $onDidTriggerItemButton(sessionId: number, itemHandle: number, buttonHandle: number): void;\n    $onDidChangeActive(sessionId: number, handles: number[]): void;\n    $onDidChangeSelection(sessionId: number, handles: number[]): void;\n\n    /* eslint-disable max-len */\n    showQuickPick(plugin: Plugin, itemsOrItemsPromise: Array<theia.QuickPickItem> | Promise<Array<theia.QuickPickItem>>, options: theia.QuickPickOptions & { canPickMany: true; },\n        token?: theia.CancellationToken): Promise<Array<theia.QuickPickItem> | undefined>;\n    showQuickPick(plugin: Plugin, itemsOrItemsPromise: string[] | Promise<string[]>, options?: theia.QuickPickOptions, token?: theia.CancellationToken): Promise<string | undefined>;\n    showQuickPick(plugin: Plugin, itemsOrItemsPromise: Array<theia.QuickPickItem> | Promise<Array<theia.QuickPickItem>>, options?: theia.QuickPickOptions, token?: theia.CancellationToken): Promise<theia.QuickPickItem | undefined>;\n\n    showInput(options?: theia.InputBoxOptions, token?: theia.CancellationToken): PromiseLike<string | undefined>;\n    // showWorkspaceFolderPick(options?: theia.WorkspaceFolderPickOptions, token?: theia.CancellationToken): Promise<theia.WorkspaceFolder | undefined>\n    createQuickPick<T extends theia.QuickPickItem>(plugin: Plugin): theia.QuickPick<T>;\n    createInputBox(plugin: Plugin): theia.InputBox;\n}\n\n/**\n * Options to configure the behaviour of a file open dialog.\n */\nexport interface OpenDialogOptionsMain {\n\n    /**\n     * Dialog title.\n     * This parameter might be ignored, as not all operating systems display a title on open dialogs.\n     */\n    title?: string;\n\n    /**\n     * The resource the dialog shows when opened.\n     */\n    defaultUri?: string;\n\n    /**\n     * A human-readable string for the open button.\n     */\n    openLabel?: string;\n\n    /**\n     * Allow to select files, defaults to `true`.\n     */\n    canSelectFiles?: boolean;\n\n    /**\n     * Allow to select folders, defaults to `false`.\n     */\n    canSelectFolders?: boolean;\n\n    /**\n     * Allow to select many files or folders.\n     */\n    canSelectMany?: boolean;\n\n    /**\n     * A set of file filters that are used by the dialog. Each entry is a human readable label,\n     * like \"TypeScript\", and an array of extensions, e.g.\n     * ```ts\n     * {\n     *  'Images': ['png', 'jpg']\n     *  'TypeScript': ['ts', 'tsx']\n     * }\n     * ```\n     */\n    filters?: { [name: string]: string[] };\n}\n\n/**\n * Options to configure the behaviour of a file save dialog.\n */\nexport interface SaveDialogOptionsMain {\n\n    /**\n     * Dialog title.\n     * This parameter might be ignored, as not all operating systems display a title on save dialogs.\n     */\n    title?: string;\n\n    /**\n     * The resource the dialog shows when opened.\n     */\n    defaultUri?: string;\n\n    /**\n     * A human-readable string for the save button.\n     */\n    saveLabel?: string;\n\n    /**\n     * A set of file filters that are used by the dialog. Each entry is a human readable label,\n     * like \"TypeScript\", and an array of extensions, e.g.\n     * ```ts\n     * {\n     *  'Images': ['png', 'jpg']\n     *  'TypeScript': ['ts', 'tsx']\n     * }\n     * ```\n     */\n    filters?: { [name: string]: string[] };\n}\n\n/**\n * Options to configure the behaviour of a file upload dialog.\n */\nexport interface UploadDialogOptionsMain {\n    /**\n     * The resource, where files should be uploaded.\n     */\n    defaultUri?: string;\n}\n\nexport interface FileUploadResultMain {\n    uploaded: string[]\n}\n\n/**\n * Options to configure the behaviour of the [workspace folder](#WorkspaceFolder) pick UI.\n */\nexport interface WorkspaceFolderPickOptionsMain {\n    /**\n     * An optional string to show as place holder in the input box to guide the user what to pick on.\n     */\n    placeHolder?: string;\n\n    /**\n     * Set to `true` to keep the picker open when focus moves to another part of the editor or to another window.\n     */\n    ignoreFocusOut?: boolean;\n}\n\nexport interface TransferQuickPickItem {\n    handle: number;\n    kind: 'item' | 'separator',\n    label: string;\n    iconUrl?: string | { light: string; dark: string } | ThemeIcon;\n    description?: string;\n    detail?: string;\n    picked?: boolean;\n    alwaysShow?: boolean;\n    buttons?: readonly TransferQuickInputButton[];\n}\n\nexport interface TransferQuickPickOptions<T extends TransferQuickPickItem> {\n    title?: string;\n    placeHolder?: string;\n    matchOnDescription?: boolean;\n    matchOnDetail?: boolean;\n    matchOnLabel?: boolean;\n    autoFocusOnList?: boolean;\n    ignoreFocusLost?: boolean;\n    canPickMany?: boolean;\n    contextKey?: string;\n    activeItem?: Promise<T> | T;\n    onDidFocus?: (entry: T) => void;\n}\n\nexport interface TransferQuickInputButton {\n    handle?: number;\n    readonly iconUrl?: string | { light: string; dark: string } | ThemeIcon;\n    readonly tooltip?: string | undefined;\n}\n\nexport type TransferQuickInput = TransferQuickPick | TransferInputBox;\n\nexport interface BaseTransferQuickInput {\n    [key: string]: any;\n    id: number;\n    type?: 'quickPick' | 'inputBox';\n    enabled?: boolean;\n    busy?: boolean;\n    visible?: boolean;\n}\n\nexport interface TransferQuickPick extends BaseTransferQuickInput {\n    type?: 'quickPick';\n    value?: string;\n    placeholder?: string;\n    buttons?: TransferQuickInputButton[];\n    items?: TransferQuickPickItem[];\n    activeItems?: ReadonlyArray<theia.QuickPickItem>;\n    selectedItems?: ReadonlyArray<theia.QuickPickItem>;\n    canSelectMany?: boolean;\n    ignoreFocusOut?: boolean;\n    matchOnDescription?: boolean;\n    matchOnDetail?: boolean;\n    sortByLabel?: boolean;\n}\n\nexport interface TransferInputBox extends BaseTransferQuickInput {\n    type?: 'inputBox';\n    value?: string;\n    placeholder?: string;\n    password?: boolean;\n    buttons?: TransferQuickInputButton[];\n    prompt?: string;\n    validationMessage?: string;\n}\n\nexport interface IInputBoxOptions {\n    value?: string;\n    valueSelection?: [number, number];\n    prompt?: string;\n    placeHolder?: string;\n    password?: boolean;\n    ignoreFocusOut?: boolean;\n}\n\nexport interface QuickOpenMain {\n    $show(instance: number, options: TransferQuickPickOptions<TransferQuickPickItem>, token: CancellationToken): Promise<number | number[] | undefined>;\n    $setItems(instance: number, items: TransferQuickPickItem[]): Promise<any>;\n    $setError(instance: number, error: Error): Promise<void>;\n    $input(options: theia.InputBoxOptions, validateInput: boolean, token: CancellationToken): Promise<string | undefined>;\n    $createOrUpdate<T extends theia.QuickPickItem>(params: TransferQuickInput): Promise<void>;\n    $dispose(id: number): Promise<void>;\n\n    $hide(): void;\n    $showInputBox(options: TransferInputBox, validateInput: boolean): Promise<string | undefined>;\n}\n\nexport interface FindFilesOptions {\n    exclude?: string;\n    useDefaultExcludes?: boolean;\n    useDefaultSearchExcludes?: boolean;\n    maxResults?: number;\n    useIgnoreFiles?: boolean;\n    fuzzy?: boolean;\n}\n\nexport interface WorkspaceMain {\n    $pickWorkspaceFolder(options: WorkspaceFolderPickOptionsMain): Promise<theia.WorkspaceFolder | undefined>;\n    $startFileSearch(includePattern: string, includeFolder: string | undefined, options: FindFilesOptions, token: theia.CancellationToken): PromiseLike<UriComponents[]>;\n    $findTextInFiles(query: theia.TextSearchQuery, options: theia.FindTextInFilesOptions, searchRequestId: number,\n        token?: theia.CancellationToken): Promise<theia.TextSearchComplete>\n    $registerTextDocumentContentProvider(scheme: string): Promise<void>;\n    $unregisterTextDocumentContentProvider(scheme: string): void;\n    $onTextDocumentContentChange(uri: string, content: string): void;\n    $updateWorkspaceFolders(start: number, deleteCount?: number, ...rootsToAdd: string[]): Promise<void>;\n    $getWorkspace(): Promise<files.FileStat | undefined>;\n    $requestWorkspaceTrust(options?: theia.WorkspaceTrustRequestOptions): Promise<boolean | undefined>;\n    $resolveProxy(url: string): Promise<string | undefined>;\n    $registerCanonicalUriProvider(scheme: string): Promise<void | undefined>;\n    $unregisterCanonicalUriProvider(scheme: string): void;\n    $getCanonicalUri(uri: string, targetScheme: string, token: theia.CancellationToken): Promise<string | undefined>;\n    $resolveDecoding(resource: UriComponents | undefined, options?: { encoding?: string }): Promise<{ preferredEncoding: string; guessEncoding: boolean; }>;\n    $resolveEncoding(resource: UriComponents | undefined, options?: { encoding?: string }): Promise<{ encoding: string; hasBOM: boolean }>;\n    $getValidEncoding(uri: UriComponents | undefined, detectedEncoding: string | undefined, opts: { encoding: string; } | undefined): Promise<string>;\n}\n\nexport interface WorkspaceExt {\n    $onWorkspaceFoldersChanged(event: WorkspaceRootsChangeEvent): void;\n    $onWorkspaceLocationChanged(event: files.FileStat | undefined): void;\n    $provideTextDocumentContent(uri: string): Promise<string | undefined | null>;\n    $onTextSearchResult(searchRequestId: number, done: boolean, result?: SearchInWorkspaceResult): void;\n    $onWorkspaceTrustChanged(trust: boolean | undefined): void;\n    $registerEditSessionIdentityProvider(scheme: string, provider: theia.EditSessionIdentityProvider): theia.Disposable;\n    registerCanonicalUriProvider(scheme: string, provider: theia.CanonicalUriProvider): theia.Disposable;\n    $disposeCanonicalUriProvider(scheme: string): void;\n    getCanonicalUri(uri: theia.Uri, options: theia.CanonicalUriRequestOptions, token: CancellationToken): theia.ProviderResult<theia.Uri>;\n    $provideCanonicalUri(uri: string, targetScheme: string, token: CancellationToken): Promise<string | undefined>;\n}\n\nexport interface TimelineExt {\n    $getTimeline(source: string, uri: UriComponents, options: theia.TimelineOptions, internalOptions?: InternalTimelineOptions): Promise<Timeline | undefined>;\n}\n\nexport interface TimelineMain {\n    $registerTimelineProvider(provider: TimelineProviderDescriptor): Promise<void>;\n    $fireTimelineChanged(e: TimelineChangeEvent): Promise<void>;\n    $unregisterTimelineProvider(source: string): Promise<void>;\n}\n\nexport interface ThemingExt {\n    $onColorThemeChange(type: ThemeType): void;\n}\nexport interface ThemingMain extends Disposable {\n}\n\nexport interface DialogsMain {\n    $showOpenDialog(options: OpenDialogOptionsMain): Promise<string[] | undefined>;\n    $showSaveDialog(options: SaveDialogOptionsMain): Promise<string | undefined>;\n    $showUploadDialog(options: UploadDialogOptionsMain): Promise<string[] | undefined>;\n}\n\nexport interface RegisterTreeDataProviderOptions {\n    manageCheckboxStateManually?: boolean;\n    showCollapseAll?: boolean\n    canSelectMany?: boolean\n    dragMimeTypes?: string[]\n    dropMimeTypes?: string[]\n}\n\nexport interface TreeViewRevealOptions {\n    readonly select: boolean\n    readonly focus: boolean\n    readonly expand: boolean | number\n}\n\nexport interface TreeViewsMain {\n    $registerTreeDataProvider(treeViewId: string, options?: RegisterTreeDataProviderOptions): void;\n    $readDroppedFile(contentId: string): Promise<BinaryBuffer>;\n    $unregisterTreeDataProvider(treeViewId: string): void;\n    $refresh(treeViewId: string, itemIds?: string[]): Promise<void>;\n    $reveal(treeViewId: string, elementParentChain: string[], options: TreeViewRevealOptions): Promise<any>;\n    $setMessage(treeViewId: string, message: string): void;\n    $setTitle(treeViewId: string, title: string): void;\n    $setDescription(treeViewId: string, description: string): void;\n    $setBadge(treeViewId: string, badge: theia.ViewBadge | undefined): void;\n}\nexport class DataTransferFileDTO {\n    constructor(readonly name: string, readonly contentId: string, readonly uri?: UriComponents) { }\n\n    static is(value: string | DataTransferFileDTO): value is DataTransferFileDTO {\n        return !(typeof value === 'string');\n    }\n}\n\nexport interface TreeViewsExt {\n    $checkStateChanged(treeViewId: string, itemIds: { id: string, checked: boolean }[]): Promise<void>;\n    $dragStarted(treeViewId: string, treeItemIds: string[], token: CancellationToken): Promise<UriComponents[] | undefined>;\n    $dragEnd(treeViewId: string): Promise<void>;\n    $drop(treeViewId: string, treeItemId: string | undefined, dataTransferItems: [string, string | DataTransferFileDTO][], token: CancellationToken): Promise<void>;\n    $getChildren(treeViewId: string, treeItemId: string | undefined): Promise<TreeViewItem[] | undefined>;\n    $hasResolveTreeItem(treeViewId: string): Promise<boolean>;\n    $resolveTreeItem(treeViewId: string, treeItemId: string, token: CancellationToken): Promise<TreeViewItem | undefined>;\n    $setExpanded(treeViewId: string, treeItemId: string, expanded: boolean): Promise<any>;\n    $setSelection(treeViewId: string, treeItemIds: string[]): Promise<void>;\n    $setVisible(treeViewId: string, visible: boolean): Promise<void>;\n}\n\nexport interface TreeViewItemCheckboxInfo {\n    checked: boolean;\n    tooltip?: string;\n    accessibilityInformation?: AccessibilityInformation\n}\n\nexport interface TreeViewItem {\n\n    id: string;\n\n    label: string;\n    /** Label highlights given as tuples of inclusive start index and exclusive end index. */\n    highlights?: [number, number][];\n\n    description?: string | boolean;\n\n    /* font-awesome icon for compatibility */\n    icon?: string;\n    iconUrl?: IconUrl;\n\n    themeIcon?: ThemeIcon;\n\n    resourceUri?: UriComponents;\n\n    tooltip?: string | MarkdownString;\n\n    collapsibleState?: TreeViewItemCollapsibleState;\n\n    checkboxInfo?: TreeViewItemCheckboxInfo;\n\n    contextValue?: string;\n\n    command?: Command;\n\n    accessibilityInformation?: theia.AccessibilityInformation;\n\n}\n\nexport interface TreeViewItemReference {\n    viewId: string\n    itemId: string\n}\nexport namespace TreeViewItemReference {\n    export function is(arg: unknown): arg is TreeViewItemReference {\n        return isObject(arg) && isString(arg.viewId) && isString(arg.itemId);\n    }\n}\n\n/**\n * Collapsible state of the tree item\n */\nexport enum TreeViewItemCollapsibleState {\n    /**\n     * Determines an item can be neither collapsed nor expanded. Implies it has no children.\n     */\n    None = 0,\n    /**\n     * Determines an item is collapsed\n     */\n    Collapsed = 1,\n    /**\n     * Determines an item is expanded\n     */\n    Expanded = 2\n}\n\nexport interface WindowMain {\n    $openUri(uri: UriComponents): Promise<boolean>;\n    $asExternalUri(uri: UriComponents): Promise<UriComponents>;\n}\n\nexport interface WindowStateExt {\n    $onDidChangeWindowFocus(focused: boolean): void;\n    $onDidChangeWindowActive(active: boolean): void;\n}\n\nexport interface NotificationExt {\n    withProgress<R>(\n        options: ProgressOptions,\n        task: (progress: Progress<{ message?: string; increment?: number }>, token: CancellationToken) => PromiseLike<R>\n    ): PromiseLike<R>;\n    $acceptProgressCanceled(progressId: string): void;\n}\n\nexport interface ScmCommandArg {\n    sourceControlHandle: number\n    resourceGroupHandle?: number\n    resourceStateHandle?: number\n}\nexport namespace ScmCommandArg {\n    export function is(arg: unknown): arg is ScmCommandArg {\n        return isObject(arg) && 'sourceControlHandle' in arg;\n    }\n}\n\nexport interface ScmExt {\n    createSourceControl(plugin: Plugin, id: string, label: string, rootUri?: theia.Uri): theia.SourceControl;\n    getLastInputBox(plugin: Plugin): theia.SourceControlInputBox | undefined;\n    $onInputBoxValueChange(sourceControlHandle: number, message: string): Promise<void>;\n    $executeResourceCommand(sourceControlHandle: number, groupHandle: number, resourceHandle: number): Promise<void>;\n    $validateInput(sourceControlHandle: number, value: string, cursorPosition: number): Promise<[string, number] | undefined>;\n    $setSelectedSourceControl(selectedSourceControlHandle: number | undefined): Promise<void>;\n    $provideOriginalResource(sourceControlHandle: number, uri: string, token: theia.CancellationToken): Promise<UriComponents | undefined>;\n}\n\nexport namespace TimelineCommandArg {\n    export function is(arg: unknown): arg is TimelineCommandArg {\n        return isObject(arg) && 'timelineHandle' in arg;\n    }\n}\nexport interface TimelineCommandArg {\n    timelineHandle: string;\n    source: string;\n    uri: string;\n}\n\nexport interface DecorationRequest {\n    readonly id: number;\n    readonly uri: UriComponents;\n}\n\nexport type DecorationData = [boolean, string, string, ThemeColor];\nexport interface DecorationReply { [id: number]: DecorationData; }\n\nexport namespace CommentsCommandArg {\n    export function is(arg: unknown): arg is CommentsCommandArg {\n        return isObject(arg) && 'commentControlHandle' in arg && 'commentThreadHandle' in arg && 'text' in arg && !('commentUniqueId' in arg);\n    }\n}\nexport interface CommentsCommandArg {\n    commentControlHandle: number;\n    commentThreadHandle: number;\n    text: string\n}\n\nexport namespace CommentsContextCommandArg {\n    export function is(arg: unknown): arg is CommentsContextCommandArg {\n        return isObject(arg) && 'commentControlHandle' in arg && 'commentThreadHandle' in arg && 'commentUniqueId' in arg && !('text' in arg);\n    }\n}\nexport interface CommentsContextCommandArg {\n    commentControlHandle: number;\n    commentThreadHandle: number;\n    commentUniqueId: number\n}\n\nexport namespace CommentsEditCommandArg {\n    export function is(arg: unknown): arg is CommentsEditCommandArg {\n        return isObject(arg) && 'commentControlHandle' in arg && 'commentThreadHandle' in arg && 'commentUniqueId' in arg && 'text' in arg;\n    }\n}\nexport interface CommentsEditCommandArg {\n    commentControlHandle: number;\n    commentThreadHandle: number;\n    commentUniqueId: number\n    text: string\n}\n\nexport interface DecorationsExt {\n    registerFileDecorationProvider(provider: theia.FileDecorationProvider, pluginInfo: PluginInfo): theia.Disposable\n    $provideDecorations(handle: number, requests: DecorationRequest[], token: CancellationToken): Promise<DecorationReply>;\n}\n\nexport interface DecorationsMain {\n    $registerDecorationProvider(handle: number): Promise<void>;\n    $unregisterDecorationProvider(handle: number): void;\n    $onDidChange(handle: number, resources: UriComponents[] | null): void;\n}\n\nexport interface ScmMain {\n    $registerSourceControl(sourceControlHandle: number, id: string, label: string, rootUri?: UriComponents): Promise<void>;\n    $updateSourceControl(sourceControlHandle: number, features: SourceControlProviderFeatures): Promise<void>;\n    $unregisterSourceControl(sourceControlHandle: number): Promise<void>;\n\n    $registerGroups(sourceControlHandle: number, groups: ScmRawResourceGroup[], splices: ScmRawResourceSplices[]): void;\n    $updateGroup(sourceControlHandle: number, groupHandle: number, features: SourceControlGroupFeatures): void;\n    $updateGroupLabel(sourceControlHandle: number, groupHandle: number, label: string): void;\n    $unregisterGroup(sourceControlHandle: number, groupHandle: number): void;\n\n    $spliceResourceStates(sourceControlHandle: number, splices: ScmRawResourceSplices[]): void;\n\n    $setInputBoxValue(sourceControlHandle: number, value: string): void;\n    $setInputBoxPlaceholder(sourceControlHandle: number, placeholder: string): void;\n    $setInputBoxVisible(sourceControlHandle: number, visible: boolean): void;\n    $setInputBoxEnabled(sourceControlHandle: number, enabled: boolean): void;\n}\n\nexport interface SourceControlProviderFeatures {\n    hasQuickDiffProvider?: boolean;\n    count?: number;\n    commitTemplate?: string;\n    acceptInputCommand?: Command;\n    statusBarCommands?: Command[];\n}\n\nexport interface SourceControlGroupFeatures {\n    hideWhenEmpty: boolean | undefined;\n    contextValue: string | undefined;\n}\n\nexport interface ScmRawResource {\n    handle: number,\n    sourceUri: UriComponents,\n    icons: (IconUrl | ThemeIcon | undefined)[], /* icons: light, dark */\n    tooltip: string,\n    strikeThrough: boolean,\n    faded: boolean,\n    contextValue: string,\n    command: Command | undefined\n}\n\nexport interface ScmRawResourceGroup {\n    handle: number,\n    id: string,\n    label: string,\n    features: SourceControlGroupFeatures\n}\n\nexport interface ScmRawResourceSplice {\n    start: number,\n    deleteCount: number,\n    rawResources: ScmRawResource[]\n}\n\nexport interface ScmRawResourceSplices {\n    handle: number,\n    splices: ScmRawResourceSplice[]\n}\n\nexport interface SourceControlResourceState {\n    readonly handle: number\n    /**\n     * The uri of the underlying resource inside the workspace.\n     */\n    readonly resourceUri: string;\n\n    /**\n     * The command which should be run when the resource\n     * state is open in the Source Control viewlet.\n     */\n    readonly command?: Command;\n\n    /**\n     * The decorations for this source control\n     * resource state.\n     */\n    readonly decorations?: SourceControlResourceDecorations;\n\n    readonly letter?: string;\n\n    readonly colorId?: string\n}\n\n/**\n * The decorations for a [source control resource state](#SourceControlResourceState).\n * Can be independently specified for light and dark themes.\n */\nexport interface SourceControlResourceDecorations {\n\n    /**\n     * Whether the source control resource state should be striked-through in the UI.\n     */\n    readonly strikeThrough?: boolean;\n\n    /**\n     * Whether the source control resource state should be faded in the UI.\n     */\n    readonly faded?: boolean;\n\n    /**\n     * The title for a specific source control resource state.\n     */\n    readonly tooltip?: string;\n\n    /**\n     * The icon path for a specific source control resource state.\n     */\n    readonly iconPath?: string;\n}\n\nexport interface NotificationMain {\n    $startProgress(options: NotificationMain.StartProgressOptions): Promise<string>;\n    $stopProgress(id: string): void;\n    $updateProgress(id: string, report: NotificationMain.ProgressReport): void;\n}\nexport namespace NotificationMain {\n    export interface StartProgressOptions {\n        title: string;\n        location?: string;\n        cancellable?: boolean;\n    }\n    export interface ProgressReport {\n        message?: string;\n        increment?: number;\n        total?: number;\n    }\n}\n\nexport enum EditorPosition {\n    ONE = 0,\n    TWO = 1,\n    THREE = 2,\n    FOUR = 3,\n    FIVE = 4,\n    SIX = 5,\n    SEVEN = 6,\n    EIGHT = 7,\n    NINE = 8\n}\n\nexport interface Position {\n    readonly lineNumber: number;\n    readonly column: number;\n}\n\nexport interface Selection {\n    /**\n     * The line number on which the selection has started.\n     */\n    readonly selectionStartLineNumber: number;\n    /**\n     * The column on `selectionStartLineNumber` where the selection has started.\n     */\n    readonly selectionStartColumn: number;\n    /**\n     * The line number on which the selection has ended.\n     */\n    readonly positionLineNumber: number;\n    /**\n     * The column on `positionLineNumber` where the selection has ended.\n     */\n    readonly positionColumn: number;\n}\n\nexport interface TextEditorConfiguration {\n    tabSize: number;\n    indentSize: number;\n    insertSpaces: boolean;\n    cursorStyle: TextEditorCursorStyle;\n    lineNumbers: TextEditorLineNumbersStyle;\n}\n\nexport interface TextEditorConfigurationUpdate {\n    tabSize?: number | 'auto';\n    indentSize?: number | 'tabSize';\n    insertSpaces?: boolean | 'auto';\n    cursorStyle?: TextEditorCursorStyle;\n    lineNumbers?: TextEditorLineNumbersStyle;\n}\n\nexport enum TextEditorRevealType {\n    Default = 0,\n    InCenter = 1,\n    InCenterIfOutsideViewport = 2,\n    AtTop = 3\n}\n\nexport interface SelectionChangeEvent {\n    selections: Selection[];\n    source?: string;\n}\n\nexport interface EditorChangedPropertiesData {\n    options?: TextEditorConfiguration;\n    selections?: SelectionChangeEvent;\n    visibleRanges?: Range[];\n}\n\nexport interface TextEditorPositionData {\n    [id: string]: EditorPosition;\n}\n\nexport interface TextEditorsExt {\n    $acceptEditorPropertiesChanged(id: string, props: EditorChangedPropertiesData): void;\n    $acceptEditorPositionData(data: TextEditorPositionData): void;\n}\n\nexport interface SingleEditOperation {\n    range?: Range;\n    text?: string;\n    forceMoveMarkers?: boolean;\n}\n\nexport interface UndoStopOptions {\n    undoStopBefore: boolean;\n    undoStopAfter: boolean;\n}\n\nexport interface ApplyEditsOptions extends UndoStopOptions {\n    setEndOfLine: EndOfLine | undefined;\n}\n\nexport interface SnippetEditOptions extends UndoStopOptions {\n    keepWhitespace?: boolean;\n}\n\nexport interface ThemeColor {\n    id: string;\n}\n\nexport interface ThemeIcon {\n    id: string;\n    color?: ThemeColor;\n}\n\n/**\n * Describes the behavior of decorations when typing/editing near their edges.\n */\nexport enum TrackedRangeStickiness {\n    AlwaysGrowsWhenTypingAtEdges = 0,\n    NeverGrowsWhenTypingAtEdges = 1,\n    GrowsOnlyWhenTypingBefore = 2,\n    GrowsOnlyWhenTypingAfter = 3,\n}\nexport interface ContentDecorationRenderOptions {\n    contentText?: string;\n    contentIconPath?: UriComponents;\n\n    border?: string;\n    borderColor?: string | ThemeColor;\n    fontStyle?: string;\n    fontWeight?: string;\n    textDecoration?: string;\n    color?: string | ThemeColor;\n    backgroundColor?: string | ThemeColor;\n\n    margin?: string;\n    width?: string;\n    height?: string;\n}\n\nexport interface ThemeDecorationRenderOptions {\n    backgroundColor?: string | ThemeColor;\n\n    outline?: string;\n    outlineColor?: string | ThemeColor;\n    outlineStyle?: string;\n    outlineWidth?: string;\n\n    border?: string;\n    borderColor?: string | ThemeColor;\n    borderRadius?: string;\n    borderSpacing?: string;\n    borderStyle?: string;\n    borderWidth?: string;\n\n    fontStyle?: string;\n    fontWeight?: string;\n    textDecoration?: string;\n    cursor?: string;\n    color?: string | ThemeColor;\n    opacity?: string;\n    letterSpacing?: string;\n\n    gutterIconPath?: UriComponents;\n    gutterIconSize?: string;\n\n    overviewRulerColor?: string | ThemeColor;\n\n    before?: ContentDecorationRenderOptions;\n    after?: ContentDecorationRenderOptions;\n}\n\nexport interface DecorationRenderOptions extends ThemeDecorationRenderOptions {\n    isWholeLine?: boolean;\n    rangeBehavior?: TrackedRangeStickiness;\n    overviewRulerLane?: OverviewRulerLane;\n\n    light?: ThemeDecorationRenderOptions;\n    dark?: ThemeDecorationRenderOptions;\n}\n\nexport interface ThemeDecorationInstanceRenderOptions {\n    before?: ContentDecorationRenderOptions;\n    after?: ContentDecorationRenderOptions;\n}\n\nexport interface DecorationInstanceRenderOptions extends ThemeDecorationInstanceRenderOptions {\n    light?: ThemeDecorationInstanceRenderOptions;\n    dark?: ThemeDecorationInstanceRenderOptions;\n}\n\nexport interface DecorationOptions {\n    range: Range;\n    hoverMessage?: MarkdownString | MarkdownString[];\n    renderOptions?: DecorationInstanceRenderOptions;\n}\n\nexport interface TextEditorsMain {\n    $tryShowTextDocument(uri: UriComponents, options?: TextDocumentShowOptions): Promise<void>;\n    $registerTextEditorDecorationType(key: string, options: DecorationRenderOptions): void;\n    $removeTextEditorDecorationType(key: string): void;\n    $tryHideEditor(id: string): Promise<void>;\n    $trySetOptions(id: string, options: TextEditorConfigurationUpdate): Promise<void>;\n    $trySetDecorations(id: string, key: string, ranges: DecorationOptions[]): Promise<void>;\n    $trySetDecorationsFast(id: string, key: string, ranges: number[]): Promise<void>;\n    $tryRevealRange(id: string, range: Range, revealType: TextEditorRevealType): Promise<void>;\n    $trySetSelections(id: string, selections: Selection[]): Promise<void>;\n    $tryApplyEdits(id: string, modelVersionId: number, edits: SingleEditOperation[], opts: ApplyEditsOptions): Promise<boolean>;\n    $tryApplyWorkspaceEdit(workspaceEditDto: WorkspaceEditDto, metadata?: WorkspaceEditMetadataDto): Promise<boolean>;\n    $tryInsertSnippet(id: string, template: string, selections: Range[], opts: SnippetEditOptions): Promise<boolean>;\n    $save(uri: UriComponents): PromiseLike<UriComponents | undefined>;\n    $saveAs(uri: UriComponents): PromiseLike<UriComponents | undefined>;\n    $saveAll(includeUntitled?: boolean): Promise<boolean>;\n    $getDiffInformation(id: string): Promise<theia.LineChange[]>;\n}\n\nexport interface ModelAddedData {\n    uri: UriComponents;\n    versionId: number;\n    lines: string[];\n    languageId?: string;\n    EOL: string;\n    modeId: string;\n    isDirty: boolean;\n    encoding: string;\n}\n\nexport interface TextEditorAddData {\n    id: string;\n    documentUri: UriComponents;\n    options: TextEditorConfiguration;\n    selections: Selection[];\n    visibleRanges: Range[];\n    editorPosition?: EditorPosition;\n}\n\nexport interface EditorsAndDocumentsDelta {\n    removedDocuments?: UriComponents[];\n    addedDocuments?: ModelAddedData[];\n    removedEditors?: string[];\n    addedEditors?: TextEditorAddData[];\n    /**\n     * undefined means no changes\n     * null means no active\n     * string means id of active\n     */\n    newActiveEditor?: string | null;\n}\n\nexport interface EditorsAndDocumentsExt {\n    $acceptEditorsAndDocumentsDelta(delta: EditorsAndDocumentsDelta): void;\n}\n\nexport interface ModelContentChange {\n    readonly range: Range;\n    readonly rangeOffset: number;\n    readonly rangeLength: number;\n    readonly text: string;\n}\nexport interface ModelChangedEvent {\n    readonly changes: ModelContentChange[];\n\n    readonly eol: string;\n\n    readonly versionId: number;\n\n    readonly reason: TextDocumentChangeReason | undefined;\n}\n\nexport interface DocumentsExt {\n    $acceptModelModeChanged(startUrl: UriComponents, oldModeId: string, newModeId: string): void;\n    $acceptModelSaved(strUrl: UriComponents): void;\n    $acceptModelWillSave(strUrl: UriComponents, reason: theia.TextDocumentSaveReason, saveTimeout: number): Promise<SingleEditOperation[]>;\n    $acceptDirtyStateChanged(strUrl: UriComponents, isDirty: boolean): void;\n    $acceptEncodingChanged(strUrl: UriComponents, encoding: string): void;\n    $acceptModelChanged(strUrl: UriComponents, e: ModelChangedEvent, isDirty: boolean): void;\n}\n\nexport interface DocumentsMain {\n    $tryCreateDocument(options?: { language?: string; content?: string; encoding?: string }): Promise<UriComponents>;\n    $tryShowDocument(uri: UriComponents, options?: TextDocumentShowOptions): Promise<void>;\n    $tryOpenDocument(uri: UriComponents, encoding?: string): Promise<boolean>;\n    $trySaveDocument(uri: UriComponents): Promise<boolean>;\n}\n\nexport interface EnvMain {\n    $getEnvVariable(envVarName: string): Promise<string | undefined>;\n    $getClientOperatingSystem(): Promise<theia.OperatingSystem>;\n}\n\nexport interface PreferenceRegistryMain {\n    $updateConfigurationOption(\n        target: boolean | ConfigurationTarget | undefined,\n        key: string,\n        value: any,\n        resource?: string,\n        withLanguageOverride?: boolean\n    ): PromiseLike<void>;\n    $removeConfigurationOption(\n        target: boolean | ConfigurationTarget | undefined,\n        key: string,\n        resource?: string,\n        withLanguageOverride?: boolean,\n    ): PromiseLike<void>;\n}\n\nexport interface PreferenceChangeExt {\n    preferenceName: string,\n    newValue: any,\n    /**\n     * The URI the folder affected, or undefined if User scope.\n     */\n    scope?: string;\n}\n\nexport interface TerminalOptionsExt {\n    attributes?: {\n        [key: string]: string;\n    }\n}\n\nexport interface PreferenceRegistryExt {\n    $acceptConfigurationChanged(data: { [key: string]: any }, eventData: PreferenceChangeExt[]): void;\n}\n\nexport interface OutputChannelRegistryMain {\n    $append(channelName: string, value: string, pluginInfo: PluginInfo): PromiseLike<void>;\n    $clear(channelName: string): PromiseLike<void>;\n    $dispose(channelName: string): PromiseLike<void>;\n    $reveal(channelName: string, preserveFocus: boolean): PromiseLike<void>;\n    $close(channelName: string): PromiseLike<void>;\n}\n\nexport type CharacterPair = [string, string];\n\nexport interface CommentRule {\n    lineComment?: string;\n    blockComment?: CharacterPair;\n}\n\nexport interface SerializedRegExp {\n    pattern: string;\n    flags?: string;\n}\n\nexport interface SerializedIndentationRule {\n    decreaseIndentPattern?: SerializedRegExp;\n    increaseIndentPattern?: SerializedRegExp;\n    indentNextLinePattern?: SerializedRegExp;\n    unIndentedLinePattern?: SerializedRegExp;\n}\n\nexport interface SerializedOnEnterRule {\n    beforeText: SerializedRegExp;\n    afterText?: SerializedRegExp;\n    previousLineText?: SerializedRegExp;\n    action: SerializedEnterAction;\n}\n\nexport interface SerializedEnterAction {\n    indentAction: IndentAction;\n    outdentCurrentLine?: boolean;\n    appendText?: string;\n    removeText?: number;\n}\n\nexport interface SerializedAutoClosingPair {\n    open: string;\n    close: string;\n    notIn?: string[];\n}\n\nexport interface SerializedLanguageConfiguration {\n    comments?: CommentRule;\n    brackets?: CharacterPair[];\n    wordPattern?: SerializedRegExp;\n    indentationRules?: SerializedIndentationRule;\n    onEnterRules?: SerializedOnEnterRule[];\n    autoClosingPairs?: SerializedAutoClosingPair[]\n}\n\nexport interface CodeActionDto {\n    title: string;\n    edit?: WorkspaceEditDto;\n    diagnostics?: MarkerData[];\n    command?: Command;\n    kind?: string;\n    isPreferred?: boolean;\n    disabled?: string;\n}\n\nexport interface WorkspaceEditEntryMetadataDto {\n    needsConfirmation: boolean;\n    label: string;\n    description?: string;\n    iconPath?: UriComponents | ThemeIcon | {\n        light: UriComponents;\n        dark: UriComponents;\n    };\n}\n\nexport interface WorkspaceFileEditDto {\n    oldResource?: UriComponents;\n    newResource?: UriComponents;\n    options?: FileOperationOptions;\n    metadata?: WorkspaceEditEntryMetadataDto;\n}\n\nexport interface WorkspaceTextEditDto {\n    resource: UriComponents;\n    modelVersionId?: number;\n    textEdit: TextEdit & { insertAsSnippet?: boolean, keepWhitespace?: boolean };\n    metadata?: WorkspaceEditEntryMetadataDto;\n}\nexport namespace WorkspaceTextEditDto {\n    export function is(arg: WorkspaceTextEditDto | WorkspaceFileEditDto): arg is WorkspaceTextEditDto {\n        return !!arg\n            && 'resource' in arg\n            && 'textEdit' in arg\n            && arg.textEdit !== null\n            && typeof arg.textEdit === 'object';\n    }\n}\nexport interface WorkspaceEditMetadataDto {\n    isRefactoring?: boolean;\n}\n\nexport type CellEditOperationDto =\n    {\n        editType: notebookCommon.CellEditType.Metadata;\n        index: number;\n        metadata: Record<string, unknown>;\n    } |\n    {\n        editType: notebookCommon.CellEditType.DocumentMetadata;\n        metadata: Record<string, unknown>;\n    } |\n    {\n        editType: notebookCommon.CellEditType.Replace;\n        index: number;\n        count: number;\n        cells: NotebookCellDataDto[];\n    };\n\nexport interface NotebookWorkspaceEditMetadataDto {\n    needsConfirmation: boolean;\n    label: string;\n    description?: string;\n}\n\nexport interface WorkspaceNotebookCellEditDto {\n    metadata?: NotebookWorkspaceEditMetadataDto;\n    resource: UriComponents;\n    cellEdit: CellEditOperationDto;\n}\n\nexport namespace WorkspaceNotebookCellEditDto {\n    export function is(arg: WorkspaceNotebookCellEditDto | WorkspaceFileEditDto | WorkspaceTextEditDto): arg is WorkspaceNotebookCellEditDto {\n        return !!arg\n            && 'resource' in arg\n            && 'cellEdit' in arg\n            && arg.cellEdit !== null\n            && typeof arg.cellEdit === 'object';\n    }\n}\n\nexport interface WorkspaceEditDto {\n    edits: Array<WorkspaceTextEditDto | WorkspaceFileEditDto | WorkspaceNotebookCellEditDto>;\n}\n\nexport interface CommandProperties {\n    command: string;\n    args?: string[];\n    options?: {\n        cwd?: string;\n        [key: string]: any\n    };\n}\n\nexport type TaskGroupKind = 'build' | 'test' | 'rebuild' | 'clean';\nexport interface TaskDto {\n    type: string;\n    executionType?: 'shell' | 'process' | 'customExecution'; // the task execution type\n    executionId?: string,\n    label: string;\n    source?: string;\n    scope: string | number;\n    // Provide a more specific type when necessary (see ProblemMatcherContribution)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    problemMatcher?: any;\n    group?: {\n        kind: TaskGroupKind;\n        isDefault: boolean;\n    }\n    detail?: string;\n    presentation?: TaskPresentationOptionsDTO;\n    runOptions?: RunOptionsDTO;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key: string]: any;\n}\n\nexport interface RunOptionsDTO {\n    reevaluateOnRerun?: boolean;\n}\n\nexport interface TaskPresentationOptionsDTO {\n    reveal?: number;\n    focus?: boolean;\n    echo?: boolean;\n    panel?: number;\n    showReuseMessage?: boolean;\n    clear?: boolean;\n    close?: boolean;\n}\n\nexport interface TaskExecutionDto {\n    id: number;\n    task: TaskDto;\n}\n\nexport interface ProcessTaskDto extends TaskDto, CommandProperties {\n    windows?: CommandProperties;\n}\n\nexport interface PluginInfo {\n    id: string;\n    name: string;\n    displayName?: string;\n}\n\nexport interface LanguageStatus {\n    readonly id: string;\n    readonly name: string;\n    readonly selector: SerializedDocumentFilter[];\n    readonly severity: Severity;\n    readonly label: string;\n    readonly detail: string;\n    readonly busy: boolean;\n    readonly source: string;\n    readonly command: Command | undefined;\n    readonly accessibilityInfo: theia.AccessibilityInformation | undefined;\n}\n\nexport interface LanguagesExt {\n    $provideCompletionItems(handle: number, resource: UriComponents, position: Position,\n        context: CompletionContext, token: CancellationToken): Promise<CompletionResultDto | undefined>;\n    $resolveCompletionItem(handle: number, chainedId: ChainedCacheId, token: CancellationToken): Promise<Completion | undefined>;\n    $releaseCompletionItems(handle: number, id: number): void;\n    $provideImplementation(handle: number, resource: UriComponents, position: Position, token: CancellationToken): Promise<Definition | undefined>;\n    $provideTypeDefinition(handle: number, resource: UriComponents, position: Position, token: CancellationToken): Promise<Definition | undefined>;\n    $provideDefinition(handle: number, resource: UriComponents, position: Position, token: CancellationToken): Promise<Definition | undefined>;\n    $provideDeclaration(handle: number, resource: UriComponents, position: Position, token: CancellationToken): Promise<Definition | undefined>;\n    $provideReferences(handle: number, resource: UriComponents, position: Position, context: ReferenceContext, token: CancellationToken): Promise<Location[] | undefined>;\n    $provideSignatureHelp(\n        handle: number, resource: UriComponents, position: Position, context: SignatureHelpContext, token: CancellationToken\n    ): Promise<SignatureHelp | undefined>;\n    $releaseSignatureHelp(handle: number, id: number): void;\n    $provideHover(handle: number, resource: UriComponents, position: Position, token: CancellationToken): Promise<Hover | undefined>;\n    $provideEvaluatableExpression(handle: number, resource: UriComponents, position: Position, token: CancellationToken): Promise<EvaluatableExpression | undefined>;\n    $provideInlineValues(handle: number, resource: UriComponents, range: Range, context: InlineValueContext, token: CancellationToken): Promise<InlineValue[] | undefined>;\n    $provideDocumentHighlights(handle: number, resource: UriComponents, position: Position, token: CancellationToken): Promise<DocumentHighlight[] | undefined>;\n    $provideDocumentFormattingEdits(handle: number, resource: UriComponents,\n        options: FormattingOptions, token: CancellationToken): Promise<TextEdit[] | undefined>;\n    $provideDocumentRangeFormattingEdits(handle: number, resource: UriComponents, range: Range,\n        options: FormattingOptions, token: CancellationToken): Promise<TextEdit[] | undefined>;\n    $provideOnTypeFormattingEdits(\n        handle: number,\n        resource: UriComponents,\n        position: Position,\n        ch: string,\n        options: FormattingOptions,\n        token: CancellationToken\n    ): Promise<TextEdit[] | undefined>;\n    $provideDocumentDropEdits(\n        handle: number,\n        resource: UriComponents,\n        position: Position,\n        dataTransfer: DataTransferDTO,\n        token: CancellationToken\n    ): Promise<DocumentDropEdit | undefined>;\n    $provideDocumentLinks(handle: number, resource: UriComponents, token: CancellationToken): Promise<DocumentLink[] | undefined>;\n    $resolveDocumentLink(handle: number, link: DocumentLink, token: CancellationToken): Promise<DocumentLink | undefined>;\n    $releaseDocumentLinks(handle: number, ids: number[]): void;\n    $provideCodeLenses(handle: number, resource: UriComponents, token: CancellationToken): Promise<CodeLensSymbol[] | undefined>;\n    $resolveCodeLens(handle: number, resource: UriComponents, symbol: CodeLensSymbol, token: CancellationToken): Promise<CodeLensSymbol | undefined>;\n    $releaseCodeLenses(handle: number, ids: number[]): void;\n    $provideCodeActions(\n        handle: number,\n        resource: UriComponents,\n        rangeOrSelection: Range | Selection,\n        context: CodeActionContext,\n        token: CancellationToken\n    ): Promise<CodeAction[] | undefined>;\n    $releaseCodeActions(handle: number, cacheIds: number[]): void;\n    $resolveCodeAction(handle: number, cacheId: number, token: CancellationToken): Promise<WorkspaceEditDto | undefined>;\n    $provideDocumentSymbols(handle: number, resource: UriComponents, token: CancellationToken): Promise<DocumentSymbol[] | undefined>;\n    $provideWorkspaceSymbols(handle: number, query: string, token: CancellationToken): PromiseLike<SymbolInformation[]>;\n    $resolveWorkspaceSymbol(handle: number, symbol: SymbolInformation, token: CancellationToken): PromiseLike<SymbolInformation | undefined>;\n    $provideFoldingRange(\n        handle: number,\n        resource: UriComponents,\n        context: FoldingContext,\n        token: CancellationToken\n    ): PromiseLike<FoldingRange[] | undefined>;\n    $provideSelectionRanges(handle: number, resource: UriComponents, positions: Position[], token: CancellationToken): PromiseLike<SelectionRange[][]>;\n    $provideDocumentColors(handle: number, resource: UriComponents, token: CancellationToken): PromiseLike<RawColorInfo[]>;\n    $provideColorPresentations(handle: number, resource: UriComponents, colorInfo: RawColorInfo, token: CancellationToken): PromiseLike<ColorPresentation[]>;\n    $provideInlayHints(handle: number, resource: UriComponents, range: Range, token: CancellationToken): Promise<InlayHintsDto | undefined>;\n    $resolveInlayHint(handle: number, id: ChainedCacheId, token: CancellationToken): Promise<InlayHintDto | undefined>;\n    $releaseInlayHints(handle: number, id: number): void;\n    $provideRenameEdits(handle: number, resource: UriComponents, position: Position, newName: string, token: CancellationToken): PromiseLike<WorkspaceEditDto | undefined>;\n    $resolveRenameLocation(handle: number, resource: UriComponents, position: Position, token: CancellationToken): PromiseLike<RenameLocation | undefined>;\n    $provideDocumentSemanticTokens(handle: number, resource: UriComponents, previousResultId: number, token: CancellationToken): Promise<BinaryBuffer | null>;\n    $releaseDocumentSemanticTokens(handle: number, semanticColoringResultId: number): void;\n    $provideDocumentRangeSemanticTokens(handle: number, resource: UriComponents, range: Range, token: CancellationToken): Promise<BinaryBuffer | null>;\n    $provideRootDefinition(handle: number, resource: UriComponents, location: Position, token: CancellationToken): Promise<CallHierarchyItem[] | undefined>;\n    $provideCallers(handle: number, definition: CallHierarchyItem, token: CancellationToken): Promise<CallHierarchyIncomingCall[] | undefined>;\n    $provideCallees(handle: number, definition: CallHierarchyItem, token: CancellationToken): Promise<CallHierarchyOutgoingCall[] | undefined>;\n    $provideLinkedEditingRanges(handle: number, resource: UriComponents, position: Position, token: CancellationToken): Promise<LinkedEditingRanges | undefined>;\n    $releaseCallHierarchy(handle: number, session?: string): Promise<boolean>;\n    $prepareTypeHierarchy(handle: number, resource: UriComponents, location: Position, token: theia.CancellationToken): Promise<TypeHierarchyItem[] | undefined>\n    $provideSuperTypes(handle: number, sessionId: string, itemId: string, token: theia.CancellationToken): Promise<TypeHierarchyItem[] | undefined>\n    $provideSubTypes(handle: number, sessionId: string, itemId: string, token: theia.CancellationToken): Promise<TypeHierarchyItem[] | undefined>;\n    $releaseTypeHierarchy(handle: number, session?: string): Promise<boolean>;\n    $provideInlineCompletions(handle: number, resource: UriComponents, position: Position, context: InlineCompletionContext, token: CancellationToken): Promise<IdentifiableInlineCompletions | undefined>;\n    $freeInlineCompletionsList(handle: number, pid: number): void;\n}\n\nexport const LanguagesMainFactory = Symbol('LanguagesMainFactory');\nexport interface LanguagesMainFactory {\n    (proxy: RPCProtocol): LanguagesMain;\n}\n\nexport const OutputChannelRegistryFactory = Symbol('OutputChannelRegistryFactory');\nexport interface OutputChannelRegistryFactory {\n    (): OutputChannelRegistryMain;\n}\n\nexport interface LanguagesMain {\n    $getLanguages(): Promise<string[]>;\n    $changeLanguage(resource: UriComponents, languageId: string): Promise<void>;\n    $setLanguageConfiguration(handle: number, languageId: string, configuration: SerializedLanguageConfiguration): void;\n    $unregister(handle: number): void;\n    $registerCompletionSupport(handle: number, pluginInfo: PluginInfo,\n        selector: SerializedDocumentFilter[], triggerCharacters: string[], supportsResolveDetails: boolean): void;\n    $registerImplementationProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void;\n    $registerTypeDefinitionProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void;\n    $registerDefinitionProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void;\n    $registerDeclarationProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void;\n    $registerReferenceProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void;\n    $registerSignatureHelpProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[], metadata: theia.SignatureHelpProviderMetadata): void;\n    $registerHoverProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void;\n    $registerEvaluatableExpressionProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void;\n    $registerInlineValuesProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void;\n    $emitInlineValuesEvent(eventHandle: number, event?: any): void;\n    $registerDocumentHighlightProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void;\n    $registerQuickFixProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[], codeActionKinds?: string[], documentation?: CodeActionProviderDocumentation): void;\n    $clearDiagnostics(id: string): void;\n    $changeDiagnostics(id: string, delta: [string, MarkerData[]][]): void;\n    $registerDocumentFormattingSupport(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void;\n    $registerDocumentDropEditProvider(handle: number, selector: SerializedDocumentFilter[], metadata?: DocumentDropEditProviderMetadata): void\n    $registerRangeFormattingSupport(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void;\n    $registerOnTypeFormattingProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[], autoFormatTriggerCharacters: string[]): void;\n    $registerDocumentLinkProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void;\n    $registerCodeLensSupport(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[], eventHandle?: number): void;\n    $emitCodeLensEvent(eventHandle: number, event?: any): void;\n    $registerOutlineSupport(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[], displayName?: string): void;\n    $registerWorkspaceSymbolProvider(handle: number, pluginInfo: PluginInfo): void;\n    $registerFoldingRangeProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[], eventHandle?: number): void;\n    $emitFoldingRangeEvent(handle: number, event?: any): void;\n    $registerSelectionRangeProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void;\n    $registerDocumentColorProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void;\n    $registerInlayHintsProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[], displayName?: string, eventHandle?: number): void;\n    $emitInlayHintsEvent(eventHandle: number, event?: any): void;\n    $registerRenameProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[], supportsResolveInitialValues: boolean): void;\n    $registerDocumentSemanticTokensProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[],\n        legend: theia.SemanticTokensLegend, eventHandle: number | undefined): void;\n    $emitDocumentSemanticTokensEvent(eventHandle: number): void;\n    $registerDocumentRangeSemanticTokensProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[], legend: theia.SemanticTokensLegend): void;\n    $registerCallHierarchyProvider(handle: number, selector: SerializedDocumentFilter[]): void;\n    $registerLinkedEditingRangeProvider(handle: number, selector: SerializedDocumentFilter[]): void;\n    $registerTypeHierarchyProvider(handle: number, selector: SerializedDocumentFilter[]): void;\n    $setLanguageStatus(handle: number, status: LanguageStatus): void;\n    $removeLanguageStatus(handle: number): void;\n    $registerInlineCompletionsSupport(handle: number, selector: SerializedDocumentFilter[]): void;\n}\n\nexport interface WebviewInitData {\n    webviewResourceRoot: string\n    webviewCspSource: string\n}\n\nexport interface WebviewPanelViewState {\n    readonly active: boolean;\n    readonly visible: boolean;\n    readonly position: number;\n}\n\nexport interface WebviewsExt {\n    $onMessage(handle: string, message: any): void;\n    $onDidChangeWebviewPanelViewState(handle: string, newState: WebviewPanelViewState): void;\n    $onDidDisposeWebviewPanel(handle: string): PromiseLike<void>;\n    $deserializeWebviewPanel(newWebviewHandle: string,\n        viewType: string,\n        title: string,\n        state: any,\n        viewState: WebviewPanelViewState,\n        options: theia.WebviewOptions & theia.WebviewPanelOptions): PromiseLike<void>;\n}\n\nexport interface WebviewsMain {\n    $createWebviewPanel(handle: string,\n        viewType: string,\n        title: string,\n        showOptions: theia.WebviewPanelShowOptions,\n        options: theia.WebviewPanelOptions & theia.WebviewOptions): void;\n    $disposeWebview(handle: string): void;\n    $reveal(handle: string, showOptions: theia.WebviewPanelShowOptions): void;\n    $setTitle(handle: string, value: string): void;\n    $setIconPath(handle: string, value: IconUrl | undefined): void;\n    $setBadge(handle: string, badge: theia.ViewBadge | undefined): void;\n    $setHtml(handle: string, value: string): void;\n    $setOptions(handle: string, options: theia.WebviewOptions): void;\n    $postMessage(handle: string, value: any): Thenable<boolean>;\n\n    $registerSerializer(viewType: string): void;\n    $unregisterSerializer(viewType: string): void;\n}\n\nexport interface WebviewViewsExt {\n    $resolveWebviewView(handle: string,\n        viewType: string,\n        title: string | undefined,\n        state: any,\n        cancellation: CancellationToken): Promise<void>;\n    $onDidChangeWebviewViewVisibility(handle: string, visible: boolean): void;\n    $disposeWebviewView(handle: string): void;\n}\n\nexport interface WebviewViewsMain extends Disposable {\n    $registerWebviewViewProvider(viewType: string,\n        options: { retainContextWhenHidden?: boolean, serializeBuffersForPostMessage: boolean }): void;\n    $unregisterWebviewViewProvider(viewType: string): void;\n\n    $setWebviewViewTitle(handle: string, value: string | undefined): void;\n    $setWebviewViewDescription(handle: string, value: string | undefined): void;\n    $setBadge(handle: string, badge: theia.ViewBadge | undefined): void;\n\n    $show(handle: string, preserveFocus: boolean): void;\n}\n\nexport interface CustomEditorsExt {\n    $resolveWebviewEditor(\n        resource: UriComponents,\n        newWebviewHandle: string,\n        viewType: string,\n        title: string,\n        position: number,\n        options: theia.WebviewPanelOptions,\n        cancellation: CancellationToken): Promise<void>;\n    $createCustomDocument(resource: UriComponents, viewType: string, openContext: theia.CustomDocumentOpenContext, cancellation: CancellationToken): Promise<{ editable: boolean }>;\n    $disposeCustomDocument(resource: UriComponents, viewType: string): Promise<void>;\n    $undo(resource: UriComponents, viewType: string, editId: number, isDirty: boolean): Promise<void>;\n    $redo(resource: UriComponents, viewType: string, editId: number, isDirty: boolean): Promise<void>;\n    $revert(resource: UriComponents, viewType: string, cancellation: CancellationToken): Promise<void>;\n    $disposeEdits(resourceComponents: UriComponents, viewType: string, editIds: number[]): void;\n    $save(resource: UriComponents, viewType: string, cancellation: CancellationToken): Promise<void>;\n    $saveAs(resource: UriComponents, viewType: string, targetResource: UriComponents, cancellation: CancellationToken): Promise<void>;\n    // $backup(resource: UriComponents, viewType: string, cancellation: CancellationToken): Promise<string>;\n    $onMoveCustomEditor(handle: string, newResource: UriComponents, viewType: string): Promise<void>;\n}\n\nexport interface CustomTextEditorCapabilities {\n    readonly supportsMove?: boolean;\n}\n\nexport interface CustomEditorsMain {\n    $registerTextEditorProvider(viewType: string, options: theia.WebviewPanelOptions, capabilities: CustomTextEditorCapabilities): void;\n    $registerCustomEditorProvider(viewType: string, options: theia.WebviewPanelOptions, supportsMultipleEditorsPerDocument: boolean): void;\n    $unregisterEditorProvider(viewType: string): void;\n    $onDidEdit(resource: UriComponents, viewType: string, editId: number, label: string | undefined): void;\n    $onContentChange(resource: UriComponents, viewType: string): void;\n}\n\nexport interface StorageMain {\n    $set(key: string, value: KeysToAnyValues, isGlobal: boolean): Promise<boolean>;\n    $get(key: string, isGlobal: boolean): Promise<KeysToAnyValues>;\n    $getAll(isGlobal: boolean): Promise<KeysToKeysToAnyValue>;\n}\n\nexport interface StorageExt {\n    $updatePluginsWorkspaceData(data: KeysToKeysToAnyValue): void;\n}\n\n/**\n * A DebugConfigurationProviderTriggerKind specifies when the `provideDebugConfigurations` method of a `DebugConfigurationProvider` should be called.\n * Currently there are two situations:\n *  (1) providing debug configurations to populate a newly created `launch.json`\n *  (2) providing dynamically generated configurations when the user asks for them through the UI (e.g. via the \"Select and Start Debugging\" command).\n * A trigger kind is used when registering a `DebugConfigurationProvider` with {@link debug.registerDebugConfigurationProvider}.\n */\nexport enum DebugConfigurationProviderTriggerKind {\n    /**\n     * `DebugConfigurationProvider.provideDebugConfigurations` is called to provide the initial debug\n     * configurations for a newly created launch.json.\n     */\n    Initial = 1,\n    /**\n     * `DebugConfigurationProvider.provideDebugConfigurations` is called to provide dynamically generated debug configurations when the user asks for them through the UI\n     * (e.g. via the \"Select and Start Debugging\" command).\n     */\n    Dynamic = 2\n}\n\nexport interface DebugConfigurationProvider {\n    readonly handle: number;\n    readonly type: string;\n    readonly triggerKind: DebugConfigurationProviderTriggerKind;\n    provideDebugConfigurations?(folder: string | undefined): Promise<theia.DebugConfiguration[]>;\n    resolveDebugConfiguration?(\n        folder: string | undefined,\n        debugConfiguration: theia.DebugConfiguration\n    ): Promise<theia.DebugConfiguration | undefined | null>;\n    resolveDebugConfigurationWithSubstitutedVariables?(\n        folder: string | undefined,\n        debugConfiguration: theia.DebugConfiguration\n    ): Promise<theia.DebugConfiguration | undefined | null>;\n}\n\nexport interface DebugConfigurationProviderDescriptor {\n    readonly handle: number,\n    readonly type: string,\n    readonly trigger: DebugConfigurationProviderTriggerKind,\n    readonly provideDebugConfiguration: boolean,\n    readonly resolveDebugConfigurations: boolean,\n    readonly resolveDebugConfigurationWithSubstitutedVariables: boolean\n}\n\nexport interface DebugExt {\n    $onSessionCustomEvent(sessionId: string, event: string, body?: any): void;\n    $breakpointsDidChange(added: Breakpoint[], removed: string[], changed: Breakpoint[]): void;\n    $sessionDidCreate(sessionId: string): void;\n    $sessionDidStart(sessionId: string): void;\n    $sessionDidDestroy(sessionId: string): void;\n    $sessionDidChange(sessionId: string | undefined): void;\n    $provideDebugConfigurationsByHandle(handle: number, workspaceFolder: string | undefined): Promise<theia.DebugConfiguration[]>;\n    $resolveDebugConfigurationByHandle(\n        handle: number,\n        workspaceFolder: string | undefined,\n        debugConfiguration: theia.DebugConfiguration\n    ): Promise<theia.DebugConfiguration | undefined | null>;\n    $resolveDebugConfigurationWithSubstitutedVariablesByHandle(\n        handle: number,\n        workspaceFolder: string | undefined,\n        debugConfiguration: DebugConfiguration\n    ): Promise<theia.DebugConfiguration | undefined | null>;\n\n    $onDidChangeActiveFrame(frame: DebugStackFrameDTO | undefined): void;\n    $onDidChangeActiveThread(thread: DebugThreadDTO | undefined): void;\n    $createDebugSession(debugConfiguration: DebugConfiguration, workspaceFolder: string | undefined): Promise<string>;\n    $terminateDebugSession(sessionId: string): Promise<void>;\n    $getTerminalCreationOptions(debugType: string): Promise<TerminalOptionsExt | undefined>;\n}\n\nexport interface DebugMain {\n    $appendToDebugConsole(value: string): Promise<void>;\n    $appendLineToDebugConsole(value: string): Promise<void>;\n    $registerDebuggerContribution(description: DebuggerDescription): Promise<void>;\n    $unregisterDebuggerConfiguration(debugType: string): Promise<void>;\n    $registerDebugConfigurationProvider(description: DebugConfigurationProviderDescriptor): void;\n    $unregisterDebugConfigurationProvider(handle: number): Promise<void>;\n    $addBreakpoints(breakpoints: Breakpoint[]): Promise<void>;\n    $removeBreakpoints(breakpoints: string[]): Promise<void>;\n    $startDebugging(folder: theia.WorkspaceFolder | undefined, nameOrConfiguration: string | theia.DebugConfiguration, options: DebugSessionOptions): Promise<boolean>;\n    $stopDebugging(sessionId?: string): Promise<void>;\n    $customRequest(sessionId: string, command: string, args?: any): Promise<DebugProtocol.Response>;\n    $getDebugProtocolBreakpoint(sessionId: string, breakpointId: string): Promise<theia.DebugProtocolBreakpoint | undefined>;\n}\n\nexport interface FileSystemExt {\n    $acceptProviderInfos(scheme: string, capabilities?: files.FileSystemProviderCapabilities): void;\n    $stat(handle: number, resource: UriComponents): Promise<files.Stat>;\n    $readdir(handle: number, resource: UriComponents): Promise<[string, files.FileType][]>;\n    $readFile(handle: number, resource: UriComponents): Promise<BinaryBuffer>;\n    $writeFile(handle: number, resource: UriComponents, content: BinaryBuffer, opts: files.FileWriteOptions): Promise<void>;\n    $rename(handle: number, resource: UriComponents, target: UriComponents, opts: files.FileOverwriteOptions): Promise<void>;\n    $copy(handle: number, resource: UriComponents, target: UriComponents, opts: files.FileOverwriteOptions): Promise<void>;\n    $mkdir(handle: number, resource: UriComponents): Promise<void>;\n    $delete(handle: number, resource: UriComponents, opts: files.FileDeleteOptions): Promise<void>;\n    $watch(handle: number, session: number, resource: UriComponents, opts: files.WatchOptions): void;\n    $unwatch(handle: number, session: number): void;\n    $open(handle: number, resource: UriComponents, opts: files.FileOpenOptions): Promise<number>;\n    $close(handle: number, fd: number): Promise<void>;\n    $read(handle: number, fd: number, pos: number, length: number): Promise<BinaryBuffer>;\n    $write(handle: number, fd: number, pos: number, data: BinaryBuffer): Promise<number>;\n}\n\nexport interface IFileChangeDto {\n    resource: UriComponents;\n    type: files.FileChangeType;\n}\n\nexport interface FileSystemMain {\n    $registerFileSystemProvider(handle: number, scheme: string, capabilities: files.FileSystemProviderCapabilities, readonlyMessage?: MarkdownString): void;\n    $unregisterProvider(handle: number): void;\n    $onFileSystemChange(handle: number, resource: IFileChangeDto[]): void;\n\n    $stat(uri: UriComponents): Promise<files.Stat>;\n    $readdir(resource: UriComponents): Promise<[string, files.FileType][]>;\n    $readFile(resource: UriComponents): Promise<BinaryBuffer>;\n    $writeFile(resource: UriComponents, content: BinaryBuffer): Promise<void>;\n    $rename(resource: UriComponents, target: UriComponents, opts: files.FileOverwriteOptions): Promise<void>;\n    $copy(resource: UriComponents, target: UriComponents, opts: files.FileOverwriteOptions): Promise<void>;\n    $mkdir(resource: UriComponents): Promise<void>;\n    $delete(resource: UriComponents, opts: files.FileDeleteOptions): Promise<void>;\n}\n\nexport interface FileSystemEvents {\n    created: UriComponents[];\n    changed: UriComponents[];\n    deleted: UriComponents[];\n}\n\nexport interface ExtHostFileSystemEventServiceShape {\n    $onFileEvent(events: FileSystemEvents): void;\n    $onWillRunFileOperation(operation: files.FileOperation, target: UriComponents, source: UriComponents | undefined, timeout: number, token: CancellationToken): Promise<any>;\n    $onDidRunFileOperation(operation: files.FileOperation, target: UriComponents, source: UriComponents | undefined): void;\n}\n\nexport interface ClipboardMain {\n    $readText(): Promise<string>;\n    $writeText(value: string): Promise<void>;\n}\n\nexport interface CommentsExt {\n    $createCommentThreadTemplate(commentControllerHandle: number, uriComponents: UriComponents, range: Range | undefined): void;\n    $updateCommentThreadTemplate(commentControllerHandle: number, threadHandle: number, range: Range): Promise<void>;\n    $deleteCommentThread(commentControllerHandle: number, commentThreadHandle: number): Promise<void>;\n    $provideCommentingRanges(commentControllerHandle: number, uriComponents: UriComponents, token: CancellationToken): Promise<{ ranges: Range[]; fileComments: boolean } | undefined>;\n}\n\nexport interface CommentProviderFeatures {\n    options?: CommentOptions;\n}\n\nexport type CommentThreadChanges = Partial<{\n    range: Range,\n    label: string,\n    contextValue: string,\n    comments: Comment[],\n    collapseState: CommentThreadCollapsibleState;\n    state: CommentThreadState;\n    canReply: boolean | theia.CommentAuthorInformation;\n}>;\n\nexport interface CommentsMain {\n    $registerCommentController(handle: number, id: string, label: string): void;\n    $unregisterCommentController(handle: number): void;\n    $updateCommentControllerFeatures(handle: number, features: CommentProviderFeatures): void;\n    $createCommentThread(handle: number, commentThreadHandle: number, threadId: string, resource: UriComponents, range: Range | undefined, extensionId: string): CommentThread | undefined;\n    $updateCommentThread(handle: number, commentThreadHandle: number, threadId: string, resource: UriComponents, changes: CommentThreadChanges): void;\n    $deleteCommentThread(handle: number, commentThreadHandle: number): void;\n    $onDidCommentThreadsChange(handle: number, event: CommentThreadChangedEvent): void;\n}\n\n// #region\n\nexport const enum TabInputKind {\n    UnknownInput,\n    TextInput,\n    TextDiffInput,\n    TextMergeInput,\n    NotebookInput,\n    NotebookDiffInput,\n    CustomEditorInput,\n    WebviewEditorInput,\n    TerminalEditorInput,\n    InteractiveEditorInput,\n}\n\nexport interface UnknownInputDto {\n    kind: TabInputKind.UnknownInput;\n}\n\nexport interface TextInputDto {\n    kind: TabInputKind.TextInput;\n    uri: UriComponents;\n}\n\nexport interface TextDiffInputDto {\n    kind: TabInputKind.TextDiffInput;\n    original: UriComponents;\n    modified: UriComponents;\n}\n\nexport interface TextMergeInputDto {\n    kind: TabInputKind.TextMergeInput;\n    base: UriComponents;\n    input1: UriComponents;\n    input2: UriComponents;\n    result: UriComponents;\n}\n\nexport interface NotebookInputDto {\n    kind: TabInputKind.NotebookInput;\n    notebookType: string;\n    uri: UriComponents;\n}\n\nexport interface NotebookDiffInputDto {\n    kind: TabInputKind.NotebookDiffInput;\n    notebookType: string;\n    original: UriComponents;\n    modified: UriComponents;\n}\n\nexport interface CustomInputDto {\n    kind: TabInputKind.CustomEditorInput;\n    viewType: string;\n    uri: UriComponents;\n}\n\nexport interface WebviewInputDto {\n    kind: TabInputKind.WebviewEditorInput;\n    viewType: string;\n}\n\nexport interface InteractiveEditorInputDto {\n    kind: TabInputKind.InteractiveEditorInput;\n    uri: UriComponents;\n    inputBoxUri: UriComponents;\n}\n\nexport interface TabInputDto {\n    kind: TabInputKind.TerminalEditorInput;\n}\n\nexport type EditorGroupColumn = number;\nexport type AnyInputDto = UnknownInputDto | TextInputDto | TextDiffInputDto | TextMergeInputDto | NotebookInputDto | NotebookDiffInputDto | CustomInputDto | WebviewInputDto | InteractiveEditorInputDto | TabInputDto;\n\nexport interface TabGroupDto {\n    isActive: boolean;\n    viewColumn: EditorGroupColumn;\n    tabs: TabDto[];\n    groupId: number;\n}\n\nexport const enum TabModelOperationKind {\n    TAB_OPEN,\n    TAB_CLOSE,\n    TAB_UPDATE,\n    TAB_MOVE\n}\n\nexport interface TabOperation {\n    readonly kind: TabModelOperationKind.TAB_OPEN | TabModelOperationKind.TAB_CLOSE | TabModelOperationKind.TAB_UPDATE | TabModelOperationKind.TAB_MOVE;\n    readonly index: number;\n    readonly tabDto: TabDto;\n    readonly groupId: number;\n    readonly oldIndex?: number;\n}\n\nexport interface TabDto {\n    id: string;\n    label: string;\n    input: AnyInputDto;\n    editorId?: string;\n    isActive: boolean;\n    isPinned: boolean;\n    isPreview: boolean;\n    isDirty: boolean;\n}\n\nexport interface TabsExt {\n    $acceptEditorTabModel(tabGroups: TabGroupDto[]): void;\n    $acceptTabGroupUpdate(groupDto: TabGroupDto): void;\n    $acceptTabOperation(operation: TabOperation): void;\n}\n\nexport interface TabsMain {\n    $moveTab(tabId: string, index: number, viewColumn: EditorGroupColumn, preserveFocus?: boolean): void;\n    $closeTab(tabIds: string[], preserveFocus?: boolean): Promise<boolean>;\n    $closeGroup(groupIds: number[], preserveFocus?: boolean): Promise<boolean>;\n}\n\nexport interface TelemetryMain {\n}\n\nexport interface TelemetryExt {\n}\n\n// endregion\n\n// based from https://github.com/microsoft/vscode/blob/1.72.2/src/vs/workbench/api/common/extHostTesting.ts\nexport const enum TestingResourceExt {\n    Workspace,\n    TextDocument\n}\n\n// based from https://github.com/microsoft/vscode/blob/1.72.2/src/vs/workbench/api/common/extHostTesting.ts\nexport interface TestingExt {\n    $onCancelTestRun(controllerId: string, runId: string): void;\n    /** Configures a test run config. */\n    $onConfigureRunProfile(controllerId: string, profileId: string): void;\n\n    /** Sets the default on a given run profile */\n    $onDidChangeDefault(controllerId: string, profileId: string, isDefault: boolean): void;\n\n    $onRunControllerTests(reqs: TestRunRequestDTO[]): void;\n\n    /** Asks the controller to refresh its tests */\n    $refreshTests(controllerId: string, token: CancellationToken): Promise<void>;\n\n    $onResolveChildren(controllerId: string, path: string[]): void;\n}\n\n// based from https://github.com/microsoft/vscode/blob/1.85.1/src/vs/workbench/api/common/extHostUrls.ts\nexport interface UriExt {\n    registerUriHandler(handler: theia.UriHandler, plugin: PluginInfo): theia.Disposable;\n    $handleExternalUri(uri: UriComponents): Promise<void>;\n}\n\nexport interface UriMain {\n    $registerUriHandler(extensionId: string, extensionName: string): void;\n    $unregisterUriHandler(extensionId: string): void;\n}\n\nexport interface TestControllerUpdate {\n    label: string;\n    canRefresh: boolean;\n    canResolve: boolean;\n}\n\n// based from https://github.com/microsoft/vscode/blob/1.72.2/src/vs/workbench/api/common/extHostTesting.ts\nexport interface TestingMain {\n    // --- test lifecycle:\n\n    /** Registers that there's a test controller with the given ID */\n    $registerTestController(controllerId: string, label: string): void;\n    /** Updates the label of an existing test controller. */\n    $updateController(controllerId: string, patch: Partial<TestControllerUpdate>): void;\n    /** Disposes of the test controller with the given ID */\n    $unregisterTestController(controllerId: string): void;\n    $notifyDelta(controllerId: string, diff: TreeDelta<string, TestItemDTO>[]): void;\n\n    // --- test run configurations:\n\n    /** Called when a new test run profile is available */\n    $notifyTestRunProfileCreated(controllerId: string, profile: TestRunProfileDTO): void;\n    /** Updates an existing test run profile */\n    $updateTestRunProfile(controllerId: string, profileId: string, update: Partial<TestRunProfileDTO>): void;\n    /** Removes a previously-published test run profile */\n    $removeTestRunProfile(controllerId: string, profileId: string): void;\n\n    // Test runs\n\n    $notifyTestRunCreated(controllerId: string, run: TestRunDTO, preserveFocus: boolean): void;\n    $notifyTestStateChanged(controllerId: string, runId: string, stateChanges: TestStateChangeDTO[], outputChanges: TestOutputDTO[]): void;\n    $notifyTestRunEnded(controllerId: string, runId: string): void;\n}\n\nexport const PLUGIN_RPC_CONTEXT = {\n    LOGGER_MAIN: createProxyIdentifier<LoggerMain>('LoggerMain'),\n    AUTHENTICATION_MAIN: createProxyIdentifier<AuthenticationMain>('AuthenticationMain'),\n    COMMAND_REGISTRY_MAIN: createProxyIdentifier<CommandRegistryMain>('CommandRegistryMain'),\n    QUICK_OPEN_MAIN: createProxyIdentifier<QuickOpenMain>('QuickOpenMain'),\n    DIALOGS_MAIN: createProxyIdentifier<DialogsMain>('DialogsMain'),\n    WORKSPACE_MAIN: createProxyIdentifier<WorkspaceMain>('WorkspaceMain'),\n    MESSAGE_REGISTRY_MAIN: <ProxyIdentifier<MessageRegistryMain>>createProxyIdentifier<MessageRegistryMain>('MessageRegistryMain'),\n    TEXT_EDITORS_MAIN: createProxyIdentifier<TextEditorsMain>('TextEditorsMain'),\n    DOCUMENTS_MAIN: createProxyIdentifier<DocumentsMain>('DocumentsMain'),\n    NOTEBOOKS_MAIN: createProxyIdentifier<NotebooksMain>('NotebooksMain'),\n    NOTEBOOK_DOCUMENTS_MAIN: createProxyIdentifier<NotebookDocumentsMain>('NotebookDocumentsMain'),\n    NOTEBOOK_EDITORS_MAIN: createProxyIdentifier<NotebookEditorsMain>('NotebookEditorsMain'),\n    NOTEBOOK_DOCUMENTS_AND_EDITORS_MAIN: createProxyIdentifier<NotebookDocumentsAndEditorsMain>('NotebooksAndEditorsMain'),\n    NOTEBOOK_RENDERERS_MAIN: createProxyIdentifier<NotebookRenderersMain>('NotebookRenderersMain'),\n    NOTEBOOK_KERNELS_MAIN: createProxyIdentifier<NotebookKernelsMain>('NotebookKernelsMain'),\n    STATUS_BAR_MESSAGE_REGISTRY_MAIN: <ProxyIdentifier<StatusBarMessageRegistryMain>>createProxyIdentifier<StatusBarMessageRegistryMain>('StatusBarMessageRegistryMain'),\n    ENV_MAIN: createProxyIdentifier<EnvMain>('EnvMain'),\n    NOTIFICATION_MAIN: createProxyIdentifier<NotificationMain>('NotificationMain'),\n    TERMINAL_MAIN: createProxyIdentifier<TerminalServiceMain>('TerminalServiceMain'),\n    TREE_VIEWS_MAIN: createProxyIdentifier<TreeViewsMain>('TreeViewsMain'),\n    PREFERENCE_REGISTRY_MAIN: createProxyIdentifier<PreferenceRegistryMain>('PreferenceRegistryMain'),\n    OUTPUT_CHANNEL_REGISTRY_MAIN: <ProxyIdentifier<OutputChannelRegistryMain>>createProxyIdentifier<OutputChannelRegistryMain>('OutputChannelRegistryMain'),\n    LANGUAGES_MAIN: createProxyIdentifier<LanguagesMain>('LanguagesMain'),\n    CONNECTION_MAIN: createProxyIdentifier<ConnectionMain>('ConnectionMain'),\n    WEBVIEWS_MAIN: createProxyIdentifier<WebviewsMain>('WebviewsMain'),\n    CUSTOM_EDITORS_MAIN: createProxyIdentifier<CustomEditorsMain>('CustomEditorsMain'),\n    WEBVIEW_VIEWS_MAIN: createProxyIdentifier<WebviewViewsMain>('WebviewViewsMain'),\n    STORAGE_MAIN: createProxyIdentifier<StorageMain>('StorageMain'),\n    TASKS_MAIN: createProxyIdentifier<TasksMain>('TasksMain'),\n    DEBUG_MAIN: createProxyIdentifier<DebugMain>('DebugMain'),\n    FILE_SYSTEM_MAIN: createProxyIdentifier<FileSystemMain>('FileSystemMain'),\n    SCM_MAIN: createProxyIdentifier<ScmMain>('ScmMain'),\n    SECRETS_MAIN: createProxyIdentifier<SecretsMain>('SecretsMain'),\n    DECORATIONS_MAIN: createProxyIdentifier<DecorationsMain>('DecorationsMain'),\n    WINDOW_MAIN: createProxyIdentifier<WindowMain>('WindowMain'),\n    CLIPBOARD_MAIN: createProxyIdentifier<ClipboardMain>('ClipboardMain'),\n    LABEL_SERVICE_MAIN: createProxyIdentifier<LabelServiceMain>('LabelServiceMain'),\n    TIMELINE_MAIN: createProxyIdentifier<TimelineMain>('TimelineMain'),\n    THEMING_MAIN: createProxyIdentifier<ThemingMain>('ThemingMain'),\n    COMMENTS_MAIN: createProxyIdentifier<CommentsMain>('CommentsMain'),\n    TABS_MAIN: createProxyIdentifier<TabsMain>('TabsMain'),\n    TELEMETRY_MAIN: createProxyIdentifier<TelemetryMain>('TelemetryMain'),\n    LOCALIZATION_MAIN: createProxyIdentifier<LocalizationMain>('LocalizationMain'),\n    TESTING_MAIN: createProxyIdentifier<TestingMain>('TestingMain'),\n    URI_MAIN: createProxyIdentifier<UriMain>('UriMain'),\n    MCP_SERVER_DEFINITION_REGISTRY_MAIN: createProxyIdentifier<McpServerDefinitionRegistryMain>('McpServerDefinitionRegistryMain')\n};\n\nexport const MAIN_RPC_CONTEXT = {\n    AUTHENTICATION_EXT: createProxyIdentifier<AuthenticationExt>('AuthenticationExt'),\n    HOSTED_PLUGIN_MANAGER_EXT: createProxyIdentifier<PluginManagerExt>('PluginManagerExt'),\n    COMMAND_REGISTRY_EXT: createProxyIdentifier<CommandRegistryExt>('CommandRegistryExt'),\n    QUICK_OPEN_EXT: createProxyIdentifier<QuickOpenExt>('QuickOpenExt'),\n    WINDOW_STATE_EXT: createProxyIdentifier<WindowStateExt>('WindowStateExt'),\n    NOTIFICATION_EXT: createProxyIdentifier<NotificationExt>('NotificationExt'),\n    WORKSPACE_EXT: createProxyIdentifier<WorkspaceExt>('WorkspaceExt'),\n    TEXT_EDITORS_EXT: createProxyIdentifier<TextEditorsExt>('TextEditorsExt'),\n    EDITORS_AND_DOCUMENTS_EXT: createProxyIdentifier<EditorsAndDocumentsExt>('EditorsAndDocumentsExt'),\n    DOCUMENTS_EXT: createProxyIdentifier<DocumentsExt>('DocumentsExt'),\n    NOTEBOOKS_EXT: createProxyIdentifier<NotebooksExt>('NotebooksExt'),\n    NOTEBOOK_DOCUMENTS_EXT: createProxyIdentifier<NotebookDocumentsExt>('NotebookDocumentsExt'),\n    NOTEBOOK_EDITORS_EXT: createProxyIdentifier<NotebookEditorsExt>('NotebookEditorsExt'),\n    NOTEBOOK_RENDERERS_EXT: createProxyIdentifier<NotebookRenderersExt>('NotebooksRenderersExt'),\n    NOTEBOOK_KERNELS_EXT: createProxyIdentifier<NotebookKernelsExt>('NotebookKernelsExt'),\n    TERMINAL_EXT: createProxyIdentifier<TerminalServiceExt>('TerminalServiceExt'),\n    OUTPUT_CHANNEL_REGISTRY_EXT: createProxyIdentifier<OutputChannelRegistryExt>('OutputChannelRegistryExt'),\n    TREE_VIEWS_EXT: createProxyIdentifier<TreeViewsExt>('TreeViewsExt'),\n    PREFERENCE_REGISTRY_EXT: createProxyIdentifier<PreferenceRegistryExt>('PreferenceRegistryExt'),\n    LANGUAGES_EXT: createProxyIdentifier<LanguagesExt>('LanguagesExt'),\n    CONNECTION_EXT: createProxyIdentifier<ConnectionExt>('ConnectionExt'),\n    WEBVIEWS_EXT: createProxyIdentifier<WebviewsExt>('WebviewsExt'),\n    CUSTOM_EDITORS_EXT: createProxyIdentifier<CustomEditorsExt>('CustomEditorsExt'),\n    WEBVIEW_VIEWS_EXT: createProxyIdentifier<WebviewViewsExt>('WebviewViewsExt'),\n    STORAGE_EXT: createProxyIdentifier<StorageExt>('StorageExt'),\n    TASKS_EXT: createProxyIdentifier<TasksExt>('TasksExt'),\n    DEBUG_EXT: createProxyIdentifier<DebugExt>('DebugExt'),\n    FILE_SYSTEM_EXT: createProxyIdentifier<FileSystemExt>('FileSystemExt'),\n    ExtHostFileSystemEventService: createProxyIdentifier<ExtHostFileSystemEventServiceShape>('ExtHostFileSystemEventService'),\n    SCM_EXT: createProxyIdentifier<ScmExt>('ScmExt'),\n    SECRETS_EXT: createProxyIdentifier<SecretsExt>('SecretsExt'),\n    DECORATIONS_EXT: createProxyIdentifier<DecorationsExt>('DecorationsExt'),\n    LABEL_SERVICE_EXT: createProxyIdentifier<LabelServiceExt>('LabelServiceExt'),\n    TIMELINE_EXT: createProxyIdentifier<TimelineExt>('TimeLineExt'),\n    THEMING_EXT: createProxyIdentifier<ThemingExt>('ThemingExt'),\n    COMMENTS_EXT: createProxyIdentifier<CommentsExt>('CommentsExt'),\n    TABS_EXT: createProxyIdentifier<TabsExt>('TabsExt'),\n    TELEMETRY_EXT: createProxyIdentifier<TelemetryExt>('TelemetryExt)'),\n    TESTING_EXT: createProxyIdentifier<TestingExt>('TestingExt'),\n    URI_EXT: createProxyIdentifier<UriExt>('UriExt'),\n    MCP_SERVER_DEFINITION_REGISTRY_EXT: createProxyIdentifier<McpServerDefinitionRegistryExt>('McpServerDefinitionRegistryExt')\n};\n\nexport interface TasksExt {\n    $initLoadedTasks(executions: TaskExecutionDto[]): Promise<void>;\n    $provideTasks(handle: number): Promise<TaskDto[]>;\n    $resolveTask(handle: number, task: TaskDto, token?: CancellationToken): Promise<TaskDto>;\n    $onDidStartTask(execution: TaskExecutionDto, terminalId: number): void;\n    $onDidEndTask(id: number): void;\n    $onDidStartTaskProcess(processId: number | undefined, execution: TaskExecutionDto): void;\n    $onDidEndTaskProcess(exitCode: number | undefined, taskId: number): void;\n}\n\nexport interface TasksMain {\n    $registerTaskProvider(handle: number, type: string): void;\n    $fetchTasks(taskVersion: string | undefined, taskType: string | undefined): Promise<TaskDto[]>;\n    $executeTask(taskDto: TaskDto): Promise<TaskExecutionDto | undefined>;\n    $taskExecutions(): Promise<TaskExecutionDto[]>;\n    $unregister(handle: number): void;\n    $terminateTask(id: number): void;\n    $customExecutionComplete(id: number, exitCode: number | undefined): void;\n}\n\nexport interface AuthenticationExt {\n    $getSessions(providerId: string, scopes: string[] | undefined, options: theia.AuthenticationProviderSessionOptions): Promise<ReadonlyArray<theia.AuthenticationSession>>;\n    $createSession(id: string, scopes: string[], options: theia.AuthenticationProviderSessionOptions): Promise<theia.AuthenticationSession>;\n    $removeSession(id: string, sessionId: string): Promise<void>;\n    $onDidChangeAuthenticationSessions(provider: theia.AuthenticationProviderInformation): Promise<void>;\n}\n\nexport interface AuthenticationMain {\n    $getAccounts(providerId: string): Thenable<readonly theia.AuthenticationSessionAccountInformation[]>;\n    $registerAuthenticationProvider(id: string, label: string, supportsMultipleAccounts: boolean): void;\n    $unregisterAuthenticationProvider(id: string): void;\n    $onDidChangeSessions(providerId: string, event: AuthenticationProviderAuthenticationSessionsChangeEvent): void;\n    $getSession(providerId: string, scopes: readonly string[], extensionId: string, extensionName: string,\n        options: theia.AuthenticationGetSessionOptions): Promise<theia.AuthenticationSession | undefined>;\n}\n\nexport interface NotebookOutputItemDto {\n    readonly mime: string;\n    readonly valueBytes: BinaryBuffer;\n}\n\nexport interface NotebookOutputDto {\n    outputId: string;\n    items: NotebookOutputItemDto[];\n    metadata?: Record<string, unknown>;\n}\n\nexport interface NotebookCellDataDto {\n    source: string;\n    language: string;\n    cellKind: notebookCommon.CellKind;\n    outputs: NotebookOutputDto[];\n    metadata?: notebookCommon.NotebookCellMetadata;\n    internalMetadata?: notebookCommon.NotebookCellInternalMetadata;\n}\n\nexport interface NotebookDataDto {\n    readonly cells: NotebookCellDataDto[];\n    readonly metadata: notebookCommon.NotebookDocumentMetadata;\n}\n\nexport interface NotebookCellDto {\n    handle: number;\n    uri: UriComponents;\n    eol: string;\n    source: string[];\n    language: string;\n    mime?: string;\n    cellKind: notebookCommon.CellKind;\n    outputs: NotebookOutputDto[];\n    metadata?: notebookCommon.NotebookCellMetadata;\n    internalMetadata?: notebookCommon.NotebookCellInternalMetadata;\n}\n\nexport interface NotebookModelAddedData {\n    uri: UriComponents;\n    versionId: number;\n    cells: NotebookCellDto[];\n    viewType: string;\n    metadata?: notebookCommon.NotebookDocumentMetadata;\n}\n\nexport interface NotebookEditorAddData {\n    id: string;\n    documentUri: UriComponents;\n    selections: CellRange[];\n    visibleRanges: CellRange[];\n    viewColumn?: number;\n}\n\nexport interface NotebookDocumentsAndEditorsDelta {\n    removedDocuments?: UriComponents[];\n    addedDocuments?: NotebookModelAddedData[];\n    removedEditors?: string[];\n    addedEditors?: NotebookEditorAddData[];\n    newActiveEditor?: string | null;\n    visibleEditors?: string[];\n}\n\nexport type NotebookCellStatusBarEntryDto = notebookCommon.NotebookCellStatusBarItem;\n\nexport interface NotebookCellStatusBarListDto {\n    items: NotebookCellStatusBarEntryDto[];\n    cacheId: number;\n}\n\nexport type NotebookRawContentEventDto =\n    // notebookCommon.NotebookCellsInitializeEvent<NotebookCellDto>\n    | {\n\n        readonly kind: notebookCommon.NotebookCellsChangeType.ModelChange;\n        readonly changes: notebookCommon.NotebookCellTextModelSplice<NotebookCellDto>[];\n    }\n    | {\n        readonly kind: notebookCommon.NotebookCellsChangeType.Move;\n        readonly index: number;\n        readonly length: number;\n        readonly newIdx: number;\n    }\n    | {\n        readonly kind: notebookCommon.NotebookCellsChangeType.Output;\n        readonly index: number;\n        readonly outputs: NotebookOutputDto[];\n    }\n    | {\n        readonly kind: notebookCommon.NotebookCellsChangeType.OutputItem;\n        readonly index: number;\n        readonly outputId: string;\n        readonly outputItems: NotebookOutputItemDto[];\n        readonly append: boolean;\n    }\n    | {\n        readonly kind: notebookCommon.NotebookCellsChangeType.ChangeDocumentMetadata\n        readonly metadata: notebookCommon.NotebookDocumentMetadata;\n    }\n    | notebookCommon.NotebookCellsChangeLanguageEvent\n    | notebookCommon.NotebookCellsChangeMetadataEvent\n    | notebookCommon.NotebookCellsChangeInternalMetadataEvent\n    | notebookCommon.NotebookCellContentChangeEvent\n    ;\n\nexport interface NotebookCellsChangedEventDto {\n    readonly rawEvents: NotebookRawContentEventDto[];\n    readonly versionId: number;\n};\n\nexport interface NotebookSelectionChangeEvent {\n    selections: CellRange[];\n}\n\nexport interface NotebookVisibleRangesEvent {\n    ranges: CellRange[];\n}\n\nexport interface NotebookEditorPropertiesChangeData {\n    visibleRanges?: NotebookVisibleRangesEvent;\n    selections?: NotebookSelectionChangeEvent;\n}\n\nexport enum NotebookEditorRevealType {\n    Default = 0,\n    InCenter = 1,\n    InCenterIfOutsideViewport = 2,\n    AtTop = 3\n}\n\nexport interface NotebookDocumentShowOptions {\n    position?: EditorGroupColumn;\n    preserveFocus?: boolean;\n    pinned?: boolean;\n    selections?: CellRange[];\n}\n\nexport interface NotebookKernelDto {\n    id: string;\n    notebookType: string;\n    extensionId: string;\n    extensionLocation: UriComponents;\n    label: string;\n    detail?: string;\n    description?: string;\n    supportedLanguages?: string[];\n    supportsInterrupt?: boolean;\n    supportsExecutionOrder?: boolean;\n    preloads?: { uri: UriComponents; provides: readonly string[] }[];\n    rendererScripts?: NotebookRendererScript[];\n}\n\nexport type CellExecuteUpdateDto = CellExecuteOutputEditDto | CellExecuteOutputItemEditDto | CellExecutionStateUpdateDto;\n\nexport interface CellExecuteOutputEditDto {\n    editType: CellExecutionUpdateType.Output;\n    cellHandle: number;\n    append?: boolean;\n    outputs: NotebookOutputDto[];\n}\n\nexport interface CellExecuteOutputItemEditDto {\n    editType: CellExecutionUpdateType.OutputItems;\n    append?: boolean;\n    outputId: string;\n    items: NotebookOutputItemDto[];\n}\n\nexport interface CellExecutionStateUpdateDto {\n    editType: CellExecutionUpdateType.ExecutionState;\n    executionOrder?: number;\n    runStartTime?: number;\n    didPause?: boolean;\n    isPaused?: boolean;\n}\n\nexport interface CellExecutionCompleteDto {\n    runEndTime?: number;\n    lastRunSuccess?: boolean;\n}\n\nexport interface NotebookKernelSourceActionDto {\n    readonly label: string;\n    readonly description?: string;\n    readonly detail?: string;\n    readonly command?: string | Command;\n    readonly documentation?: UriComponents | string;\n}\n\nexport interface NotebookEditorAddData {\n    id: string;\n    documentUri: UriComponents;\n    selections: CellRange[];\n    visibleRanges: CellRange[];\n    viewColumn?: number;\n}\n\nexport interface NotebooksExt extends NotebookDocumentsAndEditorsExt {\n    $provideNotebookCellStatusBarItems(handle: number, uri: UriComponents, index: number, token: CancellationToken): Promise<NotebookCellStatusBarListDto | undefined>;\n    $releaseNotebookCellStatusBarItems(id: number): void;\n\n    $dataToNotebook(handle: number, data: BinaryBuffer, token: CancellationToken): Promise<NotebookDataDto>;\n    $notebookToData(handle: number, data: NotebookDataDto, token: CancellationToken): Promise<BinaryBuffer>;\n}\n\nexport interface NotebooksMain extends Disposable {\n    $registerNotebookSerializer(handle: number, viewType: string, options: notebookCommon.TransientOptions): void;\n    $unregisterNotebookSerializer(handle: number): void;\n\n    $registerNotebookCellStatusBarItemProvider(handle: number, eventHandle: number | undefined, viewType: string): Promise<void>;\n    $unregisterNotebookCellStatusBarItemProvider(handle: number, eventHandle: number | undefined): Promise<void>;\n    $emitCellStatusBarEvent(eventHandle: number): void;\n}\n\nexport interface NotebookKernelsExt {\n    $acceptNotebookAssociation(handle: number, uri: UriComponents, value: boolean): void;\n    $executeCells(handle: number, uri: UriComponents, handles: number[]): Promise<void>;\n    $cancelCells(handle: number, uri: UriComponents, handles: number[]): Promise<void>;\n    $acceptKernelMessageFromRenderer(handle: number, editorId: string, message: any): void;\n    $cellExecutionChanged(uri: UriComponents, cellHandle: number, state: NotebookCellExecutionState | undefined): void;\n    $provideKernelSourceActions(handle: number, token: CancellationToken): Promise<NotebookKernelSourceActionDto[]>;\n}\n\nexport interface NotebookKernelsMain extends Disposable {\n    $postMessage(handle: number, editorId: string | undefined, message: any): Promise<boolean>;\n    $addKernel(handle: number, data: NotebookKernelDto): Promise<void>;\n    $updateKernel(handle: number, data: Partial<NotebookKernelDto>): void;\n    $removeKernel(handle: number): void;\n    $updateNotebookPriority(handle: number, uri: UriComponents, value: number | undefined): void;\n\n    $createExecution(handle: number, controllerId: string, uri: UriComponents, cellHandle: number): void;\n    $updateExecution(handle: number, data: CellExecuteUpdateDto[]): void;\n    $completeExecution(handle: number, data: CellExecutionCompleteDto): void;\n\n    $createNotebookExecution(handle: number, controllerId: string, uri: UriComponents): void;\n    $beginNotebookExecution(handle: number): void;\n    $completeNotebookExecution(handle: number): void;\n\n    $addKernelDetectionTask(handle: number, notebookType: string): Promise<void>;\n    $removeKernelDetectionTask(handle: number): void;\n\n    $addKernelSourceActionProvider(handle: number, eventHandle: number, notebookType: string): Promise<void>;\n    $removeKernelSourceActionProvider(handle: number, eventHandle: number): void;\n    $emitNotebookKernelSourceActionsChangeEvent(eventHandle: number): void;\n}\n\nexport interface NotebookDocumentsMain extends Disposable {\n    $tryCreateNotebook(options: { viewType: string; content?: NotebookDataDto }): Promise<UriComponents>;\n    $tryOpenNotebook(uriComponents: UriComponents): Promise<UriComponents>;\n    $trySaveNotebook(uri: UriComponents): Promise<boolean>;\n}\n\nexport interface NotebookDocumentsExt {\n    $acceptModelChanged(uriComponents: UriComponents, event: NotebookCellsChangedEventDto, isDirty: boolean, newMetadata?: notebookCommon.NotebookDocumentMetadata): void;\n    $acceptDirtyStateChanged(uriComponents: UriComponents, isDirty: boolean): void;\n    $acceptModelSaved(uriComponents: UriComponents): void;\n}\n\nexport interface NotebookDocumentsAndEditorsExt {\n    $acceptDocumentsAndEditorsDelta(delta: NotebookDocumentsAndEditorsDelta): Promise<void>;\n    $acceptActiveCellEditorChange(newActiveEditor: string | null): void;\n}\n\nexport interface NotebookDocumentsAndEditorsMain extends Disposable {\n}\n\nexport type NotebookEditorViewColumnInfo = Record<string, number>;\n\nexport interface NotebookEditorsExt {\n    $acceptEditorPropertiesChanged(id: string, data: NotebookEditorPropertiesChangeData): void;\n    $acceptEditorViewColumns(data: NotebookEditorViewColumnInfo): void;\n}\n\nexport interface NotebookEditorsMain extends Disposable {\n    $tryShowNotebookDocument(uriComponents: UriComponents, viewType: string, options: NotebookDocumentShowOptions): Promise<string>;\n    $tryRevealRange(id: string, range: CellRange, revealType: NotebookEditorRevealType): Promise<void>;\n    $trySetSelections(id: string, range: CellRange[]): void;\n}\nexport interface NotebookRenderersExt {\n    $postRendererMessage(editorId: string, rendererId: string, message: unknown): void;\n}\n\nexport interface NotebookRenderersMain extends Disposable {\n    $postMessage(editorId: string | undefined, rendererId: string, message: unknown): Promise<boolean>;\n}\n\nexport interface RawColorInfo {\n    color: [number, number, number, number];\n    range: Range;\n}\n\nexport interface LabelServiceExt {\n    $registerResourceLabelFormatter(formatter: ResourceLabelFormatter): theia.Disposable;\n}\n\nexport interface LabelServiceMain {\n    $registerResourceLabelFormatter(handle: number, formatter: ResourceLabelFormatter): void;\n    $unregisterResourceLabelFormatter(handle: number): void;\n}\n\nexport interface SecretsExt {\n    $onDidChangePassword(e: { extensionId: string, key: string }): Promise<void>;\n}\n\nexport interface SecretsMain {\n    $getPassword(extensionId: string, key: string): Promise<string | undefined>;\n    $setPassword(extensionId: string, key: string, value: string): Promise<void>;\n    $deletePassword(extensionId: string, key: string): Promise<void>;\n}\n\nexport type InlayHintDto = CachedSessionItem<InlayHint>;\nexport type InlayHintsDto = CachedSession<{ hints: InlayHint[] }>;\n\nexport interface IdentifiableInlineCompletions extends InlineCompletions<IdentifiableInlineCompletion> {\n    pid: number;\n}\n\nexport interface IdentifiableInlineCompletion extends InlineCompletion {\n    idx: number;\n}\n\nexport const LocalizationExt = Symbol('LocalizationExt');\nexport interface LocalizationExt {\n    translateMessage(pluginId: string, details: StringDetails): string;\n    getBundle(pluginId: string): Record<string, string> | undefined;\n    getBundleUri(pluginId: string): theia.Uri | undefined;\n    initializeLocalizedMessages(plugin: Plugin, currentLanguage: string): Promise<void>;\n}\n\nexport interface StringDetails {\n    message: string;\n    args?: Record<string | number, any>;\n    comment?: string | string[];\n}\n\nexport interface LocalizationMain {\n    $fetchBundle(id: string): Promise<LanguagePackBundle | undefined>;\n}\n\nexport enum LogLevel {\n    Trace = 1,\n    Debug = 2,\n    Info = 3,\n    Warn = 4,\n    Error = 5\n}\n\nexport interface LoggerMain {\n    $log(level: LogLevel, name: string | undefined, message: string, params: any[]): void;\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// copied from https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/services/extensions/node/rpcProtocol.ts\n// with small modifications\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { Channel, Disposable, DisposableCollection, isObject, ReadBuffer, RpcProtocol, URI, WriteBuffer } from '@theia/core';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport { MessageProvider } from '@theia/core/lib/common/message-rpc/channel';\nimport { Uint8ArrayReadBuffer, Uint8ArrayWriteBuffer } from '@theia/core/lib/common/message-rpc/uint8-array-message-buffer';\nimport { MsgPackExtensionManager } from '@theia/core/lib/common/message-rpc/msg-pack-extension-manager';\nimport { URI as VSCodeURI } from '@theia/core/shared/vscode-uri';\nimport { BinaryBuffer } from '@theia/core/lib/common/buffer';\nimport { Range, Position } from '../plugin/types-impl';\n\nexport interface MessageConnection {\n    send(msg: string): void;\n    onMessage: Event<string>;\n}\n\nexport const RPCProtocol = Symbol.for('RPCProtocol');\nexport interface RPCProtocol extends Disposable {\n    /**\n     * Returns a proxy to an object addressable/named in the plugin process or in the main process.\n     */\n    getProxy<T>(proxyId: ProxyIdentifier<T>): T;\n\n    /**\n     * Register manually created instance.\n     */\n    set<T, R extends T>(identifier: ProxyIdentifier<T>, instance: R): R;\n\n}\n\nexport class ProxyIdentifier<T> {\n    public readonly id: string;\n    constructor(public readonly isMain: boolean, id: string | T) {\n        // TODO this is nasty, rewrite this\n        this.id = (id as any).toString();\n    }\n}\n\nexport function createProxyIdentifier<T>(identifier: string): ProxyIdentifier<T> {\n    return new ProxyIdentifier(false, identifier);\n}\n\nexport interface ConnectionClosedError extends Error {\n    code: 'RPC_PROTOCOL_CLOSED'\n}\nexport namespace ConnectionClosedError {\n    const code: ConnectionClosedError['code'] = 'RPC_PROTOCOL_CLOSED';\n    export function create(message: string = 'connection is closed'): ConnectionClosedError {\n        return Object.assign(new Error(message), { code });\n    }\n    export function is(error: unknown): error is ConnectionClosedError {\n        return isObject(error) && 'code' in error && (error as ConnectionClosedError).code === code;\n    }\n}\n\nexport class RPCProtocolImpl implements RPCProtocol {\n    private readonly locals = new Map<string, any>();\n    private readonly proxies = new Map<string, any>();\n    private readonly rpc: RpcProtocol;\n\n    private readonly toDispose = new DisposableCollection(\n        Disposable.create(() => { /* mark as no disposed */ })\n    );\n\n    constructor(channel: Channel) {\n        this.rpc = new RpcProtocol(new BatchingChannel(channel), (method, args) => this.handleRequest(method, args));\n        this.rpc.onNotification((evt: { method: string; args: any[]; }) => this.handleNotification(evt.method, evt.args));\n        this.toDispose.push(Disposable.create(() => this.proxies.clear()));\n    }\n\n    handleNotification(method: any, args: any[]): void {\n        const serviceId = args[0] as string;\n        const handler: any = this.locals.get(serviceId);\n        if (!handler) {\n            throw new Error(`no local service handler with id ${serviceId}`);\n        }\n        handler[method](...(args.slice(1)));\n    }\n\n    handleRequest(method: string, args: any[]): Promise<any> {\n        const serviceId = args[0] as string;\n        const handler: any = this.locals.get(serviceId);\n        if (!handler) {\n            throw new Error(`no local service handler with id ${serviceId}`);\n        }\n        return handler[method](...(args.slice(1)));\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    protected get isDisposed(): boolean {\n        return this.toDispose.disposed;\n    }\n\n    getProxy<T>(proxyId: ProxyIdentifier<T>): T {\n        if (this.isDisposed) {\n            throw ConnectionClosedError.create();\n        }\n        let proxy = this.proxies.get(proxyId.id);\n        if (!proxy) {\n            proxy = this.createProxy(proxyId.id);\n            this.proxies.set(proxyId.id, proxy);\n        }\n        return proxy;\n    }\n\n    protected createProxy<T>(proxyId: string): T {\n        const handler = {\n            get: (target: any, name: string, receiver: any): any => {\n                if (target[name] || name.charCodeAt(0) !== 36 /* CharCode.DollarSign */) {\n                    // not a remote property\n                    return target[name];\n                }\n                const isNotify = this.isNotification(name);\n                return async (...args: any[]) => {\n                    const method = name.toString();\n                    if (isNotify) {\n                        this.rpc.sendNotification(method, [proxyId, ...args]);\n                    } else {\n                        return await this.rpc.sendRequest(method, [proxyId, ...args]) as Promise<any>;\n                    }\n                };\n            }\n\n        };\n        return new Proxy(Object.create(null), handler);\n    }\n\n    /**\n     * Return whether the given property represents a notification. If true,\n     * the promise returned from the invocation will resolve immediately to `undefined`\n     *\n     * A property leads to a notification rather than a method call if its name\n     * begins with `notify` or `on`.\n     *\n     * @param p - The property being called on the proxy.\n     * @return Whether `p` represents a notification.\n     */\n    protected isNotification(p: PropertyKey): boolean {\n        let propertyString = p.toString();\n        if (propertyString.charCodeAt(0) === 36/* CharCode.DollarSign */) {\n            propertyString = propertyString.substring(1);\n        }\n        return propertyString.startsWith('notify') || propertyString.startsWith('on');\n    }\n\n    set<T, R extends T>(identifier: ProxyIdentifier<T>, instance: R): R {\n        if (this.isDisposed) {\n            throw ConnectionClosedError.create();\n        }\n        if (!this.locals.has(identifier.id)) {\n            this.locals.set(identifier.id, instance);\n            if (Disposable.is(instance)) {\n                this.toDispose.push(instance);\n            }\n            this.toDispose.push(Disposable.create(() => this.locals.delete(identifier.id)));\n        }\n        return instance;\n    }\n}\n\n/**\n * Wraps and underlying channel to send/receive multiple messages in one go:\n *  - multiple messages to be sent from one stack get sent in bulk at `process.nextTick`.\n *  - each incoming message is handled in a separate `process.nextTick`.\n */\nexport class BatchingChannel implements Channel {\n    protected messagesToSend: Uint8Array[] = [];\n\n    constructor(protected underlyingChannel: Channel) {\n        underlyingChannel.onMessage(msg => this.handleMessages(msg()));\n    }\n\n    protected onMessageEmitter: Emitter<MessageProvider> = new Emitter();\n    get onMessage(): Event<MessageProvider> {\n        return this.onMessageEmitter.event;\n    };\n\n    readonly onClose = this.underlyingChannel.onClose;\n    readonly onError = this.underlyingChannel.onError;\n\n    close(): void {\n        this.underlyingChannel.close();\n        this.onMessageEmitter.dispose();\n        this.messagesToSend = [];\n    }\n\n    getWriteBuffer(): WriteBuffer {\n        const writer = new Uint8ArrayWriteBuffer();\n        writer.onCommit(buffer => this.commitSingleMessage(buffer));\n        return writer;\n    }\n\n    protected commitSingleMessage(msg: Uint8Array): void {\n\n        if (this.messagesToSend.length === 0) {\n            if (typeof setImmediate !== 'undefined') {\n                setImmediate(() => this.sendAccumulated());\n            } else {\n                setTimeout(() => this.sendAccumulated(), 0);\n            }\n        }\n        this.messagesToSend.push(msg);\n    }\n\n    protected sendAccumulated(): void {\n        const cachedMessages = this.messagesToSend;\n        this.messagesToSend = [];\n        const writer = this.underlyingChannel.getWriteBuffer();\n\n        if (cachedMessages.length > 0) {\n            writer.writeLength(cachedMessages.length);\n            cachedMessages.forEach(msg => {\n                writer.writeBytes(msg);\n            });\n\n        }\n        writer.commit();\n    }\n\n    protected handleMessages(buffer: ReadBuffer): void {\n        // Read in the list of messages and dispatch each message individually\n        const length = buffer.readLength();\n        if (length > 0) {\n            for (let index = 0; index < length; index++) {\n                const message = buffer.readBytes();\n                this.onMessageEmitter.fire(() => new Uint8ArrayReadBuffer(message));\n            }\n        }\n    }\n}\n\nexport const enum MsgPackExtensionTag {\n    Uri = 2,\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    Range = 3,\n    VsCodeUri = 4,\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    BinaryBuffer = 5,\n}\n\nexport function registerMsgPackExtensions(): void {\n    MsgPackExtensionManager.getInstance().registerExtensions(\n        {\n            class: URI,\n            tag: MsgPackExtensionTag.Uri,\n            serialize: (instance: URI) => instance.toString(),\n            deserialize: data => new URI(data)\n        },\n        {\n            class: Range,\n            tag: MsgPackExtensionTag.Range,\n            serialize: (range: Range) => ({\n                start: {\n                    line: range.start.line,\n                    character: range.start.character\n                },\n                end: {\n                    line: range.end.line,\n                    character: range.end.character\n                }\n            }),\n            deserialize: data => {\n                const start = new Position(data.start.line, data.start.character);\n                const end = new Position(data.end.line, data.end.character);\n                return new Range(start, end);\n            }\n        },\n        {\n            class: VSCodeURI,\n            tag: MsgPackExtensionTag.VsCodeUri,\n            // eslint-disable-next-line arrow-body-style\n            serialize: (instance: URI) => {\n                return instance.toString();\n            },\n            deserialize: data => VSCodeURI.parse(data)\n        },\n        {\n            class: BinaryBuffer,\n            tag: MsgPackExtensionTag.BinaryBuffer,\n            // eslint-disable-next-line arrow-body-style\n            serialize: (instance: BinaryBuffer) => {\n                return instance.buffer;\n            },\n            // eslint-disable-next-line arrow-body-style\n            deserialize: buffer => {\n                return BinaryBuffer.wrap(buffer);\n            }\n        }\n    );\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n// copied from https://github.com/microsoft/vscode/blob/1.37.0/src/vs/base/common/types.ts\n/*---------------------------------------------------------------------------------------------\n*  Copyright (c) Microsoft Corporation. All rights reserved.\n*  Licensed under the MIT License. See License.txt in the project root for license information.\n*--------------------------------------------------------------------------------------------*/\n\nimport { isObject as isObject0 } from '@theia/core/lib/common';\n\n/**\n * Returns `true` if the parameter has type \"object\" and not null, an array, a regexp, a date.\n */\nexport function isObject(obj: unknown): boolean {\n    return isObject0(obj)\n        && !Array.isArray(obj)\n        && !(obj instanceof RegExp)\n        && !(obj instanceof Date);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function mixin(destination: any, source: any, overwrite: boolean = true): any {\n    if (!isObject(destination)) {\n        return source;\n    }\n\n    if (isObject(source)) {\n        Object.keys(source).forEach(key => {\n            if (key in destination) {\n                if (overwrite) {\n                    if (isObject(destination[key]) && isObject(source[key])) {\n                        mixin(destination[key], source[key], overwrite);\n                    } else {\n                        destination[key] = source[key];\n                    }\n                }\n            } else {\n                destination[key] = source[key];\n            }\n        });\n    }\n    return destination;\n}\n\nexport enum LogType {\n    Info,\n    Error\n}\n\nexport interface LogPart {\n    data: string;\n    type: LogType;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport interface KeysToAnyValues { [key: string]: any }\nexport interface KeysToKeysToAnyValue { [key: string]: KeysToAnyValues }\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/** copied from https://github.com/TypeFox/vscode/blob/70b8db24a37fafc77247de7f7cb5bb0195120ed0/src/vs/workbench/api/common/extHostTypes.ts#L18-L27 */\nexport function es5ClassCompat<T extends Function>(target: T): T {\n    // @ts-ignore\n    function _(): any { return Reflect.construct(target, arguments, this.constructor); }\n    Object.defineProperty(_, 'name', Object.getOwnPropertyDescriptor(target, 'name')!);\n    Object.setPrototypeOf(_, target);\n    Object.setPrototypeOf(_.prototype, target.prototype);\n    return _ as unknown as T;\n}\n/* eslint-enable @typescript-eslint/no-explicit-any */\nconst _typeof = {\n    number: 'number',\n    string: 'string',\n    undefined: 'undefined',\n    object: 'object',\n    function: 'function'\n};\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array: any): array is any[] {\n    if (Array.isArray) {\n        return Array.isArray(array);\n    }\n\n    if (array && typeof (array.length) === _typeof.number && array.constructor === Array) {\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: any): obj is undefined {\n    return typeof (obj) === _typeof.undefined;\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: any): obj is undefined | null {\n    return isUndefined(obj) || obj === null; // eslint-disable-line no-null/no-null\n}\n\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined<T>(arg: T | null | undefined): T {\n    if (isUndefinedOrNull(arg)) {\n        throw new Error('Assertion Failed: argument is undefined or null');\n    }\n\n    return arg;\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { CallHierarchyIncomingCall, CallHierarchyItem, CallHierarchyOutgoingCall } from '@theia/callhierarchy/lib/browser';\nimport * as languageProtocol from '@theia/core/shared/vscode-languageserver-protocol';\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport { TypeHierarchyItem } from '@theia/typehierarchy/lib/browser';\nimport * as rpc from '../../../common/plugin-api-rpc';\nimport * as model from '../../../common/plugin-api-rpc-model';\nimport { UriComponents } from '../../../common/uri-components';\n\nexport function toUriComponents(uri: string): UriComponents {\n    return URI.parse(uri);\n}\n\nexport function fromUriComponents(uri: UriComponents): string {\n    return URI.revive(uri).toString();\n}\n\nexport function fromLocation(location: languageProtocol.Location): model.Location {\n    return <model.Location>{\n        uri: URI.parse(location.uri),\n        range: fromRange(location.range)\n    };\n}\n\nexport function toLocation(uri: UriComponents, range: model.Range): languageProtocol.Location {\n    return {\n        uri: URI.revive(uri).toString(),\n        range: toRange(range)\n    };\n}\n\nexport function fromPosition(position: languageProtocol.Position): rpc.Position {\n    return <rpc.Position>{\n        lineNumber: position.line,\n        column: position.character\n    };\n}\n\nexport function fromRange(range: languageProtocol.Range): model.Range {\n    const { start, end } = range;\n    return {\n        startLineNumber: start.line + 1,\n        startColumn: start.character + 1,\n        endLineNumber: end.line + 1,\n        endColumn: end.character + 1,\n    };\n}\n\nexport function toRange(range: model.Range): languageProtocol.Range {\n    return languageProtocol.Range.create(\n        range.startLineNumber - 1,\n        range.startColumn - 1,\n        range.endLineNumber - 1,\n        range.endColumn - 1,\n    );\n}\n\nexport namespace SymbolKindConverter {\n    export function fromSymbolKind(kind: languageProtocol.SymbolKind): model.SymbolKind {\n        switch (kind) {\n            case languageProtocol.SymbolKind.File: return model.SymbolKind.File;\n            case languageProtocol.SymbolKind.Module: return model.SymbolKind.Module;\n            case languageProtocol.SymbolKind.Namespace: return model.SymbolKind.Namespace;\n            case languageProtocol.SymbolKind.Package: return model.SymbolKind.Package;\n            case languageProtocol.SymbolKind.Class: return model.SymbolKind.Class;\n            case languageProtocol.SymbolKind.Method: return model.SymbolKind.Method;\n            case languageProtocol.SymbolKind.Property: return model.SymbolKind.Property;\n            case languageProtocol.SymbolKind.Field: return model.SymbolKind.Field;\n            case languageProtocol.SymbolKind.Constructor: return model.SymbolKind.Constructor;\n            case languageProtocol.SymbolKind.Enum: return model.SymbolKind.Enum;\n            case languageProtocol.SymbolKind.Interface: return model.SymbolKind.Interface;\n            case languageProtocol.SymbolKind.Function: return model.SymbolKind.Function;\n            case languageProtocol.SymbolKind.Variable: return model.SymbolKind.Variable;\n            case languageProtocol.SymbolKind.Constant: return model.SymbolKind.Constant;\n            case languageProtocol.SymbolKind.String: return model.SymbolKind.String;\n            case languageProtocol.SymbolKind.Number: return model.SymbolKind.Number;\n            case languageProtocol.SymbolKind.Boolean: return model.SymbolKind.Boolean;\n            case languageProtocol.SymbolKind.Array: return model.SymbolKind.Array;\n            case languageProtocol.SymbolKind.Object: return model.SymbolKind.Object;\n            case languageProtocol.SymbolKind.Key: return model.SymbolKind.Key;\n            case languageProtocol.SymbolKind.Null: return model.SymbolKind.Null;\n            case languageProtocol.SymbolKind.EnumMember: return model.SymbolKind.EnumMember;\n            case languageProtocol.SymbolKind.Struct: return model.SymbolKind.Struct;\n            case languageProtocol.SymbolKind.Event: return model.SymbolKind.Event;\n            case languageProtocol.SymbolKind.Operator: return model.SymbolKind.Operator;\n            case languageProtocol.SymbolKind.TypeParameter: return model.SymbolKind.TypeParameter;\n            default: return model.SymbolKind.Property;\n        }\n    }\n    export function toSymbolKind(kind: model.SymbolKind): languageProtocol.SymbolKind {\n        switch (kind) {\n            case model.SymbolKind.File: return languageProtocol.SymbolKind.File;\n            case model.SymbolKind.Module: return languageProtocol.SymbolKind.Module;\n            case model.SymbolKind.Namespace: return languageProtocol.SymbolKind.Namespace;\n            case model.SymbolKind.Package: return languageProtocol.SymbolKind.Package;\n            case model.SymbolKind.Class: return languageProtocol.SymbolKind.Class;\n            case model.SymbolKind.Method: return languageProtocol.SymbolKind.Method;\n            case model.SymbolKind.Property: return languageProtocol.SymbolKind.Property;\n            case model.SymbolKind.Field: return languageProtocol.SymbolKind.Field;\n            case model.SymbolKind.Constructor: return languageProtocol.SymbolKind.Constructor;\n            case model.SymbolKind.Enum: return languageProtocol.SymbolKind.Enum;\n            case model.SymbolKind.Interface: return languageProtocol.SymbolKind.Interface;\n            case model.SymbolKind.Function: return languageProtocol.SymbolKind.Function;\n            case model.SymbolKind.Variable: return languageProtocol.SymbolKind.Variable;\n            case model.SymbolKind.Constant: return languageProtocol.SymbolKind.Constant;\n            case model.SymbolKind.String: return languageProtocol.SymbolKind.String;\n            case model.SymbolKind.Number: return languageProtocol.SymbolKind.Number;\n            case model.SymbolKind.Boolean: return languageProtocol.SymbolKind.Boolean;\n            case model.SymbolKind.Array: return languageProtocol.SymbolKind.Array;\n            case model.SymbolKind.Object: return languageProtocol.SymbolKind.Object;\n            case model.SymbolKind.Key: return languageProtocol.SymbolKind.Key;\n            case model.SymbolKind.Null: return languageProtocol.SymbolKind.Null;\n            case model.SymbolKind.EnumMember: return languageProtocol.SymbolKind.EnumMember;\n            case model.SymbolKind.Struct: return languageProtocol.SymbolKind.Struct;\n            case model.SymbolKind.Event: return languageProtocol.SymbolKind.Event;\n            case model.SymbolKind.Operator: return languageProtocol.SymbolKind.Operator;\n            case model.SymbolKind.TypeParameter: return languageProtocol.SymbolKind.TypeParameter;\n            default: return languageProtocol.SymbolKind.Property;\n        }\n    }\n}\n\nexport function toItemHierarchyDefinition(modelItem: model.HierarchyItem): TypeHierarchyItem | CallHierarchyItem {\n    return {\n        ...modelItem,\n        kind: SymbolKindConverter.toSymbolKind(modelItem.kind),\n        range: toRange(modelItem.range),\n        selectionRange: toRange(modelItem.selectionRange),\n    };\n}\n\nexport function fromItemHierarchyDefinition(definition: TypeHierarchyItem | CallHierarchyItem): model.HierarchyItem {\n    return {\n        ...definition,\n        kind: SymbolKindConverter.fromSymbolKind(definition.kind),\n        range: fromRange(definition.range),\n        selectionRange: fromRange(definition.range),\n    };\n}\n\nexport function toCaller(caller: model.CallHierarchyIncomingCall): CallHierarchyIncomingCall {\n    return {\n        from: toItemHierarchyDefinition(caller.from),\n        fromRanges: caller.fromRanges.map(toRange)\n    };\n}\n\nexport function fromCaller(caller: CallHierarchyIncomingCall): model.CallHierarchyIncomingCall {\n    return {\n        from: fromItemHierarchyDefinition(caller.from),\n        fromRanges: caller.fromRanges.map(fromRange)\n    };\n}\n\nexport function toCallee(callee: model.CallHierarchyOutgoingCall): CallHierarchyOutgoingCall {\n    return {\n        to: toItemHierarchyDefinition(callee.to),\n        fromRanges: callee.fromRanges.map(toRange),\n    };\n}\n\nexport function fromCallHierarchyCallerToModelCallHierarchyIncomingCall(caller: CallHierarchyIncomingCall): model.CallHierarchyIncomingCall {\n    return {\n        from: fromItemHierarchyDefinition(caller.from),\n        fromRanges: caller.fromRanges.map(fromRange),\n    };\n}\n\nexport function fromCallHierarchyCalleeToModelCallHierarchyOutgoingCall(callee: CallHierarchyOutgoingCall): model.CallHierarchyOutgoingCall {\n    return {\n        to: fromItemHierarchyDefinition(callee.to),\n        fromRanges: callee.fromRanges.map(fromRange),\n    };\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n// copied from https://github.com/microsoft/vscode/blob/1.37.0/src/vs/workbench/api/common/extHostTypes.ts\n/*---------------------------------------------------------------------------------------------\n*  Copyright (c) Microsoft Corporation. All rights reserved.\n*  Licensed under the MIT License. See License.txt in the project root for license information.\n*--------------------------------------------------------------------------------------------*/\n\n/* eslint-disable no-null/no-null */\n\nimport { UUID } from '@theia/core/shared/@lumino/coreutils';\nimport { illegalArgument } from '../common/errors';\nimport type * as theia from '@theia/plugin';\nimport { URI as CodeURI, UriComponents } from '@theia/core/shared/vscode-uri';\nimport { relative } from '../common/paths-util';\nimport { startsWithIgnoreCase } from '@theia/core/lib/common/strings';\nimport { SymbolKind } from '../common/plugin-api-rpc-model';\nimport { FileSystemProviderErrorCode, markAsFileSystemProviderError } from '@theia/filesystem/lib/common/files';\nimport * as paths from 'path';\nimport { es5ClassCompat } from '../common/types';\nimport { isObject, isStringArray } from '@theia/core/lib/common';\nimport { CellEditType, CellMetadataEdit, NotebookDocumentMetadataEdit } from '@theia/notebook/lib/common';\n\n/**\n * This is an implementation of #theia.Uri based on vscode-uri.\n * This is supposed to fix https://github.com/eclipse-theia/theia/issues/8752\n * We cannot simply upgrade the dependency, because the current version 3.x\n * is not compatible with our current codebase\n */\n@es5ClassCompat\nexport class URI extends CodeURI implements theia.Uri {\n    protected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n    protected constructor(components: UriComponents);\n    protected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n        if (typeof schemeOrData === 'string') {\n            super(schemeOrData, authority, path, query, fragment, _strict);\n        } else {\n            super(schemeOrData);\n        }\n    }\n\n    /**\n     * Override to create the correct class.\n     */\n    override with(change: {\n        scheme?: string;\n        authority?: string | null;\n        path?: string | null;\n        query?: string | null;\n        fragment?: string | null;\n    }): URI {\n        return new URI(super.with(change));\n    }\n\n    static joinPath(uri: URI, ...pathSegments: string[]): URI {\n        if (!uri.path) {\n            throw new Error('\\'joinPath\\' called on URI without path');\n        }\n        const newPath = paths.posix.join(uri.path, ...pathSegments);\n        return new URI(uri.scheme, uri.authority, newPath, uri.query, uri.fragment);\n    }\n\n    /**\n     * Override to create the correct class.\n     * @param data\n     */\n    static override revive(data: UriComponents | CodeURI): URI;\n    static override revive(data: UriComponents | CodeURI | null): URI | null;\n    static override revive(data: UriComponents | CodeURI | undefined): URI | undefined;\n    static override revive(data: UriComponents | CodeURI | undefined | null): URI | undefined | null {\n        const uri = CodeURI.revive(data);\n        return uri ? new URI(uri) : undefined;\n    }\n\n    static override parse(value: string, _strict?: boolean): URI {\n        return new URI(CodeURI.parse(value, _strict));\n    }\n\n    static override file(path: string): URI {\n        return new URI(CodeURI.file(path));\n    }\n\n    /**\n     * There is quite some magic in to vscode URI class related to\n     * transferring via JSON.stringify(). Making the CodeURI instance\n     * makes sure we transfer this object as a vscode-uri URI.\n     */\n    override toJSON(): UriComponents {\n        return CodeURI.from(this).toJSON();\n    }\n}\n\n@es5ClassCompat\nexport class Disposable {\n    private disposable: undefined | (() => void);\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static from(...disposables: { dispose(): any }[]): Disposable {\n        return new Disposable(() => {\n            if (disposables) {\n                for (const disposable of disposables) {\n                    if (disposable && typeof disposable.dispose === 'function') {\n                        disposable.dispose();\n                    }\n                }\n            }\n        });\n    }\n\n    constructor(func: () => void) {\n        this.disposable = func;\n    }\n    /**\n     * Dispose this object.\n     */\n    dispose(): void {\n        if (this.disposable) {\n            this.disposable();\n            this.disposable = undefined;\n        }\n    }\n\n    static create(func: () => void): Disposable {\n        return new Disposable(func);\n    }\n\n    static NULL: Disposable;\n}\n\nexport interface AccessibilityInformation {\n    label: string;\n    role?: string;\n}\n\nexport enum StatusBarAlignment {\n    Left = 1,\n    Right = 2\n}\n\nexport enum TextEditorLineNumbersStyle {\n    Off = 0,\n    On = 1,\n    Relative = 2,\n    Interval = 3\n}\n\n/**\n * Denotes a column in the editor window.\n * Columns are used to show editors side by side.\n */\nexport enum ViewColumn {\n    Active = -1,\n    Beside = -2,\n    One = 1,\n    Two = 2,\n    Three = 3,\n    Four = 4,\n    Five = 5,\n    Six = 6,\n    Seven = 7,\n    Eight = 8,\n    Nine = 9\n}\n\n/**\n * Represents a color theme kind.\n */\nexport enum ColorThemeKind {\n    Light = 1,\n    Dark = 2,\n    HighContrast = 3,\n    HighContrastLight = 4\n}\n\nexport enum ExtensionMode {\n    /**\n     * The extension is installed normally (for example, from the marketplace\n     * or VSIX) in the editor.\n     */\n    Production = 1,\n\n    /**\n     * The extension is running from an `--extensionDevelopmentPath` provided\n     * when launching the editor.\n     */\n    Development = 2,\n\n    /**\n     * The extension is running from an `--extensionTestsPath` and\n     * the extension host is running unit tests.\n     */\n    Test = 3,\n}\n\nexport enum ExtensionKind {\n    UI = 1,\n    Workspace = 2\n}\n\n/**\n * Represents the validation type of the Source Control input.\n */\nexport enum SourceControlInputBoxValidationType {\n\n    /**\n     * Something not allowed by the rules of a language or other means.\n     */\n    Error = 0,\n\n    /**\n     * Something suspicious but allowed.\n     */\n    Warning = 1,\n\n    /**\n     * Something to inform about but not a problem.\n     */\n    Information = 2\n}\n\nexport enum ExternalUriOpenerPriority {\n    None = 0,\n    Option = 1,\n    Default = 2,\n    Preferred = 3,\n}\n\n@es5ClassCompat\nexport class ColorTheme implements theia.ColorTheme {\n    constructor(public readonly kind: ColorThemeKind) { }\n}\n\n/**\n * Represents sources that can cause `window.onDidChangeEditorSelection`\n */\nexport enum TextEditorSelectionChangeKind {\n    Keyboard = 1,\n\n    Mouse = 2,\n\n    Command = 3\n}\n\nexport namespace TextEditorSelectionChangeKind {\n    export function fromValue(s: string | undefined): TextEditorSelectionChangeKind | undefined {\n        switch (s) {\n            case 'keyboard': return TextEditorSelectionChangeKind.Keyboard;\n            case 'mouse': return TextEditorSelectionChangeKind.Mouse;\n            case 'api': return TextEditorSelectionChangeKind.Command;\n        }\n        return undefined;\n    }\n}\n\nexport enum TextDocumentChangeReason {\n    Undo = 1,\n    Redo = 2,\n}\n\n@es5ClassCompat\nexport class Position {\n    private _line: number;\n    private _character: number;\n    constructor(line: number, char: number) {\n        if (line < 0) {\n            throw new Error('line number cannot be negative');\n        }\n        if (char < 0) {\n            throw new Error('char number cannot be negative');\n        }\n        this._line = line;\n        this._character = char;\n    }\n\n    get line(): number {\n        return this._line;\n    }\n\n    get character(): number {\n        return this._character;\n    }\n\n    isBefore(other: Position): boolean {\n        if (this._line < other._line) {\n            return true;\n        }\n        if (other._line < this._line) {\n            return false;\n        }\n        return this._character < other._character;\n    }\n\n    isBeforeOrEqual(other: Position): boolean {\n        if (this._line < other._line) {\n            return true;\n        }\n        if (other._line < this._line) {\n            return false;\n        }\n        return this._character <= other._character;\n    }\n\n    isAfter(other: Position): boolean {\n        return !this.isBeforeOrEqual(other);\n    }\n\n    isAfterOrEqual(other: Position): boolean {\n        return !this.isBefore(other);\n    }\n\n    isEqual(other: Position): boolean {\n        return this._line === other._line && this._character === other._character;\n    }\n\n    compareTo(other: Position): number {\n        if (this._line < other._line) {\n            return -1;\n        } else if (this._line > other.line) {\n            return 1;\n        } else {\n            // equal line\n            if (this._character < other._character) {\n                return -1;\n            } else if (this._character > other._character) {\n                return 1;\n            } else {\n                // equal line and character\n                return 0;\n            }\n        }\n    }\n\n    translate(change: { lineDelta?: number; characterDelta?: number; }): Position;\n    translate(lineDelta?: number, characterDelta?: number): Position;\n    translate(lineDeltaOrChange: number | { lineDelta?: number; characterDelta?: number; } | undefined, characterDelta: number = 0): Position {\n\n        if (lineDeltaOrChange === null || characterDelta === null) {\n            throw illegalArgument();\n        }\n\n        let lineDelta: number;\n        if (typeof lineDeltaOrChange === 'undefined') {\n            lineDelta = 0;\n        } else if (typeof lineDeltaOrChange === 'number') {\n            lineDelta = lineDeltaOrChange;\n        } else {\n            lineDelta = typeof lineDeltaOrChange.lineDelta === 'number' ? lineDeltaOrChange.lineDelta : 0;\n            characterDelta = typeof lineDeltaOrChange.characterDelta === 'number' ? lineDeltaOrChange.characterDelta : 0;\n        }\n\n        if (lineDelta === 0 && characterDelta === 0) {\n            return this;\n        }\n        return new Position(this.line + lineDelta, this.character + characterDelta);\n    }\n\n    with(change: { line?: number; character?: number; }): Position;\n    with(line?: number, character?: number): Position;\n    with(lineOrChange: number | { line?: number; character?: number; } | undefined, character: number = this.character): Position {\n\n        if (lineOrChange === null || character === null) {\n            throw illegalArgument();\n        }\n\n        let line: number;\n        if (typeof lineOrChange === 'undefined') {\n            line = this.line;\n\n        } else if (typeof lineOrChange === 'number') {\n            line = lineOrChange;\n\n        } else {\n            line = typeof lineOrChange.line === 'number' ? lineOrChange.line : this.line;\n            character = typeof lineOrChange.character === 'number' ? lineOrChange.character : this.character;\n        }\n\n        if (line === this.line && character === this.character) {\n            return this;\n        }\n        return new Position(line, character);\n    }\n\n    static Min(...positions: Position[]): Position {\n        let result = positions.pop();\n        for (const p of positions) {\n            if (p.isBefore(result!)) {\n                result = p;\n            }\n        }\n        return result!;\n    }\n\n    static Max(...positions: Position[]): Position {\n        let result = positions.pop();\n        for (const p of positions) {\n            if (p.isAfter(result!)) {\n                result = p;\n            }\n        }\n        return result!;\n    }\n\n    static isPosition(other: unknown): other is Position {\n        if (!other) {\n            return false;\n        }\n        if (typeof other !== 'object' || Array.isArray(other)) {\n            return false;\n        }\n        if (other instanceof Position) {\n            return true;\n        }\n        const { line, character } = <Position>other;\n        if (typeof line === 'number' && typeof character === 'number') {\n            return true;\n        }\n        return false;\n    }\n\n    toJSON(): unknown {\n        return { line: this.line, character: this.character };\n    }\n}\n\n@es5ClassCompat\nexport class Range {\n    protected _start: Position;\n    protected _end: Position;\n\n    constructor(start: Position, end: Position);\n    constructor(startLine: number, startColumn: number, endLine: number, endColumn: number);\n    constructor(startLineOrStart: number | Position, startColumnOrEnd: number | Position, endLine?: number, endColumn?: number) {\n        let start: Position | undefined = undefined;\n        let end: Position | undefined = undefined;\n\n        if (typeof startLineOrStart === 'number' && typeof startColumnOrEnd === 'number' && typeof endLine === 'number' && typeof endColumn === 'number') {\n            start = new Position(startLineOrStart, startColumnOrEnd);\n            end = new Position(endLine, endColumn);\n        } else if (startLineOrStart instanceof Position && startColumnOrEnd instanceof Position) {\n            start = startLineOrStart;\n            end = startColumnOrEnd;\n        }\n\n        if (!start || !end) {\n            throw new Error('Invalid arguments');\n        }\n\n        if (start.isBefore(end)) {\n            this._start = start;\n            this._end = end;\n        } else {\n            this._start = end;\n            this._end = start;\n        }\n    }\n\n    get start(): Position {\n        return this._start;\n    }\n\n    get end(): Position {\n        return this._end;\n    }\n\n    contains(positionOrRange: Position | Range): boolean {\n        if (positionOrRange instanceof Range) {\n            return this.contains(positionOrRange._start)\n                && this.contains(positionOrRange._end);\n\n        } else if (positionOrRange instanceof Position) {\n            if (positionOrRange.isBefore(this._start)) {\n                return false;\n            }\n            if (this._end.isBefore(positionOrRange)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }\n\n    isEqual(other: Range): boolean {\n        return this._start.isEqual(other._start) && this._end.isEqual(other._end);\n    }\n\n    intersection(other: Range): Range | undefined {\n        const start = Position.Max(other.start, this._start);\n        const end = Position.Min(other.end, this._end);\n        if (start.isAfter(end)) {\n            // this happens when there is no overlap:\n            // |-----|\n            //          |----|\n            return undefined;\n        }\n        return new Range(start, end);\n    }\n\n    union(other: Range): Range {\n        if (this.contains(other)) {\n            return this;\n        } else if (other.contains(this)) {\n            return other;\n        }\n        const start = Position.Min(other.start, this._start);\n        const end = Position.Max(other.end, this.end);\n        return new Range(start, end);\n    }\n\n    get isEmpty(): boolean {\n        return this._start.isEqual(this._end);\n    }\n\n    get isSingleLine(): boolean {\n        return this._start.line === this._end.line;\n    }\n\n    with(change: { start?: Position, end?: Position }): Range;\n    with(start?: Position, end?: Position): Range;\n    with(startOrChange: Position | { start?: Position, end?: Position } | undefined, end: Position = this.end): Range {\n\n        if (startOrChange === null || end === null) {\n            throw illegalArgument();\n        }\n\n        let start: Position;\n        if (!startOrChange) {\n            start = this.start;\n\n        } else if (Position.isPosition(startOrChange)) {\n            start = startOrChange;\n\n        } else {\n            start = startOrChange.start || this.start;\n            end = startOrChange.end || this.end;\n        }\n\n        if (start.isEqual(this._start) && end.isEqual(this.end)) {\n            return this;\n        }\n        return new Range(start, end);\n    }\n\n    static isRange(arg: unknown): arg is theia.Range {\n        if (arg instanceof Range) {\n            return true;\n        }\n        return isObject<theia.Range>(arg)\n            && Position.isPosition(arg.start)\n            && Position.isPosition(arg.end);\n    }\n\n    toJSON(): unknown {\n        return [this.start, this.end];\n    }\n}\n\n@es5ClassCompat\nexport class Selection extends Range {\n    private _anchor: Position;\n    private _active: Position;\n    constructor(anchor: Position, active: Position);\n    constructor(anchorLine: number, anchorColumn: number, activeLine: number, activeColumn: number);\n    constructor(anchorLineOrAnchor: number | Position, anchorColumnOrActive: number | Position, activeLine?: number, activeColumn?: number) {\n        let anchor: Position | undefined = undefined;\n        let active: Position | undefined = undefined;\n\n        if (typeof anchorLineOrAnchor === 'number' && typeof anchorColumnOrActive === 'number' && typeof activeLine === 'number' && typeof activeColumn === 'number') {\n            anchor = new Position(anchorLineOrAnchor, anchorColumnOrActive);\n            active = new Position(activeLine, activeColumn);\n        } else if (anchorLineOrAnchor instanceof Position && anchorColumnOrActive instanceof Position) {\n            anchor = anchorLineOrAnchor;\n            active = anchorColumnOrActive;\n        }\n\n        if (!anchor || !active) {\n            throw new Error('Invalid arguments');\n        }\n\n        super(anchor, active);\n\n        this._anchor = anchor;\n        this._active = active;\n    }\n\n    get active(): Position {\n        return this._active;\n    }\n\n    get anchor(): Position {\n        return this._anchor;\n    }\n\n    get isReversed(): boolean {\n        return this._anchor === this._end;\n    }\n}\n\nexport namespace TextDocumentShowOptions {\n    /**\n     * @param candidate\n     * @returns `true` if `candidate` is an instance of options that includes a selection.\n     * This function should be used to determine whether TextDocumentOptions passed into commands by plugins\n     * need to be translated to TextDocumentShowOptions in the style of the RPC model. Selection is the only field that requires translation.\n     */\n    export function isTextDocumentShowOptions(candidate: unknown): candidate is theia.TextDocumentShowOptions {\n        if (!candidate) {\n            return false;\n        }\n        const options = candidate as theia.TextDocumentShowOptions;\n        return Range.isRange(options.selection);\n    }\n}\n\nexport enum EndOfLine {\n    LF = 1,\n    CRLF = 2\n}\n\nexport enum EnvironmentVariableMutatorType {\n    Replace = 1,\n    Append = 2,\n    Prepend = 3\n}\n\n@es5ClassCompat\nexport class SnippetString {\n\n    static isSnippetString(thing: {}): thing is SnippetString {\n        if (thing instanceof SnippetString) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof (<SnippetString>thing).value === 'string';\n    }\n\n    private static _escape(value: string): string {\n        return value.replace(/\\$|}|\\\\/g, '\\\\$&');\n    }\n\n    private _tabstop: number = 1;\n\n    value: string;\n\n    constructor(value?: string) {\n        this.value = value || '';\n    }\n\n    appendText(string: string): SnippetString {\n        this.value += SnippetString._escape(string);\n        return this;\n    }\n\n    appendTabstop(number: number = this._tabstop++): SnippetString {\n        this.value += '$';\n        this.value += number;\n        return this;\n    }\n\n    appendPlaceholder(value: string | ((snippet: SnippetString) => void), number: number = this._tabstop++): SnippetString {\n\n        if (typeof value === 'function') {\n            const nested = new SnippetString();\n            nested._tabstop = this._tabstop;\n            value(nested);\n            this._tabstop = nested._tabstop;\n            value = nested.value;\n        } else {\n            value = SnippetString._escape(value);\n        }\n\n        this.value += '${';\n        this.value += number;\n        this.value += ':';\n        this.value += value;\n        this.value += '}';\n\n        return this;\n    }\n\n    appendChoice(values: string[], number: number = this._tabstop++): SnippetString {\n        const value = values.map(s => s.replace(/\\$|}|\\\\|,/g, '\\\\$&')).join(',');\n        this.value += `\\$\\{${number}|${value}|\\}`;\n        return this;\n    }\n\n    appendVariable(name: string, defaultValue?: string | ((snippet: SnippetString) => void)): SnippetString {\n\n        if (typeof defaultValue === 'function') {\n            const nested = new SnippetString();\n            nested._tabstop = this._tabstop;\n            defaultValue(nested);\n            this._tabstop = nested._tabstop;\n            defaultValue = nested.value;\n\n        } else if (typeof defaultValue === 'string') {\n            defaultValue = defaultValue.replace(/\\$|}/g, '\\\\$&');\n        }\n\n        this.value += '${';\n        this.value += name;\n        if (defaultValue) {\n            this.value += ':';\n            this.value += defaultValue;\n        }\n        this.value += '}';\n\n        return this;\n    }\n}\n\n@es5ClassCompat\nexport class ThemeColor {\n    constructor(public readonly id: string) { }\n}\n\n@es5ClassCompat\nexport class ThemeIcon {\n\n    static readonly File: ThemeIcon = new ThemeIcon('file');\n\n    static readonly Folder: ThemeIcon = new ThemeIcon('folder');\n\n    private constructor(public id: string, public color?: ThemeColor) {\n    }\n\n}\n\nexport namespace ThemeIcon {\n    export function is(item: unknown): item is ThemeIcon {\n        return isObject(item) && 'id' in item;\n    }\n    export function get(item: unknown): ThemeIcon | undefined {\n        return is(item) ? item : undefined;\n    }\n}\n\nexport enum TextEditorRevealType {\n    Default = 0,\n    InCenter = 1,\n    InCenterIfOutsideViewport = 2,\n    AtTop = 3\n}\n\n/**\n * These values match very carefully the values of `TrackedRangeStickiness`\n */\nexport enum DecorationRangeBehavior {\n    /**\n     * TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges\n     */\n    OpenOpen = 0,\n    /**\n     * TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\n     */\n    ClosedClosed = 1,\n    /**\n     * TrackedRangeStickiness.GrowsOnlyWhenTypingBefore\n     */\n    OpenClosed = 2,\n    /**\n     * TrackedRangeStickiness.GrowsOnlyWhenTypingAfter\n     */\n    ClosedOpen = 3\n}\n\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport enum OverviewRulerLane {\n    Left = 1,\n    Center = 2,\n    Right = 4,\n    Full = 7\n}\n\nexport enum ConfigurationTarget {\n    Global = 1,\n    Workspace,\n    WorkspaceFolder,\n    Default,\n    Memory\n}\n\n@es5ClassCompat\nexport class RelativePattern {\n\n    private _base!: string;\n    get base(): string {\n        return this._base;\n    }\n    set base(base: string) {\n        this._base = base;\n        this._baseUri = URI.file(base);\n    }\n\n    private _baseUri!: URI;\n    get baseUri(): URI {\n        return this._baseUri;\n    }\n    set baseUri(baseUri: URI) {\n        this._baseUri = baseUri;\n        this.base = baseUri.fsPath;\n    }\n\n    constructor(base: theia.WorkspaceFolder | URI | string, public pattern: string) {\n        if (typeof base !== 'string') {\n            if (!base || !URI.isUri(base) && !URI.isUri(base.uri)) {\n                throw illegalArgument('base');\n            }\n        }\n\n        if (typeof pattern !== 'string') {\n            throw illegalArgument('pattern');\n        }\n\n        if (typeof base === 'string') {\n            this.baseUri = URI.file(base);\n        } else if (URI.isUri(base)) {\n            this.baseUri = base;\n        } else {\n            this.baseUri = base.uri;\n        }\n    }\n\n    pathToRelative(from: string, to: string): string {\n        return relative(from, to);\n    }\n}\n\nexport enum IndentAction {\n    None = 0,\n    Indent = 1,\n    IndentOutdent = 2,\n    Outdent = 3\n}\n\nexport namespace SyntaxTokenType {\n    export function toString(v: SyntaxTokenType | unknown): 'other' | 'comment' | 'string' | 'regex' {\n        switch (v) {\n            case SyntaxTokenType.Other: return 'other';\n            case SyntaxTokenType.Comment: return 'comment';\n            case SyntaxTokenType.String: return 'string';\n            case SyntaxTokenType.RegEx: return 'regex';\n        }\n        return 'other';\n    }\n}\n\nexport enum SyntaxTokenType {\n    /**\n     * Everything except tokens that are part of comments, string literals and regular expressions.\n     */\n    Other = 0,\n    /**\n     * A comment.\n     */\n    Comment = 1,\n    /**\n     * A string literal.\n     */\n    String = 2,\n    /**\n     * A regular expression.\n     */\n    RegEx = 3\n}\n\n@es5ClassCompat\nexport class TextEdit {\n\n    protected _range: Range;\n    protected _newText: string;\n    protected _newEol: EndOfLine | undefined;\n\n    get range(): Range {\n        return this._range;\n    }\n\n    set range(value: Range) {\n        if (value && !Range.isRange(value)) {\n            throw illegalArgument('range');\n        }\n        this._range = value;\n    }\n\n    get newText(): string {\n        return this._newText || '';\n    }\n\n    set newText(value: string) {\n        if (value && typeof value !== 'string') {\n            throw illegalArgument('newText');\n        }\n        this._newText = value;\n    }\n\n    get newEol(): EndOfLine | undefined {\n        return this._newEol;\n    }\n\n    set newEol(value: EndOfLine) {\n        if (value && typeof value !== 'number') {\n            throw illegalArgument('newEol');\n        }\n        this._newEol = value;\n    }\n\n    constructor(range: Range | undefined, newText: string | undefined) {\n        this.range = range!;\n        this.newText = newText!;\n    }\n\n    static isTextEdit(thing: {}): thing is TextEdit {\n        if (thing instanceof TextEdit) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return Range.isRange((<TextEdit>thing).range)\n            && typeof (<TextEdit>thing).newText === 'string';\n    }\n\n    static replace(range: Range, newText: string): TextEdit {\n        return new TextEdit(range, newText);\n    }\n\n    static insert(position: Position, newText: string): TextEdit {\n        return TextEdit.replace(new Range(position, position), newText);\n    }\n\n    static delete(range: Range): TextEdit {\n        return TextEdit.replace(range, '');\n    }\n\n    static setEndOfLine(eol: EndOfLine): TextEdit {\n        const ret = new TextEdit(undefined, undefined);\n        ret.newEol = eol;\n        return ret;\n    }\n}\n\nexport enum CompletionTriggerKind {\n    Invoke = 0,\n    TriggerCharacter = 1,\n    TriggerForIncompleteCompletions = 2\n}\n\nexport enum CompletionItemKind {\n    Text = 0,\n    Method = 1,\n    Function = 2,\n    Constructor = 3,\n    Field = 4,\n    Variable = 5,\n    Class = 6,\n    Interface = 7,\n    Module = 8,\n    Property = 9,\n    Unit = 10,\n    Value = 11,\n    Enum = 12,\n    Keyword = 13,\n    Snippet = 14,\n    Color = 15, // eslint-disable-line @typescript-eslint/no-shadow\n    File = 16,\n    Reference = 17,\n    Folder = 18,\n    EnumMember = 19,\n    Constant = 20,\n    Struct = 21,\n    Event = 22,\n    Operator = 23,\n    TypeParameter = 24,\n    User = 25,\n    Issue = 26\n}\n\n@es5ClassCompat\nexport class CompletionItem implements theia.CompletionItem {\n\n    label: string;\n    kind?: CompletionItemKind;\n    tags?: CompletionItemTag[];\n    detail: string;\n    documentation: string | theia.MarkdownString;\n    sortText: string;\n    filterText: string;\n    preselect: boolean;\n    insertText: string | SnippetString;\n    range: Range;\n    textEdit: TextEdit;\n    additionalTextEdits: TextEdit[];\n    command: theia.Command;\n\n    constructor(label: string, kind?: CompletionItemKind) {\n        this.label = label;\n        this.kind = kind;\n    }\n}\n\n@es5ClassCompat\nexport class CompletionList {\n\n    isIncomplete?: boolean;\n\n    items: theia.CompletionItem[];\n\n    constructor(items: theia.CompletionItem[] = [], isIncomplete: boolean = false) {\n        this.items = items;\n        this.isIncomplete = isIncomplete;\n    }\n}\n\nexport enum InlineCompletionTriggerKind {\n    Invoke = 0,\n    Automatic = 1,\n}\n\n@es5ClassCompat\nexport class InlineCompletionItem implements theia.InlineCompletionItem {\n\n    filterText?: string;\n    insertText: string;\n    range?: Range;\n    command?: theia.Command;\n\n    constructor(insertText: string, range?: Range, command?: theia.Command) {\n        this.insertText = insertText;\n        this.range = range;\n        this.command = command;\n    }\n}\n\n@es5ClassCompat\nexport class InlineCompletionList implements theia.InlineCompletionList {\n\n    items: theia.InlineCompletionItem[];\n    commands: theia.Command[] | undefined = undefined;\n\n    constructor(items: theia.InlineCompletionItem[]) {\n        this.items = items;\n    }\n}\n\nexport enum DiagnosticSeverity {\n    Error = 0,\n    Warning = 1,\n    Information = 2,\n    Hint = 3\n}\n\nexport enum DebugConsoleMode {\n    Separate = 0,\n    MergeWithParent = 1\n}\n\n@es5ClassCompat\nexport class Location {\n    uri: URI;\n    range: Range;\n\n    constructor(uri: URI, rangeOrPosition: Range | Position | undefined) {\n        this.uri = uri;\n        if (rangeOrPosition instanceof Range) {\n            this.range = rangeOrPosition;\n        } else if (rangeOrPosition instanceof Position) {\n            this.range = new Range(rangeOrPosition, rangeOrPosition);\n        }\n    }\n\n    static isLocation(thing: {}): thing is theia.Location {\n        if (thing instanceof Location) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return Range.isRange((<Location>thing).range)\n            && URI.isUri((<Location>thing).uri);\n    }\n}\n\n@es5ClassCompat\nexport class DiagnosticRelatedInformation {\n    location: Location;\n    message: string;\n\n    constructor(location: Location, message: string) {\n        this.location = location;\n        this.message = message;\n    }\n}\n\nexport enum DiagnosticTag {\n    Unnecessary = 1,\n    Deprecated = 2,\n}\n\nexport enum CompletionItemTag {\n    Deprecated = 1,\n}\n\n@es5ClassCompat\nexport class Diagnostic {\n    range: Range;\n    message: string;\n    severity: DiagnosticSeverity;\n    source?: string;\n    code?: string | number;\n    relatedInformation?: DiagnosticRelatedInformation[];\n    tags?: DiagnosticTag[];\n\n    constructor(range: Range, message: string, severity: DiagnosticSeverity = DiagnosticSeverity.Error) {\n        this.range = range;\n        this.message = message;\n        this.severity = severity;\n    }\n}\n\nexport enum MarkerSeverity {\n    Hint = 1,\n    Info = 2,\n    Warning = 4,\n    Error = 8,\n}\n\nexport enum MarkerTag {\n    Unnecessary = 1,\n    Deprecated = 2,\n}\n\nexport enum NotebookCellKind {\n    Markup = 1,\n    Code = 2\n}\n\nexport enum NotebookCellStatusBarAlignment {\n    Left = 1,\n    Right = 2\n}\n\nexport enum NotebookControllerAffinity {\n    Default = 1,\n    Preferred = 2\n}\n\nexport enum NotebookEditorRevealType {\n    Default = 0,\n    InCenter = 1,\n    InCenterIfOutsideViewport = 2,\n    AtTop = 3\n}\n\nexport enum NotebookCellExecutionState {\n    /**\n     * The cell is idle.\n     */\n    Idle = 1,\n    /**\n     * Execution for the cell is pending.\n     */\n    Pending = 2,\n    /**\n     * The cell is currently executing.\n     */\n    Executing = 3,\n}\n\nexport class NotebookKernelSourceAction {\n    description?: string;\n    detail?: string;\n    command?: theia.Command;\n    constructor(\n        public label: string\n    ) { }\n}\n\n@es5ClassCompat\nexport class NotebookCellData implements theia.NotebookCellData {\n    languageId: string;\n    kind: NotebookCellKind;\n    value: string;\n    outputs?: theia.NotebookCellOutput[];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    metadata?: { [key: string]: any };\n    executionSummary?: theia.NotebookCellExecutionSummary;\n\n    constructor(kind: NotebookCellKind, value: string, languageId: string,\n        outputs?: theia.NotebookCellOutput[], metadata?: Record<string, unknown>, executionSummary?: theia.NotebookCellExecutionSummary) {\n        this.kind = kind;\n        this.value = value;\n        this.languageId = languageId;\n        this.outputs = outputs ?? [];\n        this.metadata = metadata;\n        this.executionSummary = executionSummary;\n    }\n}\n\n@es5ClassCompat\nexport class NotebookCellOutput implements theia.NotebookCellOutput {\n    outputId: string;\n    items: theia.NotebookCellOutputItem[];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    metadata?: { [key: string]: any };\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(items: theia.NotebookCellOutputItem[], idOrMetadata?: string | Record<string, any>, metadata?: { [key: string]: any }) {\n        this.items = items;\n        if (typeof idOrMetadata === 'string') {\n            this.outputId = idOrMetadata;\n            this.metadata = metadata;\n        } else {\n            this.outputId = UUID.uuid4();\n            this.metadata = idOrMetadata ?? metadata;\n        }\n    }\n}\n\nexport class NotebookCellOutputItem implements theia.NotebookCellOutputItem {\n    mime: string;\n    data: Uint8Array;\n\n    static #encoder = new TextEncoder();\n\n    static text(value: string, mime?: string): NotebookCellOutputItem {\n        const bytes = NotebookCellOutputItem.#encoder.encode(String(value));\n        return new NotebookCellOutputItem(bytes, mime || 'text/plain');\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static json(value: any, mime?: string): NotebookCellOutputItem {\n        const jsonStr = JSON.stringify(value, undefined, '\\t');\n        return NotebookCellOutputItem.text(jsonStr, mime);\n    }\n\n    static stdout(value: string): NotebookCellOutputItem {\n        return NotebookCellOutputItem.text(value, 'application/vnd.code.notebook.stdout');\n    }\n\n    static stderr(value: string): NotebookCellOutputItem {\n        return NotebookCellOutputItem.text(value, 'application/vnd.code.notebook.stderr');\n    }\n\n    static error(value: Error): NotebookCellOutputItem {\n        return NotebookCellOutputItem.json(value, 'application/vnd.code.notebook.error');\n    }\n\n    constructor(data: Uint8Array, mime: string) {\n        this.data = data;\n        this.mime = mime;\n    }\n}\n\n@es5ClassCompat\nexport class NotebookCellStatusBarItem implements theia.NotebookCellStatusBarItem {\n    text: string;\n    alignment: NotebookCellStatusBarAlignment;\n    command?: string | theia.Command;\n    tooltip?: string;\n    priority?: number;\n    accessibilityInformation?: AccessibilityInformation;\n\n    /**\n     * Creates a new NotebookCellStatusBarItem.\n     * @param text The text to show for the item.\n     * @param alignment Whether the item is aligned to the left or right.\n     * @stubbed\n     */\n    constructor(text: string, alignment: NotebookCellStatusBarAlignment) {\n        this.text = text;\n        this.alignment = alignment;\n    }\n}\n\n@es5ClassCompat\nexport class NotebookData implements theia.NotebookData {\n    cells: NotebookCellData[];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    metadata?: { [key: string]: any };\n\n    constructor(cells: NotebookCellData[]) {\n        this.cells = cells;\n    }\n}\n\nexport class NotebookRange implements theia.NotebookRange {\n    static isNotebookRange(thing: unknown): thing is theia.NotebookRange {\n        if (thing instanceof NotebookRange) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof (<NotebookRange>thing).start === 'number'\n            && typeof (<NotebookRange>thing).end === 'number';\n    }\n\n    readonly start: number;\n    readonly end: number;\n    readonly isEmpty: boolean;\n\n    with(change: { start?: number; end?: number }): NotebookRange {\n        let newStart = this.start;\n        let newEnd = this.end;\n\n        if (change.start !== undefined) {\n            newStart = change.start;\n        }\n        if (change.end !== undefined) {\n            newEnd = change.end;\n        }\n        if (newStart === this.start && newEnd === this.end) {\n            return this;\n        }\n        return new NotebookRange(newStart, newEnd);\n    }\n\n    constructor(start: number, end: number) {\n        this.start = start;\n        this.end = end;\n    }\n\n}\n\nexport class SnippetTextEdit implements theia.SnippetTextEdit {\n    range: Range;\n    snippet: SnippetString;\n    keepWhitespace?: boolean;\n\n    static isSnippetTextEdit(thing: unknown): thing is SnippetTextEdit {\n        return thing instanceof SnippetTextEdit || isObject<SnippetTextEdit>(thing)\n            && Range.isRange((<SnippetTextEdit>thing).range)\n            && SnippetString.isSnippetString((<SnippetTextEdit>thing).snippet);\n    }\n\n    static replace(range: Range, snippet: SnippetString): SnippetTextEdit {\n        return new SnippetTextEdit(range, snippet);\n    }\n\n    static insert(position: Position, snippet: SnippetString): SnippetTextEdit {\n        return SnippetTextEdit.replace(new Range(position, position), snippet);\n    }\n\n    constructor(range: Range, snippet: SnippetString) {\n        this.range = range;\n        this.snippet = snippet;\n    }\n}\n\n@es5ClassCompat\nexport class NotebookEdit implements theia.NotebookEdit {\n    range: theia.NotebookRange;\n    newCells: theia.NotebookCellData[];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    newCellMetadata?: { [key: string]: any; } | undefined;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    newNotebookMetadata?: { [key: string]: any; } | undefined;\n\n    static isNotebookCellEdit(thing: unknown): thing is NotebookEdit {\n        if (thing instanceof NotebookEdit) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return NotebookRange.isNotebookRange((<NotebookEdit>thing))\n            && Array.isArray((<NotebookEdit>thing).newCells);\n    }\n\n    static replaceCells(range: NotebookRange, newCells: NotebookCellData[]): NotebookEdit {\n        return new NotebookEdit(range, newCells);\n    }\n\n    static insertCells(index: number, newCells: NotebookCellData[]): NotebookEdit {\n        return new NotebookEdit(new NotebookRange(index, index), newCells);\n    }\n\n    static deleteCells(range: NotebookRange): NotebookEdit {\n        return new NotebookEdit(range, []);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static updateCellMetadata(index: number, newCellMetadata: { [key: string]: any }): NotebookEdit {\n        return new NotebookEdit(new NotebookRange(index, index), [], newCellMetadata);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static updateNotebookMetadata(newNotebookMetadata: { [key: string]: any }): NotebookEdit {\n        return new NotebookEdit(new NotebookRange(0, 0), [], undefined, newNotebookMetadata);\n    }\n\n    constructor(range: NotebookRange, newCells: NotebookCellData[], newCellMetadata?: { [key: string]: unknown }, newNotebookMetadata?: { [key: string]: unknown }) {\n        this.range = range;\n        this.newCells = newCells;\n        this.newCellMetadata = newCellMetadata;\n        this.newNotebookMetadata = newNotebookMetadata;\n    }\n\n}\n\nexport class NotebookRendererScript implements theia.NotebookRendererScript {\n    provides: readonly string[];\n\n    constructor(\n        public uri: theia.Uri,\n        provides?: string | readonly string[]\n    ) {\n        this.provides = Array.isArray(provides) ? provides : [provides];\n    };\n\n}\n\n@es5ClassCompat\nexport class ParameterInformation {\n    label: string | [number, number];\n    documentation?: string | theia.MarkdownString;\n\n    constructor(label: string | [number, number], documentation?: string | theia.MarkdownString) {\n        this.label = label;\n        this.documentation = documentation;\n    }\n}\n\n@es5ClassCompat\nexport class SignatureInformation {\n    label: string;\n    documentation?: string | theia.MarkdownString;\n    parameters: ParameterInformation[];\n    activeParameter?: number;\n\n    constructor(label: string, documentation?: string | theia.MarkdownString) {\n        this.label = label;\n        this.documentation = documentation;\n        this.parameters = [];\n    }\n}\n\nexport enum SignatureHelpTriggerKind {\n    Invoke = 1,\n    TriggerCharacter = 2,\n    ContentChange = 3,\n}\n\n@es5ClassCompat\nexport class SignatureHelp {\n    signatures: SignatureInformation[];\n    activeSignature: number;\n    activeParameter: number;\n\n    constructor() {\n        this.signatures = [];\n    }\n}\n\n@es5ClassCompat\nexport class Hover {\n\n    public contents: Array<theia.MarkdownString | theia.MarkedString>;\n    public range?: Range;\n\n    constructor(\n        contents: theia.MarkdownString | theia.MarkedString | Array<theia.MarkdownString | theia.MarkedString>,\n        range?: Range\n    ) {\n        if (!contents) {\n            illegalArgument('contents must be defined');\n        }\n        if (Array.isArray(contents)) {\n            this.contents = contents;\n        } else {\n            this.contents = [contents];\n        }\n        this.range = range;\n    }\n}\n\n@es5ClassCompat\nexport class EvaluatableExpression {\n\n    public range: Range;\n    public expression?: string;\n\n    constructor(\n        range: Range,\n        expression?: string\n    ) {\n        if (!range) {\n            illegalArgument('range must be defined');\n        }\n        this.range = range;\n        this.expression = expression;\n    }\n}\n\n@es5ClassCompat\nexport class InlineValueContext implements theia.InlineValueContext {\n    public frameId: number;\n    public stoppedLocation: Range;\n\n    constructor(frameId: number, stoppedLocation: Range) {\n        if (!frameId) {\n            illegalArgument('frameId must be defined');\n        }\n        if (!stoppedLocation) {\n            illegalArgument('stoppedLocation must be defined');\n        }\n        this.frameId = frameId;\n        this.stoppedLocation = stoppedLocation;\n    }\n}\n\n@es5ClassCompat\nexport class InlineValueText implements theia.InlineValueText {\n    public type = 'text';\n    public range: Range;\n    public text: string;\n\n    constructor(range: Range, text: string) {\n        if (!range) {\n            illegalArgument('range must be defined');\n        }\n        if (!text) {\n            illegalArgument('text must be defined');\n        }\n        this.range = range;\n        this.text = text;\n    }\n}\n\n@es5ClassCompat\nexport class InlineValueVariableLookup implements theia.InlineValueVariableLookup {\n    public type = 'variable';\n    public range: Range;\n    public variableName?: string;\n    public caseSensitiveLookup: boolean;\n\n    constructor(range: Range, variableName?: string, caseSensitiveLookup?: boolean) {\n        if (!range) {\n            illegalArgument('range must be defined');\n        }\n        this.range = range;\n        this.caseSensitiveLookup = caseSensitiveLookup || true;\n        this.variableName = variableName;\n    }\n}\n\n@es5ClassCompat\nexport class InlineValueEvaluatableExpression implements theia.InlineValueEvaluatableExpression {\n    public type = 'expression';\n    public range: Range;\n    public expression?: string;\n\n    constructor(range: Range, expression?: string) {\n        if (!range) {\n            illegalArgument('range must be defined');\n        }\n        this.range = range;\n        this.expression = expression;\n    }\n}\n\nexport type InlineValue = InlineValueText | InlineValueVariableLookup | InlineValueEvaluatableExpression;\n\nexport enum DocumentHighlightKind {\n    Text = 0,\n    Read = 1,\n    Write = 2\n}\n\n@es5ClassCompat\nexport class DocumentHighlight {\n\n    public range: Range;\n    public kind?: DocumentHighlightKind;\n\n    constructor(\n        range: Range,\n        kind?: DocumentHighlightKind\n    ) {\n        this.range = range;\n        this.kind = kind;\n    }\n}\n\n@es5ClassCompat\nexport class MultiDocumentHighlight {\n\n    /**\n     * The URI of the document containing the highlights.\n     */\n    uri: URI;\n\n    /**\n     * The highlights for the document.\n     */\n    highlights: DocumentHighlight[];\n\n    /**\n     * Creates a new instance of MultiDocumentHighlight.\n     * @param uri The URI of the document containing the highlights.\n     * @param highlights The highlights for the document.\n     */\n    constructor(uri: URI, highlights: DocumentHighlight[]) {\n        this.uri = uri;\n        this.highlights = highlights;\n    }\n}\n\nexport type Definition = Location | Location[];\n\n@es5ClassCompat\nexport class DocumentLink {\n\n    range: Range;\n\n    target?: URI;\n\n    tooltip?: string;\n\n    constructor(range: Range, target: URI | undefined) {\n        if (target && !(URI.isUri(target))) {\n            throw illegalArgument('target');\n        }\n        if (!Range.isRange(range) || range.isEmpty) {\n            throw illegalArgument('range');\n        }\n        this.range = range;\n        this.target = target;\n    }\n}\n\n@es5ClassCompat\nexport class DocumentDropOrPasteEditKind {\n    static readonly Empty: DocumentDropOrPasteEditKind = new DocumentDropOrPasteEditKind('');\n    static readonly Text: DocumentDropOrPasteEditKind = new DocumentDropOrPasteEditKind('text');\n    static readonly TextUpdateImports: DocumentDropOrPasteEditKind = new DocumentDropOrPasteEditKind('updateImports');\n\n    private static sep = '.';\n\n    constructor(\n        public readonly value: string\n    ) { }\n\n    public append(...parts: string[]): DocumentDropOrPasteEditKind {\n        return new DocumentDropOrPasteEditKind((this.value ? [this.value, ...parts] : parts).join(DocumentDropOrPasteEditKind.sep));\n    }\n\n    public intersects(other: DocumentDropOrPasteEditKind): boolean {\n        return this.contains(other) || other.contains(this);\n    }\n\n    public contains(other: DocumentDropOrPasteEditKind): boolean {\n        return this.value === other.value || other.value.startsWith(this.value + DocumentDropOrPasteEditKind.sep);\n    }\n}\n\n@es5ClassCompat\nexport class DocumentDropEdit {\n    title?: string;\n    kind: DocumentDropOrPasteEditKind;\n    handledMimeType?: string;\n    yieldTo?: ReadonlyArray<DocumentDropOrPasteEditKind>;\n    insertText: string | SnippetString;\n    additionalEdit?: WorkspaceEdit;\n\n    constructor(insertText: string | SnippetString) {\n        this.insertText = insertText;\n    }\n}\n\n@es5ClassCompat\nexport class CodeLens {\n\n    range: Range;\n\n    command?: theia.Command;\n\n    get isResolved(): boolean {\n        return !!this.command;\n    }\n\n    constructor(range: Range, command?: theia.Command) {\n        this.range = range;\n        this.command = command;\n    }\n}\n\nexport enum CodeActionTrigger {\n    Automatic = 1,\n    Manual = 2,\n}\n\n/**\n * The reason why code actions were requested.\n */\nexport enum CodeActionTriggerKind {\n    /**\n     * Code actions were explicitly requested by the user or by an extension.\n     */\n    Invoke = 1,\n\n    /**\n     * Code actions were requested automatically.\n     *\n     * This typically happens when current selection in a file changes, but can\n     * also be triggered when file content changes.\n     */\n    Automatic = 2,\n}\n\n@es5ClassCompat\nexport class CodeActionKind {\n    private static readonly sep = '.';\n\n    public static readonly Empty = new CodeActionKind('');\n    public static readonly QuickFix = CodeActionKind.Empty.append('quickfix');\n    public static readonly Refactor = CodeActionKind.Empty.append('refactor');\n    public static readonly RefactorExtract = CodeActionKind.Refactor.append('extract');\n    public static readonly RefactorInline = CodeActionKind.Refactor.append('inline');\n    public static readonly RefactorMove = CodeActionKind.Refactor.append('move');\n    public static readonly RefactorRewrite = CodeActionKind.Refactor.append('rewrite');\n    public static readonly Source = CodeActionKind.Empty.append('source');\n    public static readonly SourceOrganizeImports = CodeActionKind.Source.append('organizeImports');\n    public static readonly SourceFixAll = CodeActionKind.Source.append('fixAll');\n    public static readonly Notebook = CodeActionKind.Empty.append('notebook');\n\n    constructor(\n        public readonly value: string\n    ) { }\n\n    public append(parts: string): CodeActionKind {\n        return new CodeActionKind(this.value ? this.value + CodeActionKind.sep + parts : parts);\n    }\n\n    public contains(other: CodeActionKind): boolean {\n        return this.value === other.value || startsWithIgnoreCase(other.value, this.value + CodeActionKind.sep);\n    }\n\n    public intersects(other: CodeActionKind): boolean {\n        return this.contains(other) || other.contains(this);\n    }\n}\n\nexport enum TextDocumentSaveReason {\n    Manual = 1,\n    AfterDelay = 2,\n    FocusOut = 3\n}\n\n@es5ClassCompat\nexport class CodeAction {\n    title: string;\n\n    command?: theia.Command;\n\n    edit?: WorkspaceEdit;\n\n    diagnostics?: Diagnostic[];\n\n    kind?: CodeActionKind;\n\n    disabled?: { reason: string };\n\n    isPreferred?: boolean;\n\n    constructor(title: string, kind?: CodeActionKind) {\n        this.title = title;\n        this.kind = kind;\n    }\n}\n\nexport interface FileOperationOptions {\n    overwrite?: boolean;\n    ignoreIfExists?: boolean;\n    ignoreIfNotExists?: boolean;\n    recursive?: boolean;\n}\n\n// copied from https://github.com/microsoft/vscode/blob/b165e20587dd0797f37251515bc9e4dbe513ede8/src/vs/editor/common/modes.ts\nexport interface WorkspaceEditMetadata {\n    needsConfirmation: boolean;\n    label: string;\n    description?: string;\n    iconPath?: {\n        light: URI;\n        dark: URI;\n    } | ThemeIcon;\n}\n\nexport const enum FileEditType {\n    File = 1,\n    Text = 2,\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    Cell = 3,\n    CellReplace = 5,\n    Snippet = 6,\n}\n\nexport interface FileOperation {\n    _type: FileEditType.File;\n    from: URI | undefined;\n    to: URI | undefined;\n    options?: FileOperationOptions;\n    metadata?: WorkspaceEditMetadata;\n}\n\nexport interface FileTextEdit {\n    _type: FileEditType.Text;\n    uri: URI;\n    edit: TextEdit;\n    metadata?: WorkspaceEditMetadata;\n}\n\nexport interface FileSnippetTextEdit {\n    readonly _type: FileEditType.Snippet;\n    readonly uri: URI;\n    readonly range: Range;\n    readonly edit: SnippetTextEdit;\n    readonly metadata?: theia.WorkspaceEditEntryMetadata;\n}\n\nexport interface FileCellEdit {\n    readonly _type: FileEditType.Cell;\n    readonly uri: URI;\n    readonly edit?: CellMetadataEdit | NotebookDocumentMetadataEdit;\n    readonly notebookMetadata?: Record<string, unknown>;\n    readonly metadata?: theia.WorkspaceEditEntryMetadata;\n}\n\nexport interface CellEdit {\n    readonly _type: FileEditType.CellReplace;\n    readonly metadata?: theia.WorkspaceEditEntryMetadata;\n    readonly uri: URI;\n    readonly index: number;\n    readonly count: number;\n    readonly cells: theia.NotebookCellData[];\n}\n\ntype WorkspaceEditEntry = FileOperation | FileTextEdit | FileSnippetTextEdit | FileCellEdit | CellEdit | undefined;\n\n@es5ClassCompat\nexport class WorkspaceEdit implements theia.WorkspaceEdit {\n\n    private _edits = new Array<WorkspaceEditEntry>();\n\n    renameFile(from: theia.Uri, to: theia.Uri, options?: { overwrite?: boolean, ignoreIfExists?: boolean }, metadata?: WorkspaceEditMetadata): void {\n        this._edits.push({ _type: 1, from, to, options, metadata });\n    }\n\n    createFile(uri: theia.Uri, options?: { overwrite?: boolean, ignoreIfExists?: boolean }, metadata?: WorkspaceEditMetadata): void {\n        this._edits.push({ _type: 1, from: undefined, to: uri, options, metadata });\n    }\n\n    deleteFile(uri: theia.Uri, options?: { recursive?: boolean, ignoreIfNotExists?: boolean }, metadata?: WorkspaceEditMetadata): void {\n        this._edits.push({ _type: 1, from: uri, to: undefined, options, metadata });\n    }\n\n    replace(uri: URI, range: Range, newText: string, metadata?: WorkspaceEditMetadata): void {\n        this._edits.push({ _type: 2, uri, edit: new TextEdit(range, newText), metadata });\n    }\n\n    insert(resource: URI, position: Position, newText: string, metadata?: WorkspaceEditMetadata): void {\n        this.replace(resource, new Range(position, position), newText, metadata);\n    }\n\n    delete(resource: URI, range: Range, metadata?: WorkspaceEditMetadata): void {\n        this.replace(resource, range, '', metadata);\n    }\n\n    has(uri: URI): boolean {\n        for (const edit of this._edits) {\n            if (edit && edit._type === 2 && edit.uri.toString() === uri.toString()) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    set(uri: URI, edits: ReadonlyArray<TextEdit | SnippetTextEdit>): void;\n    set(uri: URI, edits: ReadonlyArray<[TextEdit | SnippetTextEdit, theia.WorkspaceEditEntryMetadata | undefined]>): void;\n    set(uri: URI, edits: ReadonlyArray<NotebookEdit>): void;\n    set(uri: URI, edits: ReadonlyArray<[NotebookEdit, theia.WorkspaceEditEntryMetadata | undefined]>): void;\n\n    set(uri: URI, edits: ReadonlyArray<TextEdit | SnippetTextEdit\n        | NotebookEdit | [NotebookEdit, theia.WorkspaceEditEntryMetadata | undefined]\n        | [TextEdit | SnippetTextEdit, theia.WorkspaceEditEntryMetadata | undefined]>): void {\n        if (!edits) {\n            // remove all text edits for `uri`\n            for (let i = 0; i < this._edits.length; i++) {\n                const element = this._edits[i];\n                if (element &&\n                    (element._type === FileEditType.Text || element._type === FileEditType.Snippet) &&\n                    element.uri.toString() === uri.toString()) {\n                    this._edits[i] = undefined;\n                }\n            }\n            this._edits = this._edits.filter(e => !!e);\n        } else {\n            // append edit to the end\n            for (const editOrTuple of edits) {\n                if (!editOrTuple) {\n                    continue;\n                }\n\n                let edit: TextEdit | SnippetTextEdit | NotebookEdit;\n                let metadata: theia.WorkspaceEditEntryMetadata | undefined;\n                if (Array.isArray(editOrTuple)) {\n                    edit = editOrTuple[0];\n                    metadata = editOrTuple[1];\n                } else {\n                    edit = editOrTuple;\n                }\n\n                if (NotebookEdit.isNotebookCellEdit(edit)) {\n                    if (edit.newCellMetadata) {\n                        this._edits.push({\n                            _type: FileEditType.Cell, metadata, uri,\n                            edit: { editType: CellEditType.Metadata, index: edit.range.start, metadata: edit.newCellMetadata }\n                        });\n                    } else if (edit.newNotebookMetadata) {\n                        this._edits.push({\n                            _type: FileEditType.Cell, metadata, uri,\n                            edit: { editType: CellEditType.DocumentMetadata, metadata: edit.newNotebookMetadata }, notebookMetadata: edit.newNotebookMetadata\n                        });\n                    } else {\n                        const start = edit.range.start;\n                        const end = edit.range.end;\n\n                        if (start !== end || edit.newCells.length > 0) {\n                            this._edits.push({ _type: FileEditType.CellReplace, uri, index: start, count: end - start, cells: edit.newCells, metadata });\n                        }\n                    }\n\n                } else if (SnippetTextEdit.isSnippetTextEdit(edit)) {\n                    this._edits.push({ _type: FileEditType.Snippet, uri, range: edit.range, edit, metadata });\n                } else {\n                    this._edits.push({ _type: FileEditType.Text, uri, edit });\n                }\n            }\n        }\n    }\n\n    get(uri: URI): TextEdit[] {\n        const res: TextEdit[] = [];\n        for (const candidate of this._edits) {\n            if (candidate && candidate._type === 2 && candidate.uri.toString() === uri.toString()) {\n                res.push(candidate.edit);\n            }\n        }\n        if (res.length === 0) {\n            return undefined!;\n        }\n        return res;\n    }\n\n    entries(): [URI, TextEdit[]][] {\n        const textEdits = new Map<string, [URI, TextEdit[]]>();\n        for (const candidate of this._edits) {\n            if (candidate && candidate._type === FileEditType.Text) {\n                let textEdit = textEdits.get(candidate.uri.toString());\n                if (!textEdit) {\n                    textEdit = [candidate.uri, []];\n                    textEdits.set(candidate.uri.toString(), textEdit);\n                }\n                textEdit[1].push(candidate.edit);\n            }\n        }\n        const result: [URI, TextEdit[]][] = [];\n        textEdits.forEach(v => result.push(v));\n        return result;\n    }\n\n    // _allEntries(): ([URI, Array<TextEdit | SnippetTextEdit>, theia.WorkspaceEditEntryMetadata] | [URI, URI, FileOperationOptions, WorkspaceEditMetadata])[] {\n    //     const res: ([URI, Array<TextEdit | SnippetTextEdit>, theia.WorkspaceEditEntryMetadata] | [URI, URI, FileOperationOptions, WorkspaceEditMetadata])[] = [];\n    //     for (const edit of this._edits) {\n    //         if (!edit) {\n    //             continue;\n    //         }\n    //         if (edit._type === FileEditType.File) {\n    //             res.push([edit.from!, edit.to!, edit.options!, edit.metadata!]);\n    //         } else {\n    //             res.push([edit.uri, [edit.edit], edit.metadata!]);\n    //         }\n    //     }\n    //     return res;\n    // }\n\n    _allEntries(): ReadonlyArray<WorkspaceEditEntry> {\n        return this._edits;\n    }\n\n    get size(): number {\n        return this.entries().length;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    toJSON(): any {\n        return this.entries();\n    }\n}\n\nexport class DataTransferItem {\n    asString(): Thenable<string> {\n        return Promise.resolve(typeof this.value === 'string' ? this.value : JSON.stringify(this.value));\n    }\n\n    asFile(): theia.DataTransferFile | undefined {\n        return undefined;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(readonly value: any) {\n    }\n}\n\n/**\n * A map containing a mapping of the mime type of the corresponding transferred data.\n *\n * Drag and drop controllers that implement {@link TreeDragAndDropController.handleDrag `handleDrag`} can add additional mime types to the\n * data transfer. These additional mime types will only be included in the `handleDrop` when the the drag was initiated from\n * an element in the same drag and drop controller.\n */\n@es5ClassCompat\nexport class DataTransfer implements Iterable<[mimeType: string, item: DataTransferItem]> {\n    private items = new Map<string, DataTransferItem>();\n    get(mimeType: string): DataTransferItem | undefined {\n        return this.items.get(mimeType);\n    }\n    set(mimeType: string, value: DataTransferItem): void {\n        this.items.set(mimeType, value);\n    }\n\n    has(mimeType: string): boolean {\n        return this.items.has(mimeType);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    forEach(callbackfn: (item: DataTransferItem, mimeType: string, dataTransfer: DataTransfer) => void, thisArg?: any): void {\n        this.items.forEach((item, mimetype) => {\n            callbackfn.call(thisArg, item, mimetype, this);\n        });\n    }\n    [Symbol.iterator](): IterableIterator<[mimeType: string, item: DataTransferItem]> {\n        return this.items[Symbol.iterator]();\n    }\n\n    clear(): void {\n        this.items.clear();\n    }\n}\n@es5ClassCompat\nexport class TreeItem {\n\n    label?: string | theia.TreeItemLabel;\n\n    id?: string;\n\n    iconPath?: string | URI | { light: string | URI; dark: string | URI } | ThemeIcon;\n\n    resourceUri?: URI;\n\n    tooltip?: string | undefined;\n\n    command?: theia.Command;\n\n    contextValue?: string;\n\n    checkboxState?: theia.TreeItemCheckboxState | {\n        readonly state: theia.TreeItemCheckboxState;\n        readonly tooltip?: string;\n        readonly accessibilityInformation?: AccessibilityInformation\n    };\n\n    constructor(label: string | theia.TreeItemLabel, collapsibleState?: theia.TreeItemCollapsibleState);\n    constructor(resourceUri: URI, collapsibleState?: theia.TreeItemCollapsibleState);\n    constructor(arg1: string | theia.TreeItemLabel | URI, public collapsibleState: theia.TreeItemCollapsibleState = TreeItemCollapsibleState.None) {\n        if (arg1 instanceof URI) {\n            this.resourceUri = arg1;\n        } else {\n            this.label = arg1;\n        }\n    }\n}\n\nexport enum TreeItemCollapsibleState {\n    None = 0,\n    Collapsed = 1,\n    Expanded = 2\n}\n\nexport enum TreeItemCheckboxState {\n    Unchecked = 0,\n    Checked = 1\n}\n\nexport enum SymbolTag {\n    Deprecated = 1\n}\n\n@es5ClassCompat\nexport class SymbolInformation {\n\n    static validate(candidate: SymbolInformation): void {\n        if (!candidate.name) {\n            throw new Error('Should provide a name inside candidate field');\n        }\n    }\n\n    name: string;\n    location: Location;\n    kind: SymbolKind;\n    tags?: SymbolTag[];\n    containerName: undefined | string;\n    constructor(name: string, kind: SymbolKind, containerName: string, location: Location);\n    constructor(name: string, kind: SymbolKind, range: Range, uri?: URI, containerName?: string);\n    constructor(name: string, kind: SymbolKind, rangeOrContainer: string | Range, locationOrUri?: Location | URI, containerName?: string) {\n        this.name = name;\n        this.kind = kind;\n        this.containerName = containerName;\n\n        if (typeof rangeOrContainer === 'string') {\n            this.containerName = rangeOrContainer;\n        }\n\n        if (locationOrUri instanceof Location) {\n            this.location = locationOrUri;\n        } else if (rangeOrContainer instanceof Range) {\n            this.location = new Location(locationOrUri!, rangeOrContainer);\n        }\n\n        SymbolInformation.validate(this);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    toJSON(): any {\n        return {\n            name: this.name,\n            kind: SymbolKind[this.kind],\n            location: this.location,\n            containerName: this.containerName\n        };\n    }\n}\n\n@es5ClassCompat\nexport class DocumentSymbol {\n\n    static validate(candidate: DocumentSymbol): void {\n        if (!candidate.name) {\n            throw new Error('Should provide a name inside candidate field');\n        }\n        if (!candidate.range.contains(candidate.selectionRange)) {\n            throw new Error('selectionRange must be contained in fullRange');\n        }\n        if (candidate.children) {\n            candidate.children.forEach(DocumentSymbol.validate);\n        }\n    }\n\n    name: string;\n    detail: string;\n    kind: SymbolKind;\n    tags?: SymbolTag[];\n    range: Range;\n    selectionRange: Range;\n    children: DocumentSymbol[];\n\n    constructor(name: string, detail: string, kind: SymbolKind, range: Range, selectionRange: Range) {\n        this.name = name;\n        this.detail = detail;\n        this.kind = kind;\n        this.range = range;\n        this.selectionRange = selectionRange;\n        this.children = [];\n\n        DocumentSymbol.validate(this);\n    }\n}\n\nexport enum CommentThreadState {\n    Unresolved = 0,\n    Resolved = 1\n}\n\nexport enum CommentThreadCollapsibleState {\n    Collapsed = 0,\n    Expanded = 1\n}\n\n@es5ClassCompat\nexport class QuickInputButtons {\n    static readonly Back: theia.QuickInputButton = {\n        iconPath: {\n            id: 'Back',\n        },\n        tooltip: 'Back'\n    };\n}\n\n@es5ClassCompat\nexport class TerminalLink {\n\n    static validate(candidate: TerminalLink): void {\n        if (typeof candidate.startIndex !== 'number') {\n            throw new Error('Should provide a startIndex inside candidate field');\n        }\n        if (typeof candidate.length !== 'number') {\n            throw new Error('Should provide a length inside candidate field');\n        }\n    }\n\n    startIndex: number;\n    length: number;\n    tooltip?: string;\n\n    constructor(startIndex: number, length: number, tooltip?: string) {\n        this.startIndex = startIndex;\n        this.length = length;\n        this.tooltip = tooltip;\n    }\n}\n\nexport enum TerminalLocation {\n    Panel = 1,\n    Editor = 2\n}\n\nexport enum TerminalOutputAnchor {\n    Top = 0,\n    Bottom = 1\n}\n\nexport class TerminalProfile {\n    /**\n     * Creates a new terminal profile.\n     * @param options The options that the terminal will launch with.\n     */\n    constructor(readonly options: theia.TerminalOptions | theia.ExtensionTerminalOptions) {\n    }\n}\n\nexport enum TerminalExitReason {\n    Unknown = 0,\n    Shutdown = 1,\n    Process = 2,\n    User = 3,\n    Extension = 4,\n}\n\n@es5ClassCompat\nexport class FileDecoration {\n\n    static validate(d: FileDecoration): void {\n        if (d.badge && d.badge.length !== 1 && d.badge.length !== 2) {\n            throw new Error('The \\'badge\\'-property must be undefined or a short character');\n        }\n        if (!d.color && !d.badge && !d.tooltip) {\n            throw new Error('The decoration is empty');\n        }\n    }\n\n    badge?: string;\n    tooltip?: string;\n    color?: theia.ThemeColor;\n    priority?: number;\n    propagate?: boolean;\n\n    constructor(badge?: string, tooltip?: string, color?: ThemeColor) {\n        this.badge = badge;\n        this.tooltip = tooltip;\n        this.color = color;\n    }\n}\n\nexport enum CommentMode {\n    Editing = 0,\n    Preview = 1\n}\n\n// #region file api\n\nexport enum FileChangeType {\n    Changed = 1,\n    Created = 2,\n    Deleted = 3,\n}\n\n@es5ClassCompat\nexport class FileSystemError extends Error {\n\n    static FileExists(messageOrUri?: string | URI): FileSystemError {\n        return new FileSystemError(messageOrUri, FileSystemProviderErrorCode.FileExists, FileSystemError.FileExists);\n    }\n    static FileNotFound(messageOrUri?: string | URI): FileSystemError {\n        return new FileSystemError(messageOrUri, FileSystemProviderErrorCode.FileNotFound, FileSystemError.FileNotFound);\n    }\n    static FileNotADirectory(messageOrUri?: string | URI): FileSystemError {\n        return new FileSystemError(messageOrUri, FileSystemProviderErrorCode.FileNotADirectory, FileSystemError.FileNotADirectory);\n    }\n    static FileIsADirectory(messageOrUri?: string | URI): FileSystemError {\n        return new FileSystemError(messageOrUri, FileSystemProviderErrorCode.FileIsADirectory, FileSystemError.FileIsADirectory);\n    }\n    static NoPermissions(messageOrUri?: string | URI): FileSystemError {\n        return new FileSystemError(messageOrUri, FileSystemProviderErrorCode.NoPermissions, FileSystemError.NoPermissions);\n    }\n    static Unavailable(messageOrUri?: string | URI): FileSystemError {\n        return new FileSystemError(messageOrUri, FileSystemProviderErrorCode.Unavailable, FileSystemError.Unavailable);\n    }\n\n    readonly code: string;\n\n    constructor(uriOrMessage?: string | URI, code: FileSystemProviderErrorCode = FileSystemProviderErrorCode.Unknown, terminator?: Function) {\n        super(URI.isUri(uriOrMessage) ? uriOrMessage.toString(true) : uriOrMessage);\n\n        this.code = terminator?.name ?? 'Unknown';\n\n        // mark the error as file system provider error so that\n        // we can extract the error code on the receiving side\n        markAsFileSystemProviderError(this, code);\n\n        // workaround when extending builtin objects and when compiling to ES5, see:\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        if (typeof Object.setPrototypeOf === 'function') {\n            Object.setPrototypeOf(this, FileSystemError.prototype);\n        }\n\n        if (typeof Error.captureStackTrace === 'function' && typeof terminator === 'function') {\n            // nice stack traces\n            Error.captureStackTrace(this, terminator);\n        }\n    }\n}\n\n// #endregion\n\nexport enum FileType {\n    Unknown = 0,\n    File = 1,\n    Directory = 2,\n    SymbolicLink = 64\n}\n\nexport interface FileStat {\n    readonly type: FileType;\n    readonly ctime: number;\n    readonly mtime: number;\n    readonly size: number;\n}\n\n@es5ClassCompat\nexport class ProgressOptions {\n    /**\n     * The location at which progress should show.\n     */\n    location: ProgressLocation;\n    /**\n     * A human-readable string which will be used to describe the\n     * operation.\n     */\n    title?: string;\n    /**\n     * Controls if a cancel button should show to allow the user to\n     * cancel the long running operation.  Note that currently only\n     * `ProgressLocation.Notification` is supporting to show a cancel\n     * button.\n     */\n    cancellable?: boolean;\n    constructor(location: ProgressLocation, title?: string, cancellable?: boolean) {\n        this.location = location;\n    }\n}\n\n@es5ClassCompat\nexport class Progress<T> {\n    /**\n     * Report a progress update.\n     * @param value A progress item, like a message and/or an\n     * report on how much work finished\n     */\n    report(value: T): void {\n    }\n}\nexport enum ProgressLocation {\n    /**\n     * Show progress for the source control viewlet, as overlay for the icon and as progress bar\n     * inside the viewlet (when visible). Neither supports cancellation nor discrete progress.\n     */\n    SourceControl = 1,\n    /**\n     * Show progress in the status bar of the editor. Neither supports cancellation nor discrete progress.\n     */\n    Window = 10,\n    /**\n     * Show progress as notification with an optional cancel button. Supports to show infinite and discrete progress.\n     */\n    Notification = 15\n}\n\n@es5ClassCompat\nexport class ProcessExecution {\n    private executionProcess: string;\n    private arguments: string[];\n    private executionOptions: theia.ProcessExecutionOptions | undefined;\n\n    constructor(process: string, options?: theia.ProcessExecutionOptions);\n    constructor(process: string, args: string[], options?: theia.ProcessExecutionOptions);\n    constructor(process: string, varg1?: string[] | theia.ProcessExecutionOptions, varg2?: theia.ProcessExecutionOptions) {\n        if (typeof process !== 'string') {\n            throw illegalArgument('process');\n        }\n        this.executionProcess = process;\n        if (varg1 !== undefined) {\n            if (Array.isArray(varg1)) {\n                this.arguments = varg1;\n                this.executionOptions = varg2;\n            } else {\n                this.executionOptions = varg1;\n            }\n        }\n        if (this.arguments === undefined) {\n            this.arguments = [];\n        }\n    }\n\n    get process(): string {\n        return this.executionProcess;\n    }\n\n    set process(value: string) {\n        if (typeof value !== 'string') {\n            throw illegalArgument('process');\n        }\n        this.executionProcess = value;\n    }\n\n    get args(): string[] {\n        return this.arguments;\n    }\n\n    set args(value: string[]) {\n        if (!Array.isArray(value)) {\n            value = [];\n        }\n        this.arguments = value;\n    }\n\n    get options(): theia.ProcessExecutionOptions | undefined {\n        return this.executionOptions;\n    }\n\n    set options(value: theia.ProcessExecutionOptions | undefined) {\n        this.executionOptions = value;\n    }\n\n    public static is(value: theia.ShellExecution | theia.ProcessExecution | theia.CustomExecution): value is ProcessExecution {\n        const candidate = value as ProcessExecution;\n        return candidate && !!candidate.process;\n    }\n}\n\nexport enum QuickPickItemKind {\n    Separator = -1,\n    Default = 0,\n}\n\nexport enum ShellQuoting {\n    Escape = 1,\n    Strong = 2,\n    Weak = 3\n}\n\nexport enum TaskPanelKind {\n    Shared = 1,\n    Dedicated = 2,\n    New = 3\n}\n\nexport enum TaskRevealKind {\n    Always = 1,\n    Silent = 2,\n    Never = 3\n}\n\n@es5ClassCompat\nexport class ShellExecution {\n    private shellCommandLine: string;\n    private shellCommand: string | theia.ShellQuotedString;\n    private arguments: (string | theia.ShellQuotedString)[];\n    private shellOptions: theia.ShellExecutionOptions | undefined;\n\n    constructor(commandLine: string, options?: theia.ShellExecutionOptions);\n    constructor(command: string | theia.ShellQuotedString, args: (string | theia.ShellQuotedString)[], options?: theia.ShellExecutionOptions);\n\n    constructor(arg0: string | theia.ShellQuotedString, arg1?: theia.ShellExecutionOptions | (string | theia.ShellQuotedString)[], arg2?: theia.ShellExecutionOptions) {\n        if (Array.isArray(arg1) || typeof arg1 === 'string') {\n            if (!arg0) {\n                throw illegalArgument('command can\\'t be undefined or null');\n            }\n            if (typeof arg0 !== 'string' && typeof arg0.value !== 'string') {\n                throw illegalArgument('command');\n            }\n            this.shellCommand = arg0;\n            this.arguments = arg1 as (string | theia.ShellQuotedString)[];\n            this.shellOptions = arg2;\n        } else {\n            if (typeof arg0 !== 'string') {\n                throw illegalArgument('commandLine');\n            }\n            this.shellCommandLine = arg0;\n            this.shellOptions = arg1;\n        }\n    }\n\n    get commandLine(): string {\n        return this.shellCommandLine;\n    }\n\n    set commandLine(value: string) {\n        if (typeof value !== 'string') {\n            throw illegalArgument('commandLine');\n        }\n        this.shellCommandLine = value;\n    }\n\n    get command(): string | theia.ShellQuotedString {\n        return this.shellCommand;\n    }\n\n    set command(value: string | theia.ShellQuotedString) {\n        if (typeof value !== 'string' && typeof value.value !== 'string') {\n            throw illegalArgument('command');\n        }\n        this.shellCommand = value;\n    }\n\n    get args(): (string | theia.ShellQuotedString)[] {\n        return this.arguments;\n    }\n\n    set args(value: (string | theia.ShellQuotedString)[]) {\n        this.arguments = value || [];\n    }\n\n    get options(): theia.ShellExecutionOptions | undefined {\n        return this.shellOptions;\n    }\n\n    set options(value: theia.ShellExecutionOptions | undefined) {\n        this.shellOptions = value;\n    }\n\n    public static is(value: theia.ShellExecution | theia.ProcessExecution | theia.CustomExecution): value is ShellExecution {\n        const candidate = value as ShellExecution;\n        return candidate && (!!candidate.commandLine || !!candidate.command);\n    }\n}\n\n@es5ClassCompat\nexport class CustomExecution {\n    private _callback: (resolvedDefinition: theia.TaskDefinition) => Thenable<theia.Pseudoterminal>;\n    constructor(callback: (resolvedDefinition: theia.TaskDefinition) => Thenable<theia.Pseudoterminal>) {\n        this._callback = callback;\n    }\n\n    public set callback(value: (resolvedDefinition: theia.TaskDefinition) => Thenable<theia.Pseudoterminal>) {\n        this._callback = value;\n    }\n\n    public get callback(): ((resolvedDefinition: theia.TaskDefinition) => Thenable<theia.Pseudoterminal>) {\n        return this._callback;\n    }\n\n    public static is(value: theia.ShellExecution | theia.ProcessExecution | theia.CustomExecution): value is CustomExecution {\n        const candidate = value as CustomExecution;\n        return candidate && (!!candidate._callback);\n    }\n}\n\n@es5ClassCompat\nexport class TaskGroup {\n\n    public static Clean: TaskGroup = new TaskGroup('clean', 'Clean');\n    public static Build: TaskGroup = new TaskGroup('build', 'Build');\n    public static Rebuild: TaskGroup = new TaskGroup('rebuild', 'Rebuild');\n    public static Test: TaskGroup = new TaskGroup('test', 'Test');\n\n    public static from(value: string): TaskGroup | undefined {\n        switch (value) {\n            case 'clean':\n                return TaskGroup.Clean;\n            case 'build':\n                return TaskGroup.Build;\n            case 'rebuild':\n                return TaskGroup.Rebuild;\n            case 'test':\n                return TaskGroup.Test;\n            default:\n                return undefined;\n        }\n    }\n\n    constructor(id: 'clean' | 'build' | 'rebuild' | 'test', label: string);\n    constructor(id: 'clean' | 'build' | 'rebuild' | 'test', label: string, isDefault?: boolean | undefined);\n    constructor(readonly id: 'clean' | 'build' | 'rebuild' | 'test', label: string, isDefault?: boolean | undefined) {\n        this.isDefault = !!isDefault;\n    }\n\n    readonly isDefault: boolean;\n}\n\nexport enum TaskScope {\n    Global = 1,\n    Workspace = 2\n}\n\n@es5ClassCompat\nexport class Task {\n    private taskDefinition: theia.TaskDefinition;\n    private taskScope: theia.TaskScope.Global | theia.TaskScope.Workspace | theia.WorkspaceFolder | undefined;\n    private taskName: string;\n    private taskExecution: ProcessExecution | ShellExecution | CustomExecution | undefined;\n    private taskProblemMatchers: string[];\n    private hasTaskProblemMatchers: boolean;\n    private isTaskBackground: boolean;\n    private taskSource: string;\n    private taskGroup: TaskGroup | undefined;\n    private taskPresentationOptions: theia.TaskPresentationOptions;\n    private taskRunOptions: theia.RunOptions;\n    constructor(\n        taskDefinition: theia.TaskDefinition,\n        scope: theia.WorkspaceFolder | theia.TaskScope.Global | theia.TaskScope.Workspace,\n        name: string,\n        source: string,\n        execution?: ProcessExecution | ShellExecution | CustomExecution,\n        problemMatchers?: string | string[]\n    );\n\n    // Deprecated constructor used by Jake vscode built-in\n    constructor(\n        taskDefinition: theia.TaskDefinition,\n        name: string,\n        source: string,\n        execution?: ProcessExecution | ShellExecution | CustomExecution,\n        problemMatchers?: string | string[],\n    );\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(...args: any[]) {\n        let taskDefinition: theia.TaskDefinition;\n        let scope: theia.WorkspaceFolder | theia.TaskScope.Global | theia.TaskScope.Workspace | undefined;\n        let name: string;\n        let source: string;\n        let execution: ProcessExecution | ShellExecution | CustomExecution | undefined;\n        let problemMatchers: string | string[] | undefined;\n\n        if (typeof args[1] === 'string') {\n            [\n                taskDefinition,\n                name,\n                source,\n                execution,\n                problemMatchers,\n            ] = args;\n        } else {\n            [\n                taskDefinition,\n                scope,\n                name,\n                source,\n                execution,\n                problemMatchers,\n            ] = args;\n        }\n\n        this.definition = taskDefinition;\n        this.scope = scope;\n        this.name = name;\n        this.source = source;\n        this.execution = execution;\n\n        if (typeof problemMatchers === 'string') {\n            this.taskProblemMatchers = [problemMatchers];\n            this.hasTaskProblemMatchers = true;\n        } else if (Array.isArray(problemMatchers)) {\n            this.taskProblemMatchers = problemMatchers;\n            this.hasTaskProblemMatchers = true;\n        } else {\n            this.taskProblemMatchers = [];\n            this.hasTaskProblemMatchers = false;\n        }\n        this.isTaskBackground = false;\n        this.presentationOptions = Object.create(null);\n        this.taskRunOptions = Object.create(null);\n    }\n\n    get definition(): theia.TaskDefinition {\n        return this.taskDefinition;\n    }\n\n    set definition(value: theia.TaskDefinition) {\n        if (value === undefined || value === null) {\n            throw illegalArgument('Kind can\\'t be undefined or null');\n        }\n        this.taskDefinition = value;\n    }\n\n    get scope(): theia.TaskScope.Global | theia.TaskScope.Workspace | theia.WorkspaceFolder | undefined {\n        return this.taskScope;\n    }\n\n    set scope(value: theia.TaskScope.Global | theia.TaskScope.Workspace | theia.WorkspaceFolder | undefined) {\n        if (value === null) {\n            value = undefined;\n        }\n        this.taskScope = value;\n    }\n\n    get name(): string {\n        return this.taskName;\n    }\n\n    set name(value: string) {\n        if (typeof value !== 'string') {\n            throw illegalArgument('name');\n        }\n        this.taskName = value;\n    }\n\n    get execution(): ProcessExecution | ShellExecution | CustomExecution | undefined {\n        return this.taskExecution;\n    }\n\n    set execution(value: ProcessExecution | ShellExecution | CustomExecution | undefined) {\n        if (value === null) {\n            value = undefined;\n        }\n        this.taskExecution = value;\n    }\n\n    get problemMatchers(): string[] {\n        return this.taskProblemMatchers;\n    }\n\n    set problemMatchers(value: string[]) {\n        if (!Array.isArray(value)) {\n            this.taskProblemMatchers = [];\n            this.hasTaskProblemMatchers = false;\n            return;\n        }\n        this.taskProblemMatchers = value;\n        this.hasTaskProblemMatchers = true;\n    }\n\n    get hasProblemMatchers(): boolean {\n        return this.hasTaskProblemMatchers;\n    }\n\n    get isBackground(): boolean {\n        return this.isTaskBackground;\n    }\n\n    set isBackground(value: boolean) {\n        if (value !== true && value !== false) {\n            value = false;\n        }\n        this.isTaskBackground = value;\n    }\n\n    get source(): string {\n        return this.taskSource;\n    }\n\n    set source(value: string) {\n        if (typeof value !== 'string' || value.length === 0) {\n            throw illegalArgument('source must be a string of length > 0');\n        }\n        this.taskSource = value;\n    }\n\n    get group(): TaskGroup | undefined {\n        return this.taskGroup;\n    }\n\n    set group(value: TaskGroup | undefined) {\n        if (value === undefined || value === null) {\n            this.taskGroup = undefined;\n            return;\n        }\n        this.taskGroup = value;\n    }\n\n    get presentationOptions(): theia.TaskPresentationOptions {\n        return this.taskPresentationOptions;\n    }\n\n    set presentationOptions(value: theia.TaskPresentationOptions) {\n        if (value === null || value === undefined) {\n            value = Object.create(null);\n        }\n        this.taskPresentationOptions = value;\n    }\n\n    get runOptions(): theia.RunOptions {\n        return this.taskRunOptions;\n    }\n\n    set runOptions(value: theia.RunOptions) {\n        if (value === null || value === undefined) {\n            value = Object.create(null);\n        }\n        this.taskRunOptions = value;\n    }\n}\n\n@es5ClassCompat\nexport class Task2 extends Task { }\n\n@es5ClassCompat\nexport class DebugAdapterExecutable {\n    /**\n     * The command or path of the debug adapter executable.\n     * A command must be either an absolute path of an executable or the name of an command to be looked up via the PATH environment variable.\n     * The special value 'node' will be mapped to VS Code's built-in Node.js runtime.\n     */\n    readonly command: string;\n\n    /**\n     * The arguments passed to the debug adapter executable. Defaults to an empty array.\n     */\n    readonly args?: string[];\n\n    /**\n     * Optional options to be used when the debug adapter is started.\n     * Defaults to undefined.\n     */\n    readonly options?: theia.DebugAdapterExecutableOptions;\n\n    /**\n     * Creates a description for a debug adapter based on an executable program.\n     *\n     * @param command The command or executable path that implements the debug adapter.\n     * @param args Optional arguments to be passed to the command or executable.\n     * @param options Optional options to be used when starting the command or executable.\n     */\n    constructor(command: string, args?: string[], options?: theia.DebugAdapterExecutableOptions) {\n        this.command = command;\n        this.args = args;\n        this.options = options;\n    }\n}\n\nexport namespace DebugAdapterExecutable {\n    export function is(adapter: theia.DebugAdapterDescriptor | undefined): adapter is theia.DebugAdapterExecutable {\n        return !!adapter && 'command' in adapter;\n    }\n}\n\n/**\n * Represents a debug adapter running as a socket based server.\n */\n@es5ClassCompat\nexport class DebugAdapterServer {\n\n    /**\n     * The port.\n     */\n    readonly port: number;\n\n    /**\n     * The host.\n     */\n    readonly host?: string;\n\n    /**\n     * Create a description for a debug adapter running as a socket based server.\n     */\n    constructor(port: number, host?: string) {\n        this.port = port;\n        this.host = host;\n    }\n}\n\nexport namespace DebugAdapterServer {\n    export function is(adapter: theia.DebugAdapterDescriptor | undefined): adapter is DebugAdapterServer {\n        return !!adapter && 'port' in adapter;\n    }\n}\n\n/**\n * Represents a debug adapter running as a Named Pipe (on Windows)/UNIX Domain Socket (on non-Windows) based server.\n */\n@es5ClassCompat\nexport class DebugAdapterNamedPipeServer {\n    /**\n     * Create a description for a debug adapter running as a Named Pipe (on Windows)/UNIX Domain Socket (on non-Windows) based server.\n     */\n    constructor(readonly path: string) { }\n}\n\nexport namespace DebugAdapterNamedPipeServer {\n    export function is(adapter: theia.DebugAdapterDescriptor | undefined): adapter is DebugAdapterNamedPipeServer {\n        return !!adapter && 'path' in adapter;\n    }\n}\n\n/**\n * A debug adapter descriptor for an inline implementation.\n */\n@es5ClassCompat\nexport class DebugAdapterInlineImplementation {\n    implementation: theia.DebugAdapter;\n\n    /**\n     * Create a descriptor for an inline implementation of a debug adapter.\n     */\n    constructor(impl: theia.DebugAdapter) {\n        this.implementation = impl;\n    }\n}\n\nexport namespace DebugAdapterInlineImplementation {\n    export function is(adapter: theia.DebugAdapterDescriptor | undefined): adapter is DebugAdapterInlineImplementation {\n        return !!adapter && 'implementation' in adapter;\n    }\n}\n\nexport type DebugAdapterDescriptor = DebugAdapterExecutable | DebugAdapterServer | DebugAdapterNamedPipeServer | DebugAdapterInlineImplementation;\n\nexport enum LogLevel {\n    Off = 0,\n    Trace = 1,\n    Debug = 2,\n    Info = 3,\n    Warning = 4,\n    Error = 5\n}\n\n/**\n * The base class of all breakpoint types.\n */\n@es5ClassCompat\nexport class Breakpoint {\n    /**\n     * Is breakpoint enabled.\n     */\n    enabled: boolean;\n    /**\n     * An optional expression for conditional breakpoints.\n     */\n    condition?: string;\n    /**\n     * An optional expression that controls how many hits of the breakpoint are ignored.\n     */\n    hitCondition?: string;\n    /**\n     * An optional message that gets logged when this breakpoint is hit. Embedded expressions within {} are interpolated by the debug adapter.\n     */\n    logMessage?: string;\n\n    protected constructor(enabled?: boolean, condition?: string, hitCondition?: string, logMessage?: string, id?: string) {\n        this.enabled = enabled || false;\n        this.condition = condition;\n        this.hitCondition = hitCondition;\n        this.logMessage = logMessage;\n        this._id = id;\n    }\n\n    private _id: string | undefined;\n    /**\n     * The unique ID of the breakpoint.\n     */\n    get id(): string {\n        if (!this._id) {\n            this._id = UUID.uuid4();\n        }\n        return this._id;\n    }\n\n}\n\n/**\n * A breakpoint specified by a source location.\n */\n@es5ClassCompat\nexport class SourceBreakpoint extends Breakpoint {\n    /**\n     * The source and line position of this breakpoint.\n     */\n    location: Location;\n\n    /**\n     * Create a new breakpoint for a source location.\n     */\n    constructor(location: Location, enabled?: boolean, condition?: string, hitCondition?: string, logMessage?: string, id?: string) {\n        super(enabled, condition, hitCondition, logMessage, id);\n        this.location = location;\n    }\n}\n\n/**\n * A breakpoint specified by a function name.\n */\n@es5ClassCompat\nexport class FunctionBreakpoint extends Breakpoint {\n    /**\n     * The name of the function to which this breakpoint is attached.\n     */\n    functionName: string;\n\n    /**\n     * Create a new function breakpoint.\n     */\n    constructor(functionName: string, enabled?: boolean, condition?: string, hitCondition?: string, logMessage?: string, id?: string) {\n        super(enabled, condition, hitCondition, logMessage, id);\n        this.functionName = functionName;\n    }\n}\n\nexport class DebugThread implements theia.DebugThread {\n    constructor(readonly session: theia.DebugSession, readonly threadId: number) { }\n}\n\nexport class DebugStackFrame implements theia.DebugStackFrame {\n    constructor(readonly session: theia.DebugSession, readonly threadId: number, readonly frameId: number) { }\n}\n\n@es5ClassCompat\nexport class Color {\n    readonly red: number;\n    readonly green: number;\n    readonly blue: number;\n    readonly alpha: number;\n\n    constructor(red: number, green: number, blue: number, alpha: number) {\n        this.red = red;\n        this.green = green;\n        this.blue = blue;\n        this.alpha = alpha;\n    }\n}\n\n@es5ClassCompat\nexport class ColorInformation {\n    range: Range;\n    color: Color;\n\n    constructor(range: Range, color: Color) {\n        if (color && !(color instanceof Color)) {\n            throw illegalArgument('color');\n        }\n        if (!Range.isRange(range)) {\n            throw illegalArgument('range');\n        }\n        this.range = range;\n        this.color = color;\n    }\n}\n\n@es5ClassCompat\nexport class ColorPresentation {\n    label: string;\n    textEdit?: TextEdit;\n    additionalTextEdits?: TextEdit[];\n\n    constructor(label: string) {\n        if (!label || typeof label !== 'string') {\n            throw illegalArgument('label');\n        }\n        this.label = label;\n    }\n}\n\nexport enum ColorFormat {\n    RGB = 0,\n    HEX = 1,\n    HSL = 2\n}\n\n@es5ClassCompat\nexport class InlayHintLabelPart implements theia.InlayHintLabelPart {\n    value: string;\n    tooltip?: string | theia.MarkdownString | undefined;\n    location?: Location | undefined;\n    command?: theia.Command | undefined;\n\n    constructor(value: string) {\n        this.value = value;\n    }\n}\n\n@es5ClassCompat\nexport class InlayHint implements theia.InlayHint {\n    position: theia.Position;\n    label: string | InlayHintLabelPart[];\n    tooltip?: string | theia.MarkdownString | undefined;\n    kind?: InlayHintKind;\n    textEdits?: TextEdit[];\n    paddingLeft?: boolean;\n    paddingRight?: boolean;\n\n    constructor(position: theia.Position, label: string | InlayHintLabelPart[], kind?: InlayHintKind) {\n        this.position = position;\n        this.label = label;\n        this.kind = kind;\n    }\n}\n\nexport enum InlayHintKind {\n    Type = 1,\n    Parameter = 2,\n}\n\n@es5ClassCompat\nexport class FoldingRange {\n    start: number;\n    end: number;\n    kind?: FoldingRangeKind;\n\n    constructor(start: number, end: number, kind?: FoldingRangeKind) {\n        this.start = start;\n        this.end = end;\n        this.kind = kind;\n    }\n}\n\nexport enum FoldingRangeKind {\n    Comment = 1,\n    Imports = 2,\n    Region = 3\n}\n\n@es5ClassCompat\nexport class SelectionRange {\n\n    range: Range;\n    parent?: SelectionRange;\n\n    constructor(range: Range, parent?: SelectionRange) {\n        this.range = range;\n        this.parent = parent;\n\n        if (parent && !parent.range.contains(this.range)) {\n            throw new Error('Invalid argument: parent must contain this range');\n        }\n    }\n}\n\n/**\n * Enumeration of the supported operating systems.\n */\nexport enum OperatingSystem {\n    Windows = 'Windows',\n    Linux = 'Linux',\n    OSX = 'OSX'\n}\n\n/** The areas of the application shell where webview panel can reside. */\nexport enum WebviewPanelTargetArea {\n    Main = 'main',\n    Left = 'left',\n    Right = 'right',\n    Bottom = 'bottom'\n}\n\n/**\n * Possible kinds of UI that can use extensions.\n */\nexport enum UIKind {\n\n    /**\n     * Extensions are accessed from a desktop application.\n     */\n    Desktop = 1,\n\n    /**\n     * Extensions are accessed from a web browser.\n     */\n    Web = 2\n}\n\n@es5ClassCompat\nexport class CallHierarchyItem {\n    _sessionId?: string;\n    _itemId?: string;\n\n    kind: SymbolKind;\n    name: string;\n    detail?: string;\n    uri: URI;\n    range: Range;\n    selectionRange: Range;\n    tags?: readonly SymbolTag[];\n\n    constructor(kind: SymbolKind, name: string, detail: string, uri: URI, range: Range, selectionRange: Range) {\n        this.kind = kind;\n        this.name = name;\n        this.detail = detail;\n        this.uri = uri;\n        this.range = range;\n        this.selectionRange = selectionRange;\n    }\n\n    static isCallHierarchyItem(thing: {}): thing is CallHierarchyItem {\n        if (thing instanceof CallHierarchyItem) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof (<CallHierarchyItem>thing).kind === 'number' &&\n            typeof (<CallHierarchyItem>thing).name === 'string' &&\n            URI.isUri((<CallHierarchyItem>thing).uri) &&\n            Range.isRange((<CallHierarchyItem>thing).range) &&\n            Range.isRange((<CallHierarchyItem>thing).selectionRange);\n    }\n}\n\n@es5ClassCompat\nexport class CallHierarchyIncomingCall {\n\n    from: theia.CallHierarchyItem;\n    fromRanges: theia.Range[];\n\n    constructor(item: CallHierarchyItem, fromRanges: Range[]) {\n        this.fromRanges = fromRanges;\n        this.from = item;\n    }\n}\n\n@es5ClassCompat\nexport class CallHierarchyOutgoingCall {\n\n    to: theia.CallHierarchyItem;\n    fromRanges: theia.Range[];\n\n    constructor(item: CallHierarchyItem, fromRanges: Range[]) {\n        this.fromRanges = fromRanges;\n        this.to = item;\n    }\n}\n\n@es5ClassCompat\nexport class TypeHierarchyItem {\n    _sessionId?: string;\n    _itemId?: string;\n\n    kind: SymbolKind;\n    tags?: readonly SymbolTag[];\n    name: string;\n    detail?: string;\n    uri: URI;\n    range: Range;\n    selectionRange: Range;\n\n    constructor(kind: SymbolKind, name: string, detail: string, uri: URI, range: Range, selectionRange: Range) {\n        this.kind = kind;\n        this.name = name;\n        this.detail = detail;\n        this.uri = uri;\n        this.range = range;\n        this.selectionRange = selectionRange;\n    }\n\n    static isTypeHierarchyItem(thing: {}): thing is TypeHierarchyItem {\n        if (thing instanceof TypeHierarchyItem) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof (<TypeHierarchyItem>thing).kind === 'number' &&\n            typeof (<TypeHierarchyItem>thing).name === 'string' &&\n            URI.isUri((<TypeHierarchyItem>thing).uri) &&\n            Range.isRange((<TypeHierarchyItem>thing).range) &&\n            Range.isRange((<TypeHierarchyItem>thing).selectionRange);\n    }\n}\n\nexport enum LanguageStatusSeverity {\n    Information = 0,\n    Warning = 1,\n    Error = 2\n}\n\n@es5ClassCompat\nexport class LinkedEditingRanges {\n\n    ranges: theia.Range[];\n    wordPattern?: RegExp;\n\n    constructor(ranges: Range[], wordPattern?: RegExp) {\n        this.ranges = ranges;\n        this.wordPattern = wordPattern;\n    }\n}\n\n// Copied from https://github.com/microsoft/vscode/blob/1.72.2/src/vs/workbench/api/common/extHostTypes.ts\nexport enum TestResultState {\n    Queued = 1,\n    Running = 2,\n    Passed = 3,\n    Failed = 4,\n    Skipped = 5,\n    Errored = 6\n}\n\nexport enum TestRunProfileKind {\n    Run = 1,\n    Debug = 2,\n    Coverage = 3,\n}\n\n@es5ClassCompat\nexport class TestTag implements theia.TestTag {\n    constructor(public readonly id: string) { }\n}\n\nlet nextTestRunId = 0;\n@es5ClassCompat\nexport class TestRunRequest implements theia.TestRunRequest {\n    testRunId: number = nextTestRunId++;\n\n    constructor(\n        public readonly include: theia.TestItem[] | undefined = undefined,\n        public readonly exclude: theia.TestItem[] | undefined = undefined,\n        public readonly profile: theia.TestRunProfile | undefined = undefined,\n        public readonly continuous: boolean | undefined = undefined,\n        public readonly preserveFocus: boolean = true\n    ) { }\n}\n\n@es5ClassCompat\nexport class TestMessage implements theia.TestMessage {\n    public expectedOutput?: string;\n    public actualOutput?: string;\n    public location?: theia.Location;\n    public contextValue?: string;\n    public stackTrace?: theia.TestMessageStackFrame[] | undefined;\n\n    public static diff(message: string | theia.MarkdownString, expected: string, actual: string): theia.TestMessage {\n        const msg = new TestMessage(message);\n        msg.expectedOutput = expected;\n        msg.actualOutput = actual;\n        return msg;\n    }\n\n    constructor(public message: string | theia.MarkdownString) { }\n}\n\n@es5ClassCompat\nexport class TestCoverageCount {\n    constructor(public covered: number, public total: number) { }\n}\n\nexport class TestMessageStackFrame implements theia.TestMessageStackFrame {\n    constructor(\n        public label: string,\n        public uri?: theia.Uri,\n        public position?: Position\n    ) { }\n}\n\n@es5ClassCompat\nexport class FileCoverage {\n\n    detailedCoverage?: theia.FileCoverageDetail[];\n\n    static fromDetails(uri: theia.Uri, details: theia.FileCoverageDetail[]): FileCoverage {\n        const statements = new TestCoverageCount(0, 0);\n        const branches = new TestCoverageCount(0, 0);\n        const decl = new TestCoverageCount(0, 0);\n\n        for (const detail of details) {\n            if (detail instanceof StatementCoverage) {\n                statements.total += 1;\n                statements.covered += detail.executed ? 1 : 0;\n\n                for (const branch of detail.branches) {\n                    branches.total += 1;\n                    branches.covered += branch.executed ? 1 : 0;\n                }\n            } else {\n                decl.total += 1;\n                decl.covered += detail.executed ? 1 : 0;\n            }\n        }\n\n        const coverage = new FileCoverage(\n            uri,\n            statements,\n            branches.total > 0 ? branches : undefined,\n            decl.total > 0 ? decl : undefined,\n        );\n\n        coverage.detailedCoverage = details;\n\n        return coverage;\n    }\n\n    constructor(\n        public uri: theia.Uri,\n        public statementCoverage: TestCoverageCount,\n        public branchCoverage?: TestCoverageCount,\n        public declarationCoverage?: TestCoverageCount,\n        public includesTests?: theia.TestItem[],\n    ) { }\n}\n\n@es5ClassCompat\nexport class StatementCoverage implements theia.StatementCoverage {\n    constructor(public executed: number | boolean, public location: Position | Range, public branches: BranchCoverage[] = []) { }\n}\n\nexport class BranchCoverage implements theia.BranchCoverage {\n    constructor(public executed: number | boolean, public location?: Position | Range, public label?: string) { }\n}\n\n@es5ClassCompat\nexport class DeclarationCoverage implements theia.DeclarationCoverage {\n    constructor(public name: string, public executed: number | boolean, public location: Position | Range) { }\n}\n\nexport type FileCoverageDetail = StatementCoverage | DeclarationCoverage;\n\n@es5ClassCompat\nexport class TimelineItem {\n    timestamp: number;\n    label: string;\n    id?: string;\n    iconPath?: theia.Uri | { light: theia.Uri; dark: theia.Uri } | ThemeIcon;\n    description?: string;\n    detail?: string;\n    command?: theia.Command;\n    contextValue?: string;\n    constructor(label: string, timestamp: number) {\n        this.label = label;\n        this.timestamp = timestamp;\n    }\n}\n\n// #region Semantic Coloring\n\n@es5ClassCompat\nexport class SemanticTokensLegend {\n    public readonly tokenTypes: string[];\n    public readonly tokenModifiers: string[];\n\n    constructor(tokenTypes: string[], tokenModifiers: string[] = []) {\n        this.tokenTypes = tokenTypes;\n        this.tokenModifiers = tokenModifiers;\n    }\n}\n\nfunction isStrArrayOrUndefined(arg: unknown): arg is string[] | undefined {\n    return typeof arg === 'undefined' || isStringArray(arg);\n}\n\n@es5ClassCompat\nexport class SemanticTokensBuilder {\n\n    private _prevLine: number;\n    private _prevChar: number;\n    private _dataIsSortedAndDeltaEncoded: boolean;\n    private _data: number[];\n    private _dataLen: number;\n    private _tokenTypeStrToInt: Map<string, number>;\n    private _tokenModifierStrToInt: Map<string, number>;\n    private _hasLegend: boolean;\n\n    constructor(legend?: SemanticTokensLegend) {\n        this._prevLine = 0;\n        this._prevChar = 0;\n        this._dataIsSortedAndDeltaEncoded = true;\n        this._data = [];\n        this._dataLen = 0;\n        this._tokenTypeStrToInt = new Map<string, number>();\n        this._tokenModifierStrToInt = new Map<string, number>();\n        this._hasLegend = false;\n        if (legend) {\n            this._hasLegend = true;\n            for (let i = 0, len = legend.tokenTypes.length; i < len; i++) {\n                this._tokenTypeStrToInt.set(legend.tokenTypes[i], i);\n            }\n            for (let i = 0, len = legend.tokenModifiers.length; i < len; i++) {\n                this._tokenModifierStrToInt.set(legend.tokenModifiers[i], i);\n            }\n        }\n    }\n\n    public push(line: number, char: number, length: number, tokenType: number, tokenModifiers?: number): void;\n    public push(range: Range, tokenType: string, tokenModifiers?: string[]): void;\n    public push(arg0: number | Range, arg1: number | string, arg2?: number | string[], arg3?: number, arg4?: number): void {\n        if (typeof arg0 === 'number' && typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'number' &&\n            (typeof arg4 === 'number' || typeof arg4 === 'undefined')) {\n            if (typeof arg4 === 'undefined') {\n                arg4 = 0;\n            }\n            // 1st overload\n            return this._pushEncoded(arg0, arg1, arg2, arg3, arg4);\n        }\n        if (Range.isRange(arg0) && typeof arg1 === 'string' && isStrArrayOrUndefined(arg2)) {\n            // 2nd overload\n            return this._push(arg0, arg1, arg2);\n        }\n        throw illegalArgument();\n    }\n\n    private _push(range: theia.Range, tokenType: string, tokenModifiers?: string[]): void {\n        if (!this._hasLegend) {\n            throw new Error('Legend must be provided in constructor');\n        }\n        if (range.start.line !== range.end.line) {\n            throw new Error('`range` cannot span multiple lines');\n        }\n        if (!this._tokenTypeStrToInt.has(tokenType)) {\n            throw new Error('`tokenType` is not in the provided legend');\n        }\n        const line = range.start.line;\n        const char = range.start.character;\n        const length = range.end.character - range.start.character;\n        const nTokenType = this._tokenTypeStrToInt.get(tokenType)!;\n        let nTokenModifiers = 0;\n        if (tokenModifiers) {\n            for (const tokenModifier of tokenModifiers) {\n                if (!this._tokenModifierStrToInt.has(tokenModifier)) {\n                    throw new Error('`tokenModifier` is not in the provided legend');\n                }\n                const nTokenModifier = this._tokenModifierStrToInt.get(tokenModifier)!;\n                nTokenModifiers |= (1 << nTokenModifier) >>> 0;\n            }\n        }\n        this._pushEncoded(line, char, length, nTokenType, nTokenModifiers);\n    }\n\n    private _pushEncoded(line: number, char: number, length: number, tokenType: number, tokenModifiers: number): void {\n        if (this._dataIsSortedAndDeltaEncoded && (line < this._prevLine || (line === this._prevLine && char < this._prevChar))) {\n            // push calls were ordered and are no longer ordered\n            this._dataIsSortedAndDeltaEncoded = false;\n\n            // Remove delta encoding from data\n            const tokenCount = (this._data.length / 5) | 0;\n            let prevLine = 0;\n            let prevChar = 0;\n            for (let i = 0; i < tokenCount; i++) {\n                // eslint-disable-next-line @typescript-eslint/no-shadow\n                let line = this._data[5 * i];\n                // eslint-disable-next-line @typescript-eslint/no-shadow\n                let char = this._data[5 * i + 1];\n\n                if (line === 0) {\n                    // on the same line as previous token\n                    line = prevLine;\n                    char += prevChar;\n                } else {\n                    // on a different line than previous token\n                    line += prevLine;\n                }\n\n                this._data[5 * i] = line;\n                this._data[5 * i + 1] = char;\n\n                prevLine = line;\n                prevChar = char;\n            }\n        }\n\n        let pushLine = line;\n        let pushChar = char;\n        if (this._dataIsSortedAndDeltaEncoded && this._dataLen > 0) {\n            pushLine -= this._prevLine;\n            if (pushLine === 0) {\n                pushChar -= this._prevChar;\n            }\n        }\n\n        this._data[this._dataLen++] = pushLine;\n        this._data[this._dataLen++] = pushChar;\n        this._data[this._dataLen++] = length;\n        this._data[this._dataLen++] = tokenType;\n        this._data[this._dataLen++] = tokenModifiers;\n\n        this._prevLine = line;\n        this._prevChar = char;\n    }\n\n    private static _sortAndDeltaEncode(data: number[]): Uint32Array {\n        const pos: number[] = [];\n        const tokenCount = (data.length / 5) | 0;\n        for (let i = 0; i < tokenCount; i++) {\n            pos[i] = i;\n        }\n        pos.sort((a, b) => {\n            const aLine = data[5 * a];\n            const bLine = data[5 * b];\n            if (aLine === bLine) {\n                const aChar = data[5 * a + 1];\n                const bChar = data[5 * b + 1];\n                return aChar - bChar;\n            }\n            return aLine - bLine;\n        });\n        const result = new Uint32Array(data.length);\n        let prevLine = 0;\n        let prevChar = 0;\n        for (let i = 0; i < tokenCount; i++) {\n            const srcOffset = 5 * pos[i];\n            const line = data[srcOffset + 0];\n            const char = data[srcOffset + 1];\n            const length = data[srcOffset + 2];\n            const tokenType = data[srcOffset + 3];\n            const tokenModifiers = data[srcOffset + 4];\n\n            const pushLine = line - prevLine;\n            const pushChar = (pushLine === 0 ? char - prevChar : char);\n\n            const dstOffset = 5 * i;\n            result[dstOffset + 0] = pushLine;\n            result[dstOffset + 1] = pushChar;\n            result[dstOffset + 2] = length;\n            result[dstOffset + 3] = tokenType;\n            result[dstOffset + 4] = tokenModifiers;\n\n            prevLine = line;\n            prevChar = char;\n        }\n\n        return result;\n    }\n\n    public build(resultId?: string): SemanticTokens {\n        if (!this._dataIsSortedAndDeltaEncoded) {\n            return new SemanticTokens(SemanticTokensBuilder._sortAndDeltaEncode(this._data), resultId);\n        }\n        return new SemanticTokens(new Uint32Array(this._data), resultId);\n    }\n}\n\n@es5ClassCompat\nexport class SemanticTokens {\n    readonly resultId: string | undefined;\n    readonly data: Uint32Array;\n\n    constructor(data: Uint32Array, resultId?: string) {\n        this.resultId = resultId;\n        this.data = data;\n    }\n}\n\n@es5ClassCompat\nexport class SemanticTokensEdit {\n    readonly start: number;\n    readonly deleteCount: number;\n    readonly data: Uint32Array | undefined;\n\n    constructor(start: number, deleteCount: number, data?: Uint32Array) {\n        this.start = start;\n        this.deleteCount = deleteCount;\n        this.data = data;\n    }\n}\n\n@es5ClassCompat\nexport class SemanticTokensEdits {\n    readonly resultId: string | undefined;\n    readonly edits: SemanticTokensEdit[];\n\n    constructor(edits: SemanticTokensEdit[], resultId?: string) {\n        this.resultId = resultId;\n        this.edits = edits;\n    }\n}\n\nexport enum InputBoxValidationSeverity {\n    Info = 1,\n    Warning = 2,\n    Error = 3\n}\n\n// #endregion\n\n// #region Tab Inputs\n\nexport class TextTabInput {\n    constructor(readonly uri: URI) { }\n}\n\nexport class TextDiffTabInput {\n    constructor(readonly original: URI, readonly modified: URI) { }\n}\n\nexport class TextMergeTabInput {\n    constructor(readonly base: URI, readonly input1: URI, readonly input2: URI, readonly result: URI) { }\n}\n\nexport class CustomEditorTabInput {\n    constructor(readonly uri: URI, readonly viewType: string) { }\n}\n\nexport class WebviewEditorTabInput {\n    constructor(readonly viewType: string) { }\n}\n\nexport class TelemetryTrustedValue<T> {\n    readonly value: T;\n\n    constructor(value: T) {\n        this.value = value;\n    }\n}\n\nexport class TelemetryLogger {\n    readonly onDidChangeEnableStates: theia.Event<TelemetryLogger>;\n    readonly isUsageEnabled: boolean;\n    readonly isErrorsEnabled: boolean;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    logUsage(eventName: string, data?: Record<string, any | TelemetryTrustedValue<any>>): void { }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    logError(eventNameOrError: string | Error, data?: Record<string, any | TelemetryTrustedValue<any>>): void { }\n    dispose(): void { }\n    constructor(readonly sender: TelemetrySender, readonly options?: TelemetryLoggerOptions) { }\n}\n\nexport interface TelemetrySender {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    sendEventData(eventName: string, data?: Record<string, any>): void;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    sendErrorData(error: Error, data?: Record<string, any>): void;\n    flush?(): void | Thenable<void>;\n}\n\nexport interface TelemetryLoggerOptions {\n    /**\n     * Whether or not you want to avoid having the built-in common properties such as os, extension name, etc injected into the data object.\n     * Defaults to `false` if not defined.\n     */\n    readonly ignoreBuiltInCommonProperties?: boolean;\n\n    /**\n     * Whether or not unhandled errors on the extension host caused by your extension should be logged to your sender.\n     * Defaults to `false` if not defined.\n     */\n    readonly ignoreUnhandledErrors?: boolean;\n\n    /**\n     * Any additional common properties which should be injected into the data object.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    readonly additionalCommonProperties?: Record<string, any>;\n}\n\nexport class NotebookEditorTabInput {\n    constructor(readonly uri: URI, readonly notebookType: string) { }\n}\n\nexport class NotebookDiffEditorTabInput {\n    constructor(readonly original: URI, readonly modified: URI, readonly notebookType: string) { }\n}\n\nexport class TerminalEditorTabInput {\n    constructor() { }\n}\nexport class InteractiveWindowInput {\n    constructor(readonly uri: URI, readonly inputBoxUri: URI) { }\n}\n\n// #endregion\n\n// #region DocumentPaste\nexport class DocumentPasteEditKind {\n    static Empty: DocumentPasteEditKind;\n    static Text: DocumentPasteEditKind;\n    static TextUpdateImports: DocumentPasteEditKind;\n\n    constructor(public readonly value: string) { }\n\n    /** @stubbed */\n    append(...parts: string[]): CodeActionKind {\n        return CodeActionKind.Empty;\n    };\n\n    /** @stubbed */\n    intersects(other: CodeActionKind): boolean {\n        return false;\n    }\n\n    /** @stubbed */\n    contains(other: CodeActionKind): boolean {\n        return false;\n    }\n}\nDocumentPasteEditKind.Empty = new DocumentPasteEditKind('');\nDocumentPasteEditKind.Text = new DocumentDropOrPasteEditKind('text');\nDocumentPasteEditKind.TextUpdateImports = DocumentDropOrPasteEditKind.Text.append('updateImports');\n\n@es5ClassCompat\nexport class DocumentPasteEdit {\n    constructor(insertText: string | SnippetString, title: string, kind: DocumentDropOrPasteEditKind) {\n        this.insertText = insertText;\n        this.title = title;\n        this.kind = kind;\n    }\n    title: string;\n    kind: DocumentDropOrPasteEditKind;\n    insertText: string | SnippetString;\n    additionalEdit?: WorkspaceEdit;\n    yieldTo?: ReadonlyArray<DocumentDropOrPasteEditKind>;\n}\n\n/**\n * The reason why paste edits were requested.\n */\nexport enum DocumentPasteTriggerKind {\n    /**\n     * Pasting was requested as part of a normal paste operation.\n     */\n    Automatic = 0,\n\n    /**\n     * Pasting was requested by the user with the `paste as` command.\n     */\n    PasteAs = 1,\n}\n\n// #endregion\n\n// #region DocumentPaste\nexport enum EditSessionIdentityMatch {\n    Complete = 100,\n    Partial = 50,\n    None = 0\n}\n// #endregion\n\n// #region terminalCompletionProvider\nexport class TerminalCompletionList<T extends theia.TerminalCompletionItem> {\n\n    resourceRequestConfig?: theia.TerminalResourceRequestConfig;\n\n    items: T[];\n\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param resourceRequestConfig Indicates which resources should be shown as completions for the cwd of the terminal.\n     * @stubbed\n     */\n    constructor(items?: T[], resourceRequestConfig?: theia.TerminalResourceRequestConfig) {\n    }\n}\n\nexport enum TerminalCompletionItemKind {\n    File = 0,\n    Folder = 1,\n    Flag = 2,\n    Method = 3,\n    Argument = 4\n}\n// #endregion\n\n// #region terminalQuickFixProvider\nexport class TerminalQuickFixTerminalCommand {\n    /**\n     * The terminal command to run\n     */\n    terminalCommand: string;\n    /**\n     * Whether the command should be executed or just inserted (default)\n     */\n    shouldExecute?: boolean;\n    /**\n     * @stubbed\n     */\n    constructor(terminalCommand: string, shouldExecute?: boolean) { }\n}\nexport class TerminalQuickFixOpener {\n    /**\n     * The uri to open\n     */\n    uri: theia.Uri;\n    /**\n     * @stubbed\n     */\n    constructor(uri: theia.Uri) { }\n}\n\n// #region Chat\n\n/**\n * @stubbed\n */\nexport class ChatRequestTurn {\n    readonly prompt: string;\n    readonly participant: string;\n    readonly command?: string;\n    readonly references: theia.ChatPromptReference[];\n    readonly toolReferences: readonly theia.ChatLanguageModelToolReference[];\n    private constructor(prompt: string, command: string | undefined, references: theia.ChatPromptReference[], participant: string,\n        toolReferences: theia.ChatLanguageModelToolReference[]) {\n        this.prompt = prompt;\n        this.command = command;\n        this.participant = participant;\n        this.references = references;\n        this.toolReferences = toolReferences;\n    };\n}\n\n/**\n * @stubbed\n */\nexport class ChatResponseTurn {\n    readonly command?: string;\n\n    private constructor(readonly response: ReadonlyArray<theia.ChatResponseMarkdownPart | theia.ChatResponseFileTreePart | theia.ChatResponseAnchorPart\n        | theia.ChatResponseCommandButtonPart>, readonly result: theia.ChatResult, readonly participant: string) { }\n}\n\n/**\n * @stubbed\n */\nexport class ChatResponseAnchorPart {\n    value: URI | Location;\n    title?: string;\n\n    constructor(value: URI | Location, title?: string) { }\n}\n\n/**\n * @stubbed\n */\nexport class ChatResponseProgressPart {\n    value: string;\n\n    constructor(value: string) { }\n}\n\n/**\n * @stubbed\n */\nexport class ChatResponseReferencePart {\n    value: URI | Location;\n    iconPath?: URI | ThemeIcon | { light: URI; dark: URI; };\n\n    constructor(value: URI | theia.Location, iconPath?: URI | ThemeIcon | {\n        light: URI;\n        dark: URI;\n    }) { }\n}\n\n/**\n * @stubbed\n */\nexport class ChatResponseCommandButtonPart {\n    value: theia.Command;\n\n    constructor(value: theia.Command) { }\n}\n\n/**\n * @stubbed\n */\nexport class ChatResponseMarkdownPart {\n    value: theia.MarkdownString;\n\n    constructor(value: string | theia.MarkdownString) {\n    }\n}\n\n/**\n * @stubbed\n */\nexport class ChatResponseFileTreePart {\n    value: theia.ChatResponseFileTree[];\n    baseUri: URI;\n\n    constructor(value: theia.ChatResponseFileTree[], baseUri: URI) { }\n}\n\nexport type ChatResponsePart = ChatResponseMarkdownPart | ChatResponseFileTreePart | ChatResponseAnchorPart\n    | ChatResponseProgressPart | ChatResponseReferencePart | ChatResponseCommandButtonPart;\n\nexport enum ChatResultFeedbackKind {\n    Unhelpful = 0,\n    Helpful = 1,\n}\n\nexport enum LanguageModelChatMessageRole {\n    User = 1,\n    Assistant = 2\n}\n\n/**\n * @stubbed\n */\nexport class LanguageModelChatMessage {\n    static User(content: string | (LanguageModelTextPart | LanguageModelToolResultPart)[], name?: string): LanguageModelChatMessage {\n        return new LanguageModelChatMessage(LanguageModelChatMessageRole.User, content, name);\n    }\n\n    static Assistant(content: string | (LanguageModelTextPart | LanguageModelToolResultPart)[], name?: string): LanguageModelChatMessage {\n        return new LanguageModelChatMessage(LanguageModelChatMessageRole.Assistant, content, name);\n    }\n\n    constructor(public role: LanguageModelChatMessageRole, public content: string | (LanguageModelTextPart | LanguageModelToolResultPart | LanguageModelToolCallPart)[],\n        public name?: string) { }\n}\n\nexport class LanguageModelError extends Error {\n\n    static NoPermissions(message?: string): LanguageModelError {\n        return new LanguageModelError(message, LanguageModelError.NoPermissions.name);\n    }\n\n    static Blocked(message?: string): LanguageModelError {\n        return new LanguageModelError(message, LanguageModelError.Blocked.name);\n    }\n\n    static NotFound(message?: string): LanguageModelError {\n        return new LanguageModelError(message, LanguageModelError.NotFound.name);\n    }\n\n    readonly code: string;\n\n    constructor(message?: string, code?: string) {\n        super(message);\n        this.name = 'LanguageModelError';\n        this.code = code ?? '';\n    }\n}\n\nexport enum LanguageModelChatToolMode {\n    Auto = 1,\n    Required = 2\n}\n\n/**\n * @stubbed\n */\nexport class LanguageModelToolCallPart {\n    callId: string;\n    name: string;\n    input: object;\n\n    constructor(callId: string, name: string, input: object) { }\n}\n\n/**\n * @stubbed\n */\nexport class LanguageModelToolResultPart {\n    callId: string;\n    content: (theia.LanguageModelTextPart | theia.LanguageModelPromptTsxPart | unknown)[];\n\n    constructor(callId: string, content: (theia.LanguageModelTextPart | theia.LanguageModelPromptTsxPart | unknown)[]) { }\n}\n\n/**\n * @stubbed\n */\nexport class LanguageModelTextPart {\n    value: string;\n    constructor(value: string) { }\n}\n\n/**\n * @stubbed\n */\nexport class LanguageModelToolResult {\n    content: (theia.LanguageModelTextPart | theia.LanguageModelPromptTsxPart | unknown)[];\n\n    constructor(content: (theia.LanguageModelTextPart | theia.LanguageModelPromptTsxPart)[]) { }\n}\n\n/**\n * @stubbed\n */\nexport class LanguageModelPromptTsxPart {\n    value: unknown;\n\n    constructor(value: unknown) { }\n}\n// #endregion\n\n// #region Port Attributes\n\nexport enum PortAutoForwardAction {\n    Notify = 1,\n    OpenBrowser = 2,\n    OpenPreview = 3,\n    Silent = 4,\n    Ignore = 5\n}\n\nexport class PortAttributes {\n    constructor(public autoForwardAction: PortAutoForwardAction) {\n    }\n}\n\n// #endregion\n\n// #region Debug Visualization\n\nexport class DebugVisualization {\n    iconPath?: URI | { light: URI; dark: URI } | ThemeIcon;\n    visualization?: theia.Command | { treeId: string };\n\n    constructor(public name: string) {\n    }\n}\n\n// #endregion\n\n// #region Terminal Shell Integration\n\nexport enum TerminalShellExecutionCommandLineConfidence {\n    Low = 0,\n    Medium = 1,\n    High = 2\n}\n\n// #endregion\n\n/**\n * McpStdioServerDefinition represents an MCP server available by running\n * a local process and operating on its stdin and stdout streams. The process\n * will be spawned as a child process of the extension host and by default\n * will not run in a shell environment.\n */\nexport class McpStdioServerDefinition {\n    /**\n     * The human-readable name of the server.\n     */\n    readonly label: string;\n\n    /**\n     * The working directory used to start the server.\n     */\n    cwd?: URI;\n\n    /**\n     * The command used to start the server. Node.js-based servers may use\n     * `process.execPath` to use the editor's version of Node.js to run the script.\n     */\n    command: string;\n\n    /**\n     * Additional command-line arguments passed to the server.\n     */\n    args?: string[];\n\n    /**\n     * Optional additional environment information for the server. Variables\n     * in this environment will overwrite or remove (if null) the default\n     * environment variables of the editor's extension host.\n     */\n    env?: Record<string, string | number | null>;\n\n    /**\n     * Optional version identification for the server. If this changes, the\n     * editor will indicate that tools have changed and prompt to refresh them.\n     */\n    version?: string;\n\n    /**\n     * @param label The human-readable name of the server.\n     * @param command The command used to start the server.\n     * @param args Additional command-line arguments passed to the server.\n     * @param env Optional additional environment information for the server.\n     * @param version Optional version identification for the server.\n     */\n    constructor(label: string, command: string, args?: string[], env?: Record<string, string | number | null>, version?: string) {\n        this.label = label;\n        this.command = command;\n        this.args = args;\n        this.env = env;\n        this.version = version;\n    }\n}\n\n/**\n * McpHttpServerDefinition represents an MCP server available using the\n * Streamable HTTP transport.\n */\nexport class McpHttpServerDefinition {\n    /**\n     * The human-readable name of the server.\n     */\n    readonly label: string;\n\n    /**\n     * The URI of the server. The editor will make a POST request to this URI\n     * to begin each session.\n     */\n    uri: URI;\n\n    /**\n     * Optional additional heads included with each request to the server.\n     */\n    headers?: Record<string, string>;\n\n    /**\n     * Optional version identification for the server. If this changes, the\n     * editor will indicate that tools have changed and prompt to refresh them.\n     */\n    version?: string;\n\n    /**\n     * @param label The human-readable name of the server.\n     * @param uri The URI of the server.\n     * @param headers Optional additional heads included with each request to the server.\n     */\n    constructor(label: string, uri: URI, headers?: Record<string, string>, version?: string) {\n        this.label = label;\n        this.uri = uri;\n        this.headers = headers;\n        this.version = version;\n    };\n}\n\n/**\n * Definitions that describe different types of Model Context Protocol servers,\n * which can be returned from the {@link McpServerDefinitionProvider}.\n */\nexport type McpServerDefinition = McpStdioServerDefinition | McpHttpServerDefinition;\n\n"],"names":[],"sourceRoot":""}