{"version":3,"file":"vendors-node_modules_theia_test_lib_browser_test-execution-progress-service_js.js","mappings":"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","sources":["webpack:///./node_modules/@theia/test/src/browser/test-execution-progress-service.ts?","webpack:///./node_modules/@theia/test/src/browser/test-preferences.ts?","webpack:///./node_modules/@theia/test/src/browser/view/test-result-view-contribution.ts?","webpack:///./node_modules/@theia/test/src/browser/view/test-result-widget.ts?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2024 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { Widget } from '@theia/core/lib/browser';\nimport { TestResultViewContribution } from './view/test-result-view-contribution';\nimport { TestViewContribution } from './view/test-view-contribution';\nimport { TestPreferences } from './test-preferences';\n\nexport interface TestExecutionProgressService {\n    onTestRunRequested(preserveFocus: boolean): Promise<void>;\n}\n\nexport const TestExecutionProgressService = Symbol('TestExecutionProgressService');\n\n@injectable()\nexport class DefaultTestExecutionProgressService implements TestExecutionProgressService {\n\n    @inject(TestResultViewContribution)\n    protected readonly testResultView: TestResultViewContribution;\n\n    @inject(TestViewContribution)\n    protected readonly testView: TestViewContribution;\n\n    @inject(TestPreferences)\n    protected readonly testPreferences: TestPreferences;\n\n    async onTestRunRequested(preserveFocus: boolean): Promise<void> {\n        if (!preserveFocus) {\n            const openTesting = this.testPreferences['testing.openTesting'];\n            if (openTesting === 'openOnTestStart') {\n                this.openTestResultView();\n            }\n        }\n    }\n\n    async openTestResultView(): Promise<Widget> {\n        return this.testResultView.openView({ activate: true });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2024 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { interfaces } from '@theia/core/shared/inversify';\nimport { createPreferenceProxy, PreferenceProxy, PreferenceService, PreferenceContribution, PreferenceSchema } from '@theia/core/lib/browser';\nimport { nls } from '@theia/core/lib/common/nls';\n\nexport const TestConfigSchema: PreferenceSchema = {\n    type: 'object',\n    properties: {\n        'testing.openTesting': {\n            type: 'string',\n            enum: ['neverOpen', 'openOnTestStart'],\n            enumDescriptions: [\n                nls.localizeByDefault('Never automatically open the testing views'),\n                nls.localizeByDefault('Open the test results view when tests start'),\n            ],\n            description: nls.localizeByDefault('Controls when the testing view should open.'),\n            default: 'neverOpen',\n            scope: 'resource',\n        }\n    }\n};\n\nexport interface TestConfiguration {\n    'testing.openTesting': 'neverOpen' | 'openOnTestStart';\n}\n\nexport const TestPreferenceContribution = Symbol('TestPreferenceContribution');\nexport const TestPreferences = Symbol('TestPreferences');\nexport type TestPreferences = PreferenceProxy<TestConfiguration>;\n\nexport function createTestPreferences(preferences: PreferenceService, schema: PreferenceSchema = TestConfigSchema): TestPreferences {\n    return createPreferenceProxy(preferences, schema);\n}\n\nexport const bindTestPreferences = (bind: interfaces.Bind): void => {\n    bind(TestPreferences).toDynamicValue(ctx => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        const contribution = ctx.container.get<PreferenceContribution>(TestPreferenceContribution);\n        return createTestPreferences(preferences, contribution.schema);\n    }).inSingletonScope();\n    bind(TestPreferenceContribution).toConstantValue({ schema: TestConfigSchema });\n    bind(PreferenceContribution).toService(TestPreferenceContribution);\n};\n","// *****************************************************************************\n// Copyright (C) 2023 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { AbstractViewContribution } from '@theia/core/lib/browser';\nimport { injectable } from '@theia/core/shared/inversify';\nimport { TestResultWidget } from './test-result-widget';\nimport { nls } from '@theia/core';\n\n@injectable()\nexport class TestResultViewContribution extends AbstractViewContribution<TestResultWidget> {\n    constructor() {\n        super({\n            widgetId: TestResultWidget.ID,\n            widgetName: nls.localizeByDefault('Test Results'),\n            defaultWidgetOptions: {\n                area: 'bottom'\n            }\n        });\n\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { BaseWidget, LabelProvider, Message, OpenerService, codicon } from '@theia/core/lib/browser';\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { TestOutputUIModel } from './test-output-ui-model';\nimport { DisposableCollection, nls } from '@theia/core';\nimport { TestFailure, TestMessage, TestMessageStackFrame } from '../test-service';\nimport { MarkdownRenderer } from '@theia/core/lib/browser/markdown-rendering/markdown-renderer';\nimport { MarkdownString } from '@theia/core/lib/common/markdown-rendering';\nimport { URI } from '@theia/core/lib/common/uri';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\nimport { NavigationLocationService } from '@theia/editor/lib/browser/navigation/navigation-location-service';\nimport { NavigationLocation, Position } from '@theia/editor/lib/browser/navigation/navigation-location';\n@injectable()\nexport class TestResultWidget extends BaseWidget {\n\n    static readonly ID = 'test-result-widget';\n\n    @inject(TestOutputUIModel) uiModel: TestOutputUIModel;\n    @inject(MarkdownRenderer) markdownRenderer: MarkdownRenderer;\n    @inject(OpenerService) openerService: OpenerService;\n    @inject(FileService) fileService: FileService;\n    @inject(NavigationLocationService) navigationService: NavigationLocationService;\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n\n    protected toDisposeOnRender = new DisposableCollection();\n    protected input: TestMessage[] = [];\n    protected content: HTMLDivElement;\n\n    constructor() {\n        super();\n        this.addClass('theia-test-result-view');\n        this.id = TestResultWidget.ID;\n        this.title.label = nls.localizeByDefault('Test Results');\n        this.title.caption = nls.localizeByDefault('Test Results');\n        this.title.iconClass = codicon('checklist');\n        this.title.closable = true;\n        this.scrollOptions = {\n            minScrollbarLength: 35,\n        };\n    }\n\n    @postConstruct()\n    init(): void {\n        this.uiModel.onDidChangeSelectedTestState(e => {\n            if (TestFailure.is(e)) {\n                this.setInput(e.messages);\n            }\n        });\n    }\n\n    protected override onAfterAttach(msg: Message): void {\n        super.onAfterAttach(msg);\n        this.content = this.node.ownerDocument.createElement('div');\n        this.node.append(this.content);\n    }\n\n    setInput(messages: TestMessage[]): void {\n        this.input = messages;\n        this.update();\n    }\n\n    protected override onUpdateRequest(msg: Message): void {\n        this.render();\n        super.onUpdateRequest(msg);\n    }\n\n    render(): void {\n        this.toDisposeOnRender.dispose();\n        this.toDisposeOnRender = new DisposableCollection();\n        this.content.innerHTML = '';\n        this.input.forEach(message => {\n            if (MarkdownString.is(message.message)) {\n                const line = this.markdownRenderer.render(message.message);\n                this.content.append(line.element);\n                this.toDisposeOnRender.push(line);\n            } else {\n                this.content.append(this.node.ownerDocument.createTextNode(message.message));\n            }\n            if (message.stackTrace) {\n                const stackTraceElement = this.node.ownerDocument.createElement('div');\n                message.stackTrace.map(frame => this.renderFrame(frame, stackTraceElement));\n                this.content.append(stackTraceElement);\n            }\n        });\n    }\n\n    renderFrame(stackFrame: TestMessageStackFrame, stackTraceElement: HTMLElement): void {\n        const frameElement = stackTraceElement.ownerDocument.createElement('div');\n        frameElement.classList.add('debug-frame');\n        frameElement.append(`    ${nls.localize('theia/test/stackFrameAt', 'at')} ${stackFrame.label}`);\n\n        // Add URI information as clickable links\n        if (stackFrame.uri) {\n            frameElement.append(' (');\n            const uri = new URI(stackFrame.uri);\n\n            const link = this.node.ownerDocument.createElement('a');\n            let content = `${this.labelProvider.getName(uri)}`;\n            if (stackFrame.position) {\n                // Display Position as a 1-based position, similar to Monaco ones.\n                const monacoPosition = {\n                    lineNumber: stackFrame.position.line + 1,\n                    column: stackFrame.position.character + 1\n                };\n                content += `:${monacoPosition.lineNumber}:${monacoPosition.column}`;\n            }\n            link.textContent = content;\n            link.href = `${uri}`;\n            link.onclick = () => this.openUriInWorkspace(uri, stackFrame.position);\n            frameElement.append(link);\n            frameElement.append(')');\n        }\n        stackTraceElement.append(frameElement);\n    }\n\n    async openUriInWorkspace(uri: URI, position?: Position): Promise<void> {\n        this.fileService.resolve(uri).then(stat => {\n            if (stat.isFile) {\n                this.navigationService.reveal(NavigationLocation.create(uri, position ?? { line: 0, character: 0 }));\n            }\n        });\n    }\n\n    override dispose(): void {\n        this.toDisposeOnRender.dispose();\n    }\n}\n"],"names":[],"sourceRoot":""}