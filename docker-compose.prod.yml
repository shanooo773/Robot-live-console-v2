# Production Docker Compose Override
# Use with: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up

services:
  # MySQL with production optimizations
  mysql:
    command: >
      --default-authentication-plugin=mysql_native_password
      --innodb-buffer-pool-size=256M
      --max-connections=100
      --query-cache-type=1
      --query-cache-size=32M
      --slow-query-log=1
      --long-query-time=2
    volumes:
      - /opt/robot-console/data/mysql:/var/lib/mysql
      - ./mysql/prod-config:/etc/mysql/conf.d:ro

  # Backend with production settings
  backend:
    environment:
      ENVIRONMENT: production
      # Production CORS should be set via .env file
    volumes:
      - /opt/robot-console/data/videos:/app/videos
      - /opt/robot-console/projects:/app/projects
      - /opt/robot-console/logs:/app/logs
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"

  # Frontend with production nginx
  frontend:
    volumes:
      - ./nginx/prod.conf:/etc/nginx/conf.d/default.conf:ro
      - /opt/robot-console/logs/nginx:/var/log/nginx
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

  # Theia with production persistence
  theia:
    volumes:
      - /opt/robot-console/data/theia:/home/project
      - /opt/robot-console/projects:/home/project/shared:rw
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

# Production volumes with proper paths
volumes:
  mysql_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/robot-console/data/mysql
  
  video_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/robot-console/data/videos
  
  theia_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/robot-console/data/theia